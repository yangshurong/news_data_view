[{"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\main.js":"1","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\registerServiceWorker.js":"2","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\App.vue":"3","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\router\\index.js":"4","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\store\\index.js":"5","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\views\\HomeView.vue":"6","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\views\\init_video.vue":"7","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\views\\ShiView.vue":"8","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\views\\ShengView.vue":"9","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\MainPageLeft.vue":"10","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\MainPageRight.vue":"11","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\main_support_right.vue":"12","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\echarts_test.vue":"13","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\MainPageRightMap.vue":"14"},{"size":909,"mtime":1652082518838,"results":"15","hashOfConfig":"16"},{"size":903,"mtime":1650957069446,"results":"17","hashOfConfig":"16"},{"size":165,"mtime":1650973351854,"results":"18","hashOfConfig":"16"},{"size":797,"mtime":1652186567783,"results":"19","hashOfConfig":"16"},{"size":186,"mtime":1650957069457,"results":"20","hashOfConfig":"16"},{"size":1677,"mtime":1652077137179,"results":"21","hashOfConfig":"16"},{"size":3121,"mtime":1652187474326,"results":"22","hashOfConfig":"16"},{"size":15759,"mtime":1652092638630,"results":"23","hashOfConfig":"16"},{"size":23829,"mtime":1652093940824,"results":"24","hashOfConfig":"16"},{"size":3299,"mtime":1651926744339,"results":"25","hashOfConfig":"16"},{"size":3280,"mtime":1651833487685,"results":"26","hashOfConfig":"16"},{"size":386,"mtime":1651122541143,"results":"27","hashOfConfig":"16"},{"size":839,"mtime":1651416624122,"results":"28","hashOfConfig":"16"},{"size":14926,"mtime":1652072548986,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b2las8",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\main.js",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\registerServiceWorker.js",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\App.vue",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\router\\index.js",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\store\\index.js",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\views\\HomeView.vue",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\views\\init_video.vue",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\views\\ShiView.vue",["62","63"],"<template>\r\n  <div class=\"ShiBackground\">\r\n    <div class=\"title\"></div>\r\n    <div class=\"content\">\r\n      <div class=\"policy_content\"></div>\r\n      <div class=\"news_content\">\r\n        <div class=\"map_chart\">\r\n          <div\r\n            ref=\"region\"\r\n            style=\"width: 100%; height: 100%; margin-left: 0px\"\r\n          ></div>\r\n        </div>\r\n        <div class=\"time\">\r\n          <div style=\"font-size: 18px; color: #ffffff; margin-bottom: 0px\">\r\n            2017\r\n          </div>\r\n          <el-slider\r\n            v-model=\"time_select_value\"\r\n            :max=\"2021\"\r\n            :min=\"2017\"\r\n            @change=\"get_time_change\"\r\n            :step=\"1\"\r\n            class=\"time_select\"\r\n          >\r\n          </el-slider>\r\n\r\n          <div style=\"font-size: 18px; color: #ffffff; margin-top: 0px\">\r\n            2021\r\n          </div>\r\n        </div>\r\n        <div class=\"mind\">\r\n          <div\r\n            ref=\"mind\"\r\n            style=\"width: 100%; height: 100%; margin-left: 0px\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"right\">\r\n        <div class=\"tag_num\">\r\n          <div\r\n            ref=\"tag_num\"\r\n            style=\"\r\n              width: 100%;\r\n              height: 100%;\r\n              margin-left: 0px;\r\n              margin-top: 30px;\r\n            \"\r\n          ></div>\r\n        </div>\r\n        <div class=\"wordCloud\">\r\n          <div\r\n            ref=\"word_cloud\"\r\n            style=\"width: 100%; height: 100%; margin-left: 0px\"\r\n          ></div>\r\n        </div>\r\n        <div class=\"rank_speed\">\r\n          <div style=\"width:100%;height:50px\"></div>\r\n          <div\r\n            v-for=\"(item, i) in rank_speed_list\"\r\n            :key=\"i\"\r\n          >\r\n            <div class=\"list_item\"\r\n                :class=\"{ 'as_first': i !== 0 }\">\r\n              <div class=\"item_rank\">{{ item.rank }}</div>\r\n              <div class=\"item_title\"\r\n              :class=\"{ 'item_title_content': i !== 0 }\">{{ item.title }}</div>\r\n              <div class=\"item_speed\">{{ item.speed }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport test_mind_data from \"../assets/Shi/test_mind_data.json\";\r\nimport word_cloud_data from \"../assets/Sheng/item_data/word_cloud_3ddata.json\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      cur_info: {\r\n        year: \"2017\",\r\n        title: \"政治\",\r\n        region: \"青岛\",\r\n        region_data: \"\",\r\n      },\r\n      time_select_value: 0,\r\n      rank_speed_list: [\r\n        {\r\n          rank: \"排名\",\r\n          title: \"主题\",\r\n          speed: \"响应时间\",\r\n        },\r\n        {\r\n          rank: 1,\r\n          title: \"政治\",\r\n          speed: 0.2,\r\n        },\r\n        {\r\n          rank: \"2\",\r\n          title: \"民生\",\r\n          speed: 1.9,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.set_region_map();\r\n    this.set_policy_detail();\r\n    this.set_wordcloud();\r\n    this.set_num_tag();\r\n  },\r\n  methods: {\r\n    get_time_change(new_time) {\r\n      //时间变化后\r\n      console.log(new_time.toString());\r\n      //this.cur_info.year = new_time.toString();\r\n      //this.set_num_tag();\r\n      //this.set_speed_tag();\r\n    },\r\n    async set_region_map() {\r\n      await this.$axios({\r\n        url: \"https://geo.datav.aliyun.com/areas_v3/bound/370200_full.json\",\r\n        method: \"get\",\r\n      }).then((res) => {\r\n        this.cur_info.region_data = res.data;\r\n      });\r\n      this.$echarts.registerMap(\r\n        this.cur_info.region,\r\n        this.cur_info.region_data\r\n      );\r\n      let _data = this.cur_info.region_data.features,\r\n        scar_data = [];\r\n      for (let i in _data) {\r\n        let x = _data[i].properties.center[0],\r\n          y = _data[i].properties.center[1],\r\n          z = _data[i].properties.name;\r\n        scar_data.push([x, y, z]);\r\n      }\r\n      this.speed_region_Chart = this.$echarts.init(this.$refs.region);\r\n      let layoutSize = \"600\",\r\n        aspectScale = 687 / 415;\r\n      let speed_region_option = {\r\n        geo: {\r\n          map: this.cur_info.region,\r\n          z: 2,\r\n          aspectScale: aspectScale,\r\n          layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n          layoutSize: layoutSize,\r\n          zoom: 1, //当前视角的缩放比例\r\n          scaleLimit: {\r\n            //滚轮缩放的极限控制\r\n            min: 1,\r\n            max: 2,\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: false,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n            emphasis: {\r\n              show: false,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              shadowColor: \"rgba(21,55,112,255)\",\r\n              shadowOffsetX: 10,\r\n              shadowOffsetY: 10,\r\n              areaColor: \"rgba(24,48,82,255)\",\r\n              borderColor: \"rgba(84,113,166)\",\r\n              borderWidth: 1.5,\r\n            },\r\n            emphasis: {\r\n              areaColor: \"rgba(7,69,162)\",\r\n            },\r\n          },\r\n        },\r\n\r\n        series: [\r\n          {\r\n            type: \"map\",\r\n            mapType: this.cur_info.region,\r\n            aspectScale: aspectScale,\r\n            zoom: 1,\r\n            layoutSize: layoutSize,\r\n            z: 1,\r\n            layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n              },\r\n              emphasis: {\r\n                show: false,\r\n              },\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                shadowColor: \"rgba(22,57,89,255)\",\r\n                shadowOffsetX: 20,\r\n                shadowOffsetY: 20,\r\n                //areaColor: \"rgba(22,57,89,255)\",\r\n                borderColor: \"#4a75ff\",\r\n                borderWidth: 7,\r\n              },\r\n              emphasis: {\r\n                areaColor: \"rgba(22,57,89,0)\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      this.speed_region_Chart.setOption(speed_region_option);\r\n    },\r\n    async set_policy_detail() {\r\n      let option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          triggerOn: \"mousemove\",\r\n        },\r\n        series: [\r\n          {\r\n            type: \"tree\",\r\n            data: [test_mind_data],\r\n            top: \"1%\",\r\n            left: \"7%\",\r\n            bottom: \"1%\",\r\n            right: \"20%\",\r\n            symbolSize: 10,\r\n            label: {\r\n              position: \"left\",\r\n              verticalAlign: \"middle\",\r\n              align: \"right\",\r\n              fontSize: 10,\r\n              color: \"#FFFFFF\",\r\n            },\r\n            leaves: {\r\n              label: {\r\n                position: \"right\",\r\n                verticalAlign: \"middle\",\r\n                align: \"left\",\r\n              },\r\n            },\r\n            emphasis: {\r\n              focus: \"ancestor\",\r\n            },\r\n            expandAndCollapse: true,\r\n            animationDuration: 550,\r\n            animationDurationUpdate: 750,\r\n          },\r\n        ],\r\n      };\r\n      this.detail_chart = this.$echarts.init(this.$refs.mind);\r\n      this.detail_chart.setOption(option);\r\n    },\r\n    async set_wordcloud() {\r\n      //-------------------------set wordcloud\r\n      this.word_cloud_Chart = this.$echarts.init(this.$refs.word_cloud);\r\n      var maskImage = new Image();\r\n      maskImage.src = word_cloud_data.image;\r\n      this.word_cloud_Chart.setOption({\r\n        series: [\r\n          {\r\n            type: \"wordCloud\",\r\n            shape: \"circle\",\r\n            keepAspect: false,\r\n            left: \"center\",\r\n            top: \"center\",\r\n            width: \"70%\",\r\n            height: \"70%\",\r\n            right: null,\r\n            bottom: null,\r\n            //maskImage:maskImage,\r\n            sizeRange: [12, 30],\r\n            rotationRange: [-45, 45],\r\n            rotationStep: 90,\r\n            // 词间距，数值越小，间距越小，这里间距太小的话，会出现大词把小词套住的情况，比如一个大的口字，中间会有比较大的空隙，这时候他会把一些很小的字放在口字里面，这样的话，鼠标就无法选中里面的那个小字\r\n            gridSize: 2,\r\n            // 允许词太大的时候，超出画布的范围\r\n            drawOutOfBound: false,\r\n            // 布局的时候是否有动画\r\n            layoutAnimation: false,\r\n            textStyle: {\r\n              fontWeight: \"bold\",\r\n              color: function () {\r\n                return (\r\n                  \"rgb(\" +\r\n                  [\r\n                    Math.round(Math.random() * 254),\r\n                    Math.round(Math.random() * 254),\r\n                    Math.round(Math.random() * 254),\r\n                  ].join(\",\") +\r\n                  \")\"\r\n                );\r\n              },\r\n            },\r\n            emphasis: {\r\n              focus: \"self\",\r\n              textStyle: {\r\n                textShadowBlur: 10,\r\n                textShadowColor: \"#333\",\r\n              },\r\n            },\r\n\r\n            // Data is an array. Each array item must have name and value property.\r\n            data: word_cloud_data.value,\r\n          },\r\n        ],\r\n      });\r\n    },\r\n    async set_num_tag() {\r\n      // prettier-ignore\r\n      let dataAxis = ['政治','经济','资源','生产','文化','民生'];\r\n      // prettier-ignore\r\n      let data = [10,20,16,30,41,55];\r\n      let yMax = 500;\r\n      let dataShadow = [];\r\n      for (let i = 0; i < data.length; i++) {\r\n        dataShadow.push(yMax);\r\n      }\r\n      let echarts = this.$echarts;\r\n      let option = {\r\n        //title: {\r\n        //  text: \"特性示例：渐变色 阴影 点击缩放\",\r\n        //  subtext: \"Feature Sample: Gradient Color, Shadow, Click Zoom\",\r\n        //},\r\n        xAxis: {\r\n          name: \"主题\",\r\n          data: dataAxis,\r\n          axisLabel: {\r\n            inside: true,\r\n            color: \"#FFFFFF\",\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n            //fontSize:\"20px\"\r\n          },\r\n\r\n          z: 10,\r\n        },\r\n        yAxis: {\r\n          name: \"个数\",\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n            //fontSize:\"20px\"\r\n          },\r\n\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        dataZoom: [\r\n          {\r\n            type: \"inside\",\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            type: \"bar\",\r\n            showBackground: true,\r\n            itemStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: \"#83bff6\" },\r\n                { offset: 0.5, color: \"#188df0\" },\r\n                { offset: 1, color: \"#188df0\" },\r\n              ]),\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  { offset: 0, color: \"#2378f7\" },\r\n                  { offset: 0.7, color: \"#2378f7\" },\r\n                  { offset: 1, color: \"#83bff6\" },\r\n                ]),\r\n              },\r\n            },\r\n            data: data,\r\n          },\r\n        ],\r\n      };\r\n      // Enable data zoom when user click bar.\r\n      const zoomSize = 3;\r\n      this.num_tag_chart = this.$echarts.init(this.$refs.tag_num);\r\n      let that = this;\r\n      this.num_tag_chart.on(\"click\", function (params) {\r\n        let h = parseInt(Math.max(params.dataIndex - zoomSize / 2, 0));\r\n        let t = parseInt(\r\n          Math.min(params.dataIndex + zoomSize / 2, data.length - 1)\r\n        );\r\n        console.log(h, t);\r\n        that.num_tag_chart.dispatchAction({\r\n          type: \"dataZoom\",\r\n          startValue: dataAxis[h],\r\n          endValue: dataAxis[t],\r\n        });\r\n      });\r\n      this.num_tag_chart.setOption(option);\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    if (this.speed_region_Chart) {\r\n      this.speed_region_Chart.dispose();\r\n      this.speed_region_Chart = null;\r\n    }\r\n    if (this.detail_chart) {\r\n      this.detail_chart.dispose();\r\n      this.detail_chart = null;\r\n    }\r\n    if (this.word_cloud_Chart) {\r\n      this.word_cloud_Chart.dispose();\r\n      this.word_cloud_Chart = null;\r\n    }\r\n    if (this.num_tag_chart) {\r\n      this.num_tag_chart.dispose();\r\n      this.num_tag_chart = null;\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.tag_num {\r\n  width: 100%;\r\n  height: 340px;\r\n  background: url(../assets/Shi/tag_num.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n}\r\n.wordCloud {\r\n  width: 100%;\r\n  margin-top: 12px;\r\n  height: 302px;\r\n  background: url(../assets/Shi/3dwordCloud.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n}\r\n.rank_speed {\r\n  width: 100%;\r\n  margin-top: 12px;\r\n  margin-left: 6px;\r\n  height: 327px;\r\n  background: url(../assets/Shi/rank_speed.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n  display: flex;\r\n  flex-flow: column;\r\n  .as_first {\r\n    margin-top: 91px;\r\n  }\r\n  .list_item {\r\n    display: flex;\r\n    width: 489px;\r\n    margin-left: 129px;\r\n    margin-top: 10px;\r\n    .item_rank {\r\n      color: rgba(255, 255, 255, 100);\r\n      font-size: 20px;\r\n      text-align: left;\r\n      font-weight: bold;\r\n      width: 110px;\r\n      //font-family: SourceHanSansSC-regular;\r\n    }\r\n    .item_title {\r\n      color: rgba(161, 158, 158, 100);\r\n      font-size: 20px;\r\n      width: 86px+31px;\r\n      text-align: left;\r\n    }\r\n    .item_speed {\r\n      color: rgba(161, 158, 158, 100);\r\n      font-size: 20px;\r\n    }\r\n    .item_title_content{\r\n      color: rgba(231,0,0);\r\n      font-size: 20px;\r\n      width: 86px+31px;\r\n      text-align: left;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n.news_content {\r\n  .map_chart {\r\n    width: 686px;\r\n    height: 415px;\r\n    margin: 89px 0 0 22px;\r\n  }\r\n  .time {\r\n    width: 100%;\r\n    height: 28px;\r\n    margin-left: 83px;\r\n    margin-top: 0px;\r\n    display: flex;\r\n    .time_select {\r\n      width: 496px;\r\n      height: 28px;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n  .mind {\r\n    width: 538px;\r\n    height: 390px;\r\n    margin-left: 77px;\r\n  }\r\n  width: 735px;\r\n  height: 947px;\r\n  margin-top: 114px;\r\n  margin-left: 45px;\r\n  background: url(../assets/Shi/news_content.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n  display: flex;\r\n  flex-flow: column;\r\n}\r\n.policy_content {\r\n  width: 487px;\r\n  height: 997px;\r\n  margin-top: 43px;\r\n  margin-left: 54px;\r\n  background: url(../assets/Shi/policy_content.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n}\r\n.right {\r\n  margin-top: 69px;\r\n  margin-left: 36px;\r\n  width: 567px;\r\n  height: 775px+287px;\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  justify-content: flex-start;\r\n}\r\n\r\n.ShiBackground {\r\n  width: 1936px;\r\n  height: 1083px;\r\n  background: url(../assets/Sheng/ShengBackground.PNG) no-repeat;\r\n  background-size: 100% 100%;\r\n  .title {\r\n    width: 1936px;\r\n    height: 343px;\r\n    background: url(../assets/main_page_title.png) no-repeat;\r\n    background-size: 100% 100%;\r\n    background-position: center top;\r\n  }\r\n  .content {\r\n    margin-top: -343px;\r\n    width: 1936px;\r\n    height: 1083px-343px;\r\n    display: flex;\r\n  }\r\n}\r\n</style>\r\n","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\views\\ShengView.vue",["64"],"<template>\r\n  <div class=\"ShengBackground\">\r\n    <section class=\"item_left\">\r\n      <LeftPage @title_change=\"title_change\" />\r\n    </section>\r\n    <div class=\"item_right\">\r\n      <div class=\"title\"></div>\r\n      <div class=\"content\">\r\n        <div class=\"left\">\r\n          <div class=\"speed_region\" style=\"display: flex\">\r\n            <div class=\"time_select\">\r\n              <div style=\"font-size: 18px; color: #ffffff; margin-bottom: 5px\">\r\n                2021\r\n              </div>\r\n              <el-slider\r\n                v-model=\"time_select_value\"\r\n                :max=\"2021\"\r\n                :min=\"2017\"\r\n                vertical\r\n                @change=\"get_time_change\"\r\n                height=\"252px\"\r\n                :step=\"1\"\r\n              >\r\n              </el-slider>\r\n              <div style=\"font-size: 18px; color: #ffffff; margin-top: 10px\">\r\n                2017\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"speed_region_chart\"\r\n              ref=\"speed_region\"\r\n              style=\"width: 776px; height: 530px; margin-top: 60px\"\r\n            ></div>\r\n          </div>\r\n          <div class=\"down\">\r\n            <div class=\"news\">\r\n              <Carousel\r\n                autoplay\r\n                v-model=\"news_value\"\r\n                loop\r\n                style=\"width: 100%; height: 100%\"\r\n              >\r\n                <CarouselItem v-for=\"(item, i) in news_list\" :key=\"i\">\r\n                  <img\r\n                    :src=\"item.url\"\r\n                    alt=\"加载失败\"\r\n                    width=\"407\"\r\n                    height=\"209\"\r\n                    style=\"margin: 86px 0 0 70px\"\r\n                  />\r\n                </CarouselItem>\r\n              </Carousel>\r\n            </div>\r\n            <div class=\"speed_average\">\r\n              <div\r\n                ref=\"speed_average\"\r\n                style=\"width: 100%; height: 100%; margin-top: 30px\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"right\">\r\n          <div class=\"num_tag\">\r\n            <div\r\n              ref=\"num_tag\"\r\n              style=\"width: 95%; height: 95%; margin-top: 10px\"\r\n            ></div>\r\n          </div>\r\n          <div class=\"word_cloud\">\r\n            <svg :width=\"width\" :height=\"height\" style=\"margin-top: 50px\">\r\n              <a\r\n                class=\"fontA\"\r\n                :style=\"{ fill: tag.color, 'font-weight': 'bold' }\"\r\n                v-for=\"(tag, index) in tags\"\r\n                :key=\"`tag-${index}`\"\r\n              >\r\n                <text\r\n                  :id=\"tag.id\"\r\n                  :x=\"tag.x\"\r\n                  :y=\"tag.y\"\r\n                  :font-size=\"20 * (600 / (600 - tag.z))\"\r\n                  :fill-opacity=\"(400 + tag.z) / 600\"\r\n                  @mousemove=\"listenerMove($event)\"\r\n                  @mouseout=\"listenerOut($event)\"\r\n                  @click=\"clickToPage\"\r\n                >\r\n                  {{ tag.text }}\r\n                </text>\r\n              </a>\r\n            </svg>\r\n          </div>\r\n          <div class=\"speed_tag\">\r\n            <div\r\n              ref=\"speed_tag\"\r\n              style=\"width: 100%; height: 100%; margin-top: 30px\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport LeftPage from \"../components/MainPageLeft.vue\";\r\nimport word_cloud_data from \"../assets/Sheng/item_data/word_cloud_3ddata.json\";\r\nimport num_tag_data from \"../assets/Sheng/item_data/locate_tag_num.json\";\r\nimport speed_average_data from \"../assets/Sheng/item_data/speed_average.json\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      cur_info: {\r\n        year: \"2017\",\r\n        title: \"政治\",\r\n        region: \"山东\",\r\n        region_data: \"\",\r\n      },\r\n      locate_data_url: {\r\n        河北: \"https://geo.datav.aliyun.com/areas_v3/bound/130000_full.json\",\r\n        山东: \"https://geo.datav.aliyun.com/areas_v3/bound/370000_full.json\",\r\n        山西: \"https://geo.datav.aliyun.com/areas_v3/bound/140000_full.json\",\r\n        河南: \"https://geo.datav.aliyun.com/areas_v3/bound/410000_full.json\",\r\n        辽宁: \"https://geo.datav.aliyun.com/areas_v3/bound/210000_full.json\",\r\n      },\r\n      news_value: 0,\r\n      news_list: [\r\n        {\r\n          url: \"http://www.gov.cn/xinwen/2022-05/01/5688367/images/874baddfbc4c43809aae929bf2a190a2.JPG\",\r\n        },\r\n        {\r\n          url: \"http://www.gov.cn/xinwen/2022-05/01/5688367/images/441dbcc82f714ce58365ab925ac4c783.JPG\",\r\n        },\r\n        {\r\n          url: \"http://www.gov.cn/xinwen/2022-05/01/5688367/images/89106ba8a3a6455e8d323ba63e307cf0.JPG\",\r\n        },\r\n      ],\r\n      width: 576,\r\n      height: 300,\r\n      time_select_value: 0,\r\n      tagsNum: 0, //标签数量\r\n      RADIUS: 120, //球的半径\r\n      speedX: Math.PI / 360 / 0.5, //球一帧绕x轴旋转的角度\r\n      speedY: Math.PI / 360 / 0.5, //球-帧绕y轴旋转的角度\r\n      tags: [],\r\n      data: word_cloud_data[\"value\"],\r\n      timer: null,\r\n    };\r\n  },\r\n  computed: {\r\n    CX() {\r\n      //球心x坐标\r\n      return this.width / 2;\r\n    },\r\n    CY() {\r\n      //球心y坐标\r\n      return this.height / 2;\r\n    },\r\n  },\r\n  created() {\r\n    this.initData();\r\n  },\r\n  mounted() {\r\n    //this.cur_info.region = this.$route.params.region;\r\n    console.log(this.$route.params.region);\r\n    //this.set_wordcloud();\r\n    this.runTags();\r\n    this.set_speed_average();\r\n    this.set_speed_tag();\r\n    this.set_speed_region();\r\n    this.set_num_tag();\r\n    this.set_speed_region();\r\n  },\r\n  methods: {\r\n    initData() {\r\n      //初始化标签位置\r\n      let tags = [];\r\n      this.tagsNum = this.data.length;\r\n      for (let i = 0; i < this.data.length; i++) {\r\n        let tag = {};\r\n        let k = -1 + (2 * (i + 1) - 1) / this.tagsNum;\r\n        let a = Math.acos(k);\r\n        let b = a * Math.sqrt(this.tagsNum * Math.PI); //计算标签相对于球心的角度\r\n        tag.text = this.data[i];\r\n        tag.x = this.CX + this.RADIUS * Math.sin(a) * Math.cos(b); //根据标签角度求出标签的x,y,z坐标\r\n        tag.y = this.CY + this.RADIUS * Math.sin(a) * Math.sin(b);\r\n        tag.z = this.RADIUS * Math.cos(a);\r\n        tag.id = i; // 给标签添加id\r\n        tag.color =\r\n          \"rgb(\" +\r\n          [\r\n            Math.round(Math.random() * 254),\r\n            Math.round(Math.random() * 254),\r\n            Math.round(Math.random() * 254),\r\n          ].join(\",\") +\r\n          \")\";\r\n        tags.push(tag);\r\n        // console.log(tag);\r\n      }\r\n      this.tags = tags; //让vue替我们完成视图更新\r\n    },\r\n    // 纵向旋转\r\n    rotateX(angleX) {\r\n      var cos = Math.cos(angleX);\r\n      var sin = Math.sin(angleX);\r\n      for (let tag of this.tags) {\r\n        var y1 = (tag.y - this.CY) * cos - tag.z * sin + this.CY;\r\n        var z1 = tag.z * cos + (tag.y - this.CY) * sin;\r\n        tag.y = y1;\r\n        tag.z = z1;\r\n      }\r\n    },\r\n    // 横向旋转\r\n    rotateY(angleY) {\r\n      var cos = Math.cos(angleY);\r\n      var sin = Math.sin(angleY);\r\n      for (let tag of this.tags) {\r\n        var x1 = (tag.x - this.CX) * cos - tag.z * sin + this.CX;\r\n        var z1 = tag.z * cos + (tag.x - this.CX) * sin;\r\n        tag.x = x1;\r\n        tag.z = z1;\r\n      }\r\n    },\r\n    // 运动函数\r\n    async runTags() {\r\n      if (typeof this.timer === \"number\") {\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n      }\r\n      let timer = setInterval(() => {\r\n        this.rotateX(this.speedX);\r\n        this.rotateY(this.speedY);\r\n      }, 17);\r\n      this.timer = timer;\r\n    },\r\n    // 监听移入事件\r\n    listenerMove(e) {\r\n      if (e.target.id) {\r\n        clearInterval(this.timer);\r\n      }\r\n    },\r\n    // 监听移出事件\r\n    listenerOut(e) {\r\n      if (e.target.id) {\r\n        this.runTags();\r\n      }\r\n    },\r\n    // 点击事件\r\n    clickToPage() {},\r\n    //up----------------------------------------------------------set word_cloud\r\n\r\n    title_change(new_title) {\r\n      //title变化后\r\n      this.cur_info.title = new_title;\r\n      if (\r\n        num_tag_data[this.cur_info.region][this.cur_info.year][\r\n          this.cur_info.title\r\n        ] == null\r\n      ) {\r\n        alert(\"这里没有数据\");\r\n        return;\r\n      }\r\n      this.set_num_tag();\r\n      this.set_speed_tag();\r\n    },\r\n    get_time_change(new_time) {\r\n      if (\r\n        num_tag_data[this.cur_info.region][this.cur_info.year][\r\n          this.cur_info.title\r\n        ] == null\r\n      ) {\r\n        alert(\"这里没有数据\");\r\n        return;\r\n      }\r\n      //时间变化后\r\n      this.cur_info.year = new_time.toString();\r\n      this.set_num_tag();\r\n      this.set_speed_tag();\r\n    },\r\n    async set_num_tag() {\r\n      // if (!this.num_tag_Chart)\r\n      if (this.num_tag_Chart) this.num_tag_Chart.clear();\r\n      else this.num_tag_Chart = this.$echarts.init(this.$refs.num_tag);\r\n\r\n      this.num_tag_Chart.setOption({\r\n        dataset: {\r\n          source:\r\n            num_tag_data[this.cur_info.region][this.cur_info.year][\r\n              this.cur_info.title\r\n            ],\r\n        },\r\n        grid: { containLabel: true },\r\n        xAxis: {\r\n          name: \"数量\",\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n          },\r\n\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n          },\r\n\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        visualMap: {\r\n          orient: \"horizontal\",\r\n          left: \"center\",\r\n          min: 0,\r\n          max: 10,\r\n          text: [\"慢速响应\", \"快速响应\"],\r\n          // Map the score column to color\r\n          dimension: \"avg\",\r\n          inRange: {\r\n            color: [\"#65B581\", \"#FFCE34\", \"#FD665F\"],\r\n          },\r\n          textStyle: {\r\n            color: \"#FFFFFF\",\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            type: \"bar\",\r\n            encode: {\r\n              x: \"num\",\r\n              y: \"sub_title\",\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    },\r\n    async set_wordcloud() {\r\n      //-------------------------set wordcloud\r\n      if (!this.word_cloud_Chart)\r\n        this.word_cloud_Chart = this.$echarts.init(this.$refs.word_cloud);\r\n      var maskImage = new Image();\r\n      maskImage.src = word_cloud_data.image;\r\n      this.word_cloud_Chart.setOption({\r\n        series: [\r\n          {\r\n            type: \"wordCloud\",\r\n            shape: \"circle\",\r\n            keepAspect: false,\r\n            left: \"center\",\r\n            top: \"center\",\r\n            width: \"70%\",\r\n            height: \"70%\",\r\n            right: null,\r\n            bottom: null,\r\n            //maskImage:maskImage,\r\n            sizeRange: [12, 30],\r\n            rotationRange: [-45, 45],\r\n            rotationStep: 90,\r\n            // 词间距，数值越小，间距越小，这里间距太小的话，会出现大词把小词套住的情况，比如一个大的口字，中间会有比较大的空隙，这时候他会把一些很小的字放在口字里面，这样的话，鼠标就无法选中里面的那个小字\r\n            gridSize: 2,\r\n            // 允许词太大的时候，超出画布的范围\r\n            drawOutOfBound: false,\r\n            // 布局的时候是否有动画\r\n            layoutAnimation: false,\r\n            textStyle: {\r\n              fontWeight: \"bold\",\r\n              color: function () {\r\n                return (\r\n                  \"rgb(\" +\r\n                  [\r\n                    Math.round(Math.random() * 254),\r\n                    Math.round(Math.random() * 254),\r\n                    Math.round(Math.random() * 254),\r\n                  ].join(\",\") +\r\n                  \")\"\r\n                );\r\n              },\r\n            },\r\n            emphasis: {\r\n              focus: \"self\",\r\n              textStyle: {\r\n                textShadowBlur: 10,\r\n                textShadowColor: \"#333\",\r\n              },\r\n            },\r\n\r\n            // Data is an array. Each array item must have name and value property.\r\n            data: word_cloud_data.value,\r\n          },\r\n        ],\r\n      });\r\n    },\r\n    async set_speed_average() {\r\n      //--------------------set speed_average\r\n      //-------------------------------------------------------------set scar\r\n      let scar_data = speed_average_data[\"scar\"][this.cur_info.region];\r\n      let scar_series = [];\r\n      for (let title_name in scar_data) {\r\n        scar_series.push({\r\n          type: \"line\",\r\n          id: title_name,\r\n          dataGroupId: title_name,\r\n          universalTransition: {\r\n            enabled: true,\r\n            delay: function (idx, count) {\r\n              return Math.random() * 400;\r\n            },\r\n          },\r\n          data: scar_data[title_name],\r\n        });\r\n      }\r\n      let speed_region_average_scatterOption = {\r\n        xAxis: {\r\n          scale: true,\r\n          name: \"年份\",\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n          },\r\n\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        yAxis: {\r\n          scale: true,\r\n          name: \"响应时间\",\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n          },\r\n\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        series: scar_series,\r\n      };\r\n      //-------------------------------------------------------设置bar\r\n      let bar_data = speed_average_data[\"bar\"][this.cur_info.region];\r\n      let bar_series = [],\r\n        bar_x_data = [];\r\n      for (let title_name in bar_data) {\r\n        bar_x_data.push(title_name);\r\n        bar_series.push({\r\n          value: bar_data[title_name],\r\n          groupId: title_name,\r\n        });\r\n      }\r\n      let bar_key = bar_x_data;\r\n      let speed_region_average_barOption = {\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: bar_x_data,\r\n          name: \"类别\",\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n          },\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        yAxis: {\r\n          name: \"响应时间\",\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n          },\r\n\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            type: \"bar\",\r\n            id: \"total\",\r\n            data: bar_series,\r\n            universalTransition: {\r\n              enabled: true,\r\n              seriesKey: bar_key,\r\n              delay: function (idx, count) {\r\n                return Math.random() * 400;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      if (!this.speed_average_Chart)\r\n        this.speed_average_Chart = this.$echarts.init(this.$refs.speed_average);\r\n      let currentOption = speed_region_average_scatterOption,\r\n        that = this;\r\n      setInterval(function () {\r\n        currentOption =\r\n          currentOption === speed_region_average_scatterOption\r\n            ? speed_region_average_barOption\r\n            : speed_region_average_scatterOption;\r\n        that.speed_average_Chart.setOption(currentOption, true);\r\n      }, 2000);\r\n    },\r\n    async set_speed_region() {\r\n      //--------------------set speed_region\r\n      await this.$axios({\r\n        url: this.locate_data_url[this.cur_info.region],\r\n        method: \"get\",\r\n      }).then((res) => {\r\n        this.cur_info.region_data = res.data;\r\n      });\r\n      this.$echarts.registerMap(\r\n        this.cur_info.region,\r\n        this.cur_info.region_data\r\n      );\r\n      let _data = this.cur_info.region_data.features,\r\n        scar_data = [];\r\n      for (let i in _data) {\r\n        let x = _data[i].properties.center[0],\r\n          y = _data[i].properties.center[1],\r\n          z = _data[i].properties.name;\r\n        scar_data.push([x, y, z]);\r\n      }\r\n      this.speed_region_Chart = this.$echarts.init(this.$refs.speed_region);\r\n      let speed_region_option = {\r\n        geo: {\r\n          map: this.cur_info.region,\r\n          z: 2,\r\n          aspectScale: 1,\r\n          layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n          zoom: 1, //当前视角的缩放比例\r\n          scaleLimit: {\r\n            //滚轮缩放的极限控制\r\n            min: 1,\r\n            max: 2,\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n            emphasis: {\r\n              show: true,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              shadowColor: \"rgba(21,55,112,255)\",\r\n              shadowOffsetX: 10,\r\n              shadowOffsetY: 10,\r\n              areaColor: \"rgba(24,48,82,255)\",\r\n              borderColor: \"rgba(84,113,166)\",\r\n              borderWidth: 1.5,\r\n            },\r\n            emphasis: {\r\n              areaColor: \"rgba(7,69,162)\",\r\n            },\r\n          },\r\n        },\r\n\r\n        series: [\r\n          {\r\n            type: \"map\",\r\n            mapType: this.cur_info.region,\r\n            aspectScale: 1,\r\n            zoom: 1,\r\n            z: 1,\r\n            layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n              },\r\n              emphasis: {\r\n                show: false,\r\n              },\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                shadowColor: \"rgba(22,57,89,255)\",\r\n                shadowOffsetX: 20,\r\n                shadowOffsetY: 20,\r\n                //areaColor: \"rgba(22,57,89,255)\",\r\n                borderColor: \"#4a75ff\",\r\n                borderWidth: 7,\r\n              },\r\n              emphasis: {\r\n                areaColor: \"rgba(22,57,89,0)\",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            show: true,\r\n            type: \"effectScatter\",\r\n            rippleEffect: {\r\n              // 涟漪特效相关配置。\r\n              scale: 4, // 控制涟漪大小\r\n            },\r\n            coordinateSystem: \"geo\", // series坐标系类型\r\n            data: scar_data,\r\n          },\r\n        ],\r\n      };\r\n      this.speed_region_Chart.setOption(speed_region_option);\r\n    },\r\n    async set_speed_tag() {\r\n      //--------------------------set speedTag\r\n      if (this.speed_tag_Chart) this.speed_tag_Chart.clear();\r\n      else this.speed_tag_Chart = this.$echarts.init(this.$refs.speed_tag);\r\n\r\n      this.speed_tag_Chart.clear();\r\n      this.speed_tag_Chart.setOption({\r\n        dataset: {\r\n          source:\r\n            num_tag_data[this.cur_info.region][this.cur_info.year][\r\n              this.cur_info.title\r\n            ],\r\n        },\r\n        polar: {\r\n          radius: [30, \"70%\"],\r\n        },\r\n        radiusAxis: {\r\n          type: \"category\",\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n          },\r\n          show: false,\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        angleAxis: {\r\n          startAngle: 75,\r\n          name: \"响应时间\",\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n          },\r\n\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        tooltip: {},\r\n        series: {\r\n          type: \"bar\",\r\n          coordinateSystem: \"polar\",\r\n          encode: {\r\n            radius: 0,\r\n            angle: 1,\r\n          },\r\n          label: {\r\n            show: false,\r\n            position: \"middle\",\r\n          },\r\n          itemStyle: {\r\n            color: function (params) {\r\n              let colors = [\r\n                \"#4587E7\",\r\n                \"#35AB33\",\r\n                \"#F5AD1D\",\r\n                \"#ff7f50\",\r\n                \"#da70d6\",\r\n                \"#32cd32\",\r\n                \"#6495ed\",\r\n                \"#F3FA00\",\r\n              ];\r\n              return colors[params.dataIndex];\r\n            },\r\n          },\r\n        },\r\n      });\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    if (this.speed_region_Chart) {\r\n      this.speed_region_Chart.dispose();\r\n      this.speed_region_Chart = null;\r\n    }\r\n    if (this.detail_chart) {\r\n      this.detail_chart.dispose();\r\n      this.detail_chart = null;\r\n    }\r\n    if (this.word_cloud_Chart) {\r\n      this.word_cloud_Chart.dispose();\r\n      this.word_cloud_Chart = null;\r\n    }\r\n    if (this.num_tag_Chart) {\r\n      this.num_tag_Chart.dispose();\r\n      this.num_tag_Chart = null;\r\n    }\r\n    if (this.speed_average_Chart) {\r\n      this.speed_average_Chart.dispose();\r\n      this.speed_average_Chart = null;\r\n    }\r\n  },\r\n  components: {\r\n    LeftPage,\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.fontA:hover {\r\n  fill: #ffffff;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n.time_select {\r\n  width: 28px;\r\n  height: 252px;\r\n  margin-left: 108px;\r\n  margin-top: 327px-50px;\r\n}\r\n.speed_region {\r\n  width: 1051px;\r\n  height: 598px;\r\n  //width: 1920px;\r\n  //height: 1080px;\r\n  margin-top: 126px;\r\n  background: url(../assets/Sheng/speed_region.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  justify-content: center;\r\n}\r\n.news {\r\n  width: 546px;\r\n  height: 325px;\r\n  margin-top: 13px;\r\n  background: url(../assets/Sheng/news.png) no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n.speed_average {\r\n  width: 479px;\r\n  height: 325px;\r\n  margin-top: 16px;\r\n  margin-left: 22px;\r\n  background: url(../assets/Sheng/speed_average.png) no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n.num_tag {\r\n  width: 576px;\r\n  height: 340px;\r\n  background: url(../assets/Sheng/num_tag.png) no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n.word_cloud {\r\n  width: 576px;\r\n  height: 340px;\r\n  margin-top: 10px;\r\n\r\n  background: url(../assets/Sheng/word_cloud.png) no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n.speed_tag {\r\n  width: 576px;\r\n  height: 267px+35px;\r\n  margin-top: 10px;\r\n\r\n  background: url(../assets/Sheng/speed_tag.png) no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n.ShengBackground {\r\n  width: 1936px;\r\n  height: 1083px;\r\n  background: url(../assets/Sheng/ShengBackground.PNG) no-repeat;\r\n  background-size: 100% 100%;\r\n  margin: auto;\r\n  display: flex;\r\n  //background-position: center top;\r\n  .item_left {\r\n    margin-left: 0px;\r\n    margin-top: 0px;\r\n    width: 267px;\r\n    height: 100%;\r\n    line-height: 20px;\r\n    opacity: 0.89;\r\n    background-color: rgba(29, 76, 170, 100);\r\n    text-align: center;\r\n  }\r\n  .item_right {\r\n    //display: flex;\r\n    //flex-flow: column;\r\n    .title {\r\n      margin-left: 0px;\r\n      margin-top: 0px;\r\n      width: 1936px-267px;\r\n      height: 300px;\r\n      background: url(../assets/main_page_title.png) no-repeat;\r\n      background-size: 100% 100%;\r\n      background-position: center top;\r\n    }\r\n    .content {\r\n      margin-top: -300px;\r\n      display: flex;\r\n      .left {\r\n        margin-left: 44px;\r\n        display: flex;\r\n        flex-flow: column;\r\n        .down {\r\n          display: flex;\r\n        }\r\n      }\r\n      .right {\r\n        display: flex;\r\n        flex-flow: column;\r\n        margin-left: 10px;\r\n        margin-top: 60px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\MainPageLeft.vue",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\MainPageRight.vue",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\main_support_right.vue",[],"C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\echarts_test.vue",["65"],"<template>\r\n    <div>\r\n         <div ref=\"main\" style=\"width: 600px;height:400px;\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {}\r\n    },\r\n    mounted() {\r\n    // 基于准备好的dom，初始化echarts实例\r\n        console.log(this.$refs.main)\r\n        this.myChart = this.$echarts.init(this.$refs.main)\r\n\t\t// 指定图表的配置项和数据\r\n        this.myChart.setOption({\r\n            title: {\r\n                text: '联系',\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                data: ['一', '二', '三', '四', '五', '六']\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '人数',\r\n                type: 'bar',\r\n                data: [45, 46, 56, 34, 47, 48]\r\n            }]\r\n        })\r\n    },\r\n}\r\n\r\n</script>","C:\\Users\\Administrator\\Desktop\\data_view\\my_project\\vue2_app\\myapp\\src\\components\\MainPageRightMap.vue",["66"],"<template>\r\n  <div class=\"h-3\">\r\n    <div ref=\"myEchart\" style=\"width: 1231px; height: 808px\"></div>\r\n    <div class=\"time_content\">\r\n      <div class=\"Timeline\">\r\n        <div class=\"timeaxis\">\r\n          <div v-for=\"(item, i) in list\" :key=\"i\">\r\n            <div class=\"timeaxis-box\">\r\n              <div\r\n                class=\"timeaxis-topText\"\r\n                :class=\"{ 'bd-empty': i == list.length - 1 }\"\r\n              ></div>\r\n              <div\r\n                class=\"circular\"\r\n                @click=\"time_change(item, i)\"\r\n                :class=\"{ circular_click: item.clicked }\"\r\n              ></div>\r\n              <div class=\"timeaxis-bootomText\">\r\n                <div class=\"text\">{{ item.standard }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport china from \"../assets/map/china.json\";\r\nimport speed_average_data from \"../assets/Sheng/item_data/speed_average.json\";\r\nimport main_tooltip from \"../assets/main_time/main_tooltip.json\";\r\nexport default {\r\n  props: {\r\n    title_change: {\r\n      type: String,\r\n      default: \"政治\",\r\n    },\r\n  },\r\n  watch: {\r\n    title_change(new_val, old_val) {\r\n      this.cur_info.title = new_val;\r\n      this.set_china_map();\r\n    },\r\n    hookTooltip: {\r\n      handler(new_val, old_val) {\r\n        //console.log(new_val, old_val, \"---------watch\");\r\n        let tooltipButton = document.querySelectorAll(\"#main_tooltip_click\");\r\n        // 通过addEventListener注册事件\r\n        for (let i = 0; i < tooltipButton.length; i++) {\r\n          tooltipButton[i].addEventListener(\"click\", this.go_next_page);\r\n        }\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      cur_info: {\r\n        year: \"2017\",\r\n        title: \"政治\",\r\n        max: 0,\r\n        region: \"\",\r\n      },\r\n      list: [\r\n        {\r\n          clicked: true,\r\n          standard: \"2017\",\r\n        },\r\n        {\r\n          clicked: false,\r\n          standard: \"2018\",\r\n        },\r\n        {\r\n          clicked: false,\r\n          standard: \"2019\",\r\n        },\r\n        {\r\n          clicked: false,\r\n          standard: \"2020\",\r\n        },\r\n        {\r\n          clicked: false,\r\n          standard: \"2021\",\r\n        },\r\n      ],\r\n      hookTooltip: {},\r\n    };\r\n  },\r\n  methods: {\r\n    // 随机函数\r\n    randomValue() {\r\n      return Math.round(Math.random() * 1000);\r\n    },\r\n    time_change(x, id) {\r\n      this.cur_info.year = x.standard;\r\n      for (let i in this.list) {\r\n        this.list[i].clicked = false;\r\n      }\r\n      this.list[id].clicked = true;\r\n      this.set_china_map();\r\n    },\r\n    go_next_page() {\r\n      console.log(this.cur_info.region);\r\n      this.$router.push({\r\n        name: \"ShengView\",\r\n        params: {\r\n          region: this.cur_info.region,\r\n        },\r\n      });\r\n    },\r\n    async set_china_map() {\r\n      if (this.myChart) {\r\n        this.myChart.dispose();\r\n        this.myChart = null;\r\n      }\r\n      this.layoutSize = \"150%\";\r\n      let that = this;\r\n      let _data = china.features,\r\n        scar_data = [];\r\n      for (let i in _data) {\r\n        let x = _data[i].properties.cp[0],\r\n          y = _data[i].properties.cp[1],\r\n          z = _data[i].properties.name;\r\n        scar_data.push([x, y, z]);\r\n      }\r\n      for (let name_l in speed_average_data[\"scar\"]) {\r\n        let cur = speed_average_data[\"scar\"][name_l];\r\n        if (this.cur_info.title in cur == false) continue;\r\n\r\n        let t = parseInt(this.cur_info.year) - 2017;\r\n        if (t in cur[this.cur_info.title] == false) continue;\r\n        //console.log('x',cur[this.cur_info.title][t][1])\r\n        this.cur_info.max = Math.max(\r\n          this.cur_info.max,\r\n          cur[this.cur_info.title][t][1]\r\n        );\r\n      }\r\n      if (this.cur_info.max == 0) this.cur_info.max = 1;\r\n      let options = {\r\n        tooltip: {\r\n          triggerOn: \"click\",\r\n          enterable: true,\r\n          confine: true,\r\n          backgroundColor: \"rgba(255,255,255,0)\",\r\n          borderColor: \"rgba(0,0,0,0)\",\r\n          formatter: function (params) {\r\n            that.hookTooltip = params;\r\n            const default_style = `\r\n            <div\r\n            style=\"\r\n            width: 100px;\r\n            height:30px;\r\n            font-size:28px;            \r\n            color:rgba(255,255,255)\">\r\n            还没拿到该省此年份的数据呢</div>\r\n            `;\r\n            if (params.name in main_tooltip == false) return default_style;\r\n            if (that.cur_info.year in main_tooltip[params.name] == false)\r\n              return default_style;\r\n            let regionName = \"\";\r\n\r\n            if (that.cur_region_info) clearInterval(that.cur_region_info);\r\n            that.cur_region_info = setInterval(function () {\r\n              if (document.getElementById(\"main_page_map_tooltip\")) {\r\n                if (params.name !== regionName) {\r\n                  regionName = params.name;\r\n                  that.cur_info.region = regionName;\r\n                  if (that.toolChart) {\r\n                    that.toolChart.dispose();\r\n                    that.toolChart = null;\r\n                  }\r\n                  that.toolChart = that.$echarts.init(\r\n                    document.getElementById(\"main_page_map_tooltip\")\r\n                  );\r\n                  const treemapOption = {\r\n                    series: [\r\n                      {\r\n                        type: \"treemap\",\r\n                        id: \"echarts-package-size\",\r\n                        animationDurationUpdate: 1000,\r\n                        roam: false,\r\n                        nodeClick: undefined,\r\n                        data: main_tooltip[regionName][that.cur_info.year],\r\n                        universalTransition: true,\r\n                        label: {\r\n                          show: true,\r\n                          fontSize: 24,\r\n                        },\r\n                        breadcrumb: {\r\n                          show: false,\r\n                        },\r\n                      },\r\n                    ],\r\n                  };\r\n                  const sunburstOption = {\r\n                    series: [\r\n                      {\r\n                        type: \"sunburst\",\r\n                        id: \"echarts-package-size\",\r\n                        radius: [\"10%\", \"90%\"],\r\n                        animationDurationUpdate: 1000,\r\n                        nodeClick: undefined,\r\n                        data: main_tooltip[regionName][that.cur_info.year],\r\n                        universalTransition: true,\r\n                        itemStyle: {\r\n                          borderWidth: 1,\r\n                          borderColor: \"rgba(255,255,255,.5)\",\r\n                        },\r\n                        label: {\r\n                          show: true,\r\n                          fontSize: 20,\r\n                          color: \"rgba(255,255,255)\",\r\n                        },\r\n                      },\r\n                    ],\r\n                  };\r\n                  let currentOption = treemapOption;\r\n                  that.toolChart.setOption(currentOption);\r\n                  clearInterval(that.cur_region_Chart);\r\n                  that.cur_region_Chart = setInterval(function () {\r\n                    currentOption =\r\n                      currentOption === treemapOption\r\n                        ? sunburstOption\r\n                        : treemapOption;\r\n                    that.toolChart.setOption(currentOption);\r\n                  }, 3000);\r\n                }\r\n              }\r\n            }, 500);\r\n            return `\r\n            <div class=\"main_tooltip\">\r\n              <div class=\"up_span\">\r\n\r\n              </div>\r\n              <div id=\"main_page_map_tooltip\" class=\"chart\">\r\n\r\n              </div>\r\n              \r\n              <div class=\"bottom_route\">\r\n                <div class=\"text\">\r\n                查看该省详细信息\r\n                </div>\r\n                <div id=\"main_tooltip_click\" class=\"icon\">\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            `;\r\n          }, //数据格式化\r\n        },\r\n\r\n        geo: {\r\n          map: \"china\",\r\n          aspectScale: 1,\r\n          layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n          layoutSize: this.layoutSize,\r\n          label: {\r\n            normal: {\r\n              show: false,\r\n            },\r\n            emphasis: {\r\n              show: false,\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              shadowColor: \"#276fce\",\r\n              shadowOffsetX: 0,\r\n              shadowOffsetY: 15,\r\n              opacity: 0.5,\r\n            },\r\n            emphasis: {\r\n              areaColor: \"#276fce\",\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          // 常规地图\r\n          {\r\n            type: \"map\",\r\n            mapType: \"china\",\r\n            aspectScale: 1,\r\n            layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n            layoutSize: this.layoutSize,\r\n            zoom: 1, //当前视角的缩放比例\r\n            // roam: true, //是否开启平游或缩放\r\n            scaleLimit: {\r\n              //滚轮缩放的极限控制\r\n              min: 1,\r\n              max: 2,\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                textStyle: {\r\n                  color: \"#FFFFFF\",\r\n                  fontSize: 18,\r\n                },\r\n                offset: [0, -20],\r\n              },\r\n              emphasis: {\r\n                show: true,\r\n                textStyle: {\r\n                  color: \"#FFFFFF\",\r\n                  fontSize: 18,\r\n                },\r\n                offset: [0, -20],\r\n              },\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                areaColor: \"#0c274b\",\r\n                borderColor: \"#1cccff\",\r\n                borderWidth: 1.5,\r\n              },\r\n\r\n              emphasis: {\r\n                areaColor: \"#02102b\",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            show: true,\r\n            type: \"effectScatter\",\r\n            symbolSize: function (params) {\r\n              //\r\n              let t = parseInt(that.cur_info.year) - 2017;\r\n              if (params[2] in speed_average_data[\"scar\"] == false) return 0;\r\n              if (\r\n                that.cur_info.title in speed_average_data[\"scar\"][params[2]] ==\r\n                false\r\n              )\r\n                return 0;\r\n              if (\r\n                t in\r\n                  speed_average_data[\"scar\"][params[2]][that.cur_info.title] ==\r\n                false\r\n              )\r\n                return 0;\r\n              let x =\r\n                speed_average_data[\"scar\"][params[2]][that.cur_info.title][t];\r\n              let cur_v = (x[1] / that.cur_info.max) * 5 + 1;\r\n              //设置每个点的大小\r\n              return 30 / cur_v;\r\n            },\r\n            rippleEffect: {\r\n              // 涟漪特效相关配置。\r\n              scale: 4, // 控制涟漪大小\r\n            },\r\n            coordinateSystem: \"geo\", // series坐标系类型\r\n            data: scar_data,\r\n          },\r\n        ],\r\n      };\r\n\r\n      that.myChart = this.$echarts.init(this.$refs.myEchart);\r\n      that.myChart.setOption(options);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$echarts.registerMap(\"china\", china);\r\n    this.set_china_map();\r\n  },\r\n  beforeDestroy() {\r\n    if (this.myChart) {\r\n      this.myChart.dispose();\r\n      this.myChart = null;\r\n    }\r\n    if (this.cur_region_Chart) {\r\n      this.cur_region_Chart.dispose();\r\n      this.cur_region_Chart = null;\r\n    }\r\n    if (this.cur_region_info) clearInterval(this.cur_region_info);\r\n    if (this.cur_region_Chart) clearInterval(this.cur_region_Chart);\r\n  },\r\n};\r\n// 基于准备好的dom，初始化echarts实例\r\n</script>\r\n<style lang=\"less\">\r\n/*懒加载图标动画*/\r\n.main_tooltip {\r\n  width: 1008px;\r\n  height: 656px;\r\n  background: url(../assets/main_time/main_tooltip.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  // background-position: center top;\r\n  // display: flex;\r\n  // flex-flow: column;\r\n  .up_span {\r\n    padding-top: 70px;\r\n    padding-right: 20px;\r\n    font-size: 30px;\r\n  }\r\n  .bottom_route {\r\n    display: flex;\r\n    margin-left: 650px;\r\n    margin-top: -50px;\r\n    float: right;\r\n    .icon {\r\n      background: url(../assets/main_time/ze-arrow.png) no-repeat;\r\n      background-size: 100% 100%;\r\n      width: 24px;\r\n      height: 24px;\r\n      z-index: 999999;\r\n    }\r\n    .text {\r\n      //margin-top: -100px;\r\n      padding-right: 20px;\r\n      font-size: 30px;\r\n      color: white;\r\n      text-align: right;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n\r\n  .chart {\r\n    width: 100%;\r\n    height: 656px-70px;\r\n    justify-content: center;\r\n  }\r\n}\r\n.h-3 {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  .time_content {\r\n    width: 1231px;\r\n    height: 0px;\r\n    font-size: 20px;\r\n    z-index: 999999;\r\n    .Timeline {\r\n      width: 100%;\r\n      height: 100%;\r\n      margin-top: 40px;\r\n      .timeaxis {\r\n        height: 50px;\r\n        margin-top: 80px;\r\n        margin-left: 4em;\r\n        display: flex;\r\n        .timeaxis-box {\r\n          width: 330px;\r\n          .circular {\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 50%;\r\n            background: #165dff;\r\n            //margin-bottom: -10px;\r\n            position: relative;\r\n            top: -10px;\r\n            box-shadow: 0px 0px 5px 5px #fff;\r\n          }\r\n          .circular:hover {\r\n            width: 30px;\r\n            height: 30px;\r\n            border-radius: 50%;\r\n            background: #ff1616;\r\n            //margin-bottom: -10px;\r\n            position: relative;\r\n            top: -15px;\r\n            left: -5px;\r\n            box-shadow: 0px 0px 5px 5px #fff;\r\n          }\r\n          .circular_click {\r\n            width: 30px;\r\n            height: 30px;\r\n            border-radius: 50%;\r\n            background: #ff1616;\r\n            //margin-bottom: -10px;\r\n            position: relative;\r\n            top: -15px;\r\n            left: -5px;\r\n            box-shadow: 0px 0px 5px 5px #fff;\r\n          }\r\n          .timeaxis-topText {\r\n            border-bottom: 5px solid #c9cdd4; //时间轴线的宽度和颜色\r\n            position: relative;\r\n          }\r\n          .bd-empty {\r\n            // border: 0;\r\n            //margin-top: 5px;\r\n            border-bottom: 5px solid #c9cdd4; //时间轴线的宽度和颜色\r\n            opacity: 0;\r\n            position: relative;\r\n          }\r\n          .timeaxis-bootomText {\r\n            position: relative;\r\n            .text {\r\n              position: absolute;\r\n              top: 10px;\r\n              font-size: 28px;\r\n              left: -20px;\r\n              color: #fff;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>",{"ruleId":"67","severity":1,"message":"68","line":116,"column":7,"nodeType":"69","messageId":"70","endLine":116,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":411,"column":9,"nodeType":"69","messageId":"70","endLine":411,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":163,"column":5,"nodeType":"69","messageId":"70","endLine":163,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":13,"column":9,"nodeType":"69","messageId":"70","endLine":13,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":102,"column":7,"nodeType":"69","messageId":"70","endLine":102,"endColumn":18},"no-console","Unexpected console statement.","MemberExpression","unexpected"]