{"ast":null,"code":"function Handler(action, context) {\n  this.action = action;\n  this.context = context;\n}\n/**\n * @mixin\n * @alias clay.core.mixin.notifier\n */\n\n\nvar notifier = {\n  /**\n   * Trigger event\n   * @param  {string} name\n   */\n  trigger: function (name) {\n    if (!this.hasOwnProperty('__handlers__')) {\n      return;\n    }\n\n    if (!this.__handlers__.hasOwnProperty(name)) {\n      return;\n    }\n\n    var hdls = this.__handlers__[name];\n    var l = hdls.length,\n        i = -1,\n        args = arguments; // Optimize advise from backbone\n\n    switch (args.length) {\n      case 1:\n        while (++i < l) {\n          hdls[i].action.call(hdls[i].context);\n        }\n\n        return;\n\n      case 2:\n        while (++i < l) {\n          hdls[i].action.call(hdls[i].context, args[1]);\n        }\n\n        return;\n\n      case 3:\n        while (++i < l) {\n          hdls[i].action.call(hdls[i].context, args[1], args[2]);\n        }\n\n        return;\n\n      case 4:\n        while (++i < l) {\n          hdls[i].action.call(hdls[i].context, args[1], args[2], args[3]);\n        }\n\n        return;\n\n      case 5:\n        while (++i < l) {\n          hdls[i].action.call(hdls[i].context, args[1], args[2], args[3], args[4]);\n        }\n\n        return;\n\n      default:\n        while (++i < l) {\n          hdls[i].action.apply(hdls[i].context, Array.prototype.slice.call(args, 1));\n        }\n\n        return;\n    }\n  },\n\n  /**\n   * Register event handler\n   * @param  {string} name\n   * @param  {Function} action\n   * @param  {Object} [context]\n   * @chainable\n   */\n  on: function (name, action, context) {\n    if (!name || !action) {\n      return;\n    }\n\n    var handlers = this.__handlers__ || (this.__handlers__ = {});\n\n    if (!handlers[name]) {\n      handlers[name] = [];\n    } else {\n      if (this.has(name, action)) {\n        return;\n      }\n    }\n\n    var handler = new Handler(action, context || this);\n    handlers[name].push(handler);\n    return this;\n  },\n\n  /**\n   * Register event, event will only be triggered once and then removed\n   * @param  {string} name\n   * @param  {Function} action\n   * @param  {Object} [context]\n   * @chainable\n   */\n  once: function (name, action, context) {\n    if (!name || !action) {\n      return;\n    }\n\n    var self = this;\n\n    function wrapper() {\n      self.off(name, wrapper);\n      action.apply(this, arguments);\n    }\n\n    return this.on(name, wrapper, context);\n  },\n\n  /**\n   * Alias of once('before' + name)\n   * @param  {string} name\n   * @param  {Function} action\n   * @param  {Object} [context]\n   * @chainable\n   */\n  before: function (name, action, context) {\n    if (!name || !action) {\n      return;\n    }\n\n    name = 'before' + name;\n    return this.on(name, action, context);\n  },\n\n  /**\n   * Alias of once('after' + name)\n   * @param  {string} name\n   * @param  {Function} action\n   * @param  {Object} [context]\n   * @chainable\n   */\n  after: function (name, action, context) {\n    if (!name || !action) {\n      return;\n    }\n\n    name = 'after' + name;\n    return this.on(name, action, context);\n  },\n\n  /**\n   * Alias of on('success')\n   * @param  {Function} action\n   * @param  {Object} [context]\n   * @chainable\n   */\n  success: function (action, context) {\n    return this.once('success', action, context);\n  },\n\n  /**\n   * Alias of on('error')\n   * @param  {Function} action\n   * @param  {Object} [context]\n   * @chainable\n   */\n  error: function (action, context) {\n    return this.once('error', action, context);\n  },\n\n  /**\n   * Remove event listener\n   * @param  {Function} action\n   * @param  {Object} [context]\n   * @chainable\n   */\n  off: function (name, action) {\n    var handlers = this.__handlers__ || (this.__handlers__ = {});\n\n    if (!action) {\n      handlers[name] = [];\n      return;\n    }\n\n    if (handlers[name]) {\n      var hdls = handlers[name];\n      var retains = [];\n\n      for (var i = 0; i < hdls.length; i++) {\n        if (action && hdls[i].action !== action) {\n          retains.push(hdls[i]);\n        }\n      }\n\n      handlers[name] = retains;\n    }\n\n    return this;\n  },\n\n  /**\n   * If registered the event handler\n   * @param  {string}  name\n   * @param  {Function}  action\n   * @return {boolean}\n   */\n  has: function (name, action) {\n    var handlers = this.__handlers__;\n\n    if (!handlers || !handlers[name]) {\n      return false;\n    }\n\n    var hdls = handlers[name];\n\n    for (var i = 0; i < hdls.length; i++) {\n      if (hdls[i].action === action) {\n        return true;\n      }\n    }\n  }\n};\nexport default notifier;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/claygl/src/core/mixin/notifier.js"],"names":["Handler","action","context","notifier","trigger","name","hasOwnProperty","__handlers__","hdls","l","length","i","args","arguments","call","apply","Array","prototype","slice","on","handlers","has","handler","push","once","self","wrapper","off","before","after","success","error","retains"],"mappings":"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","sourcesContent":["function Handler(action, context) {\n    this.action = action;\n    this.context = context;\n}\n/**\n * @mixin\n * @alias clay.core.mixin.notifier\n */\nvar notifier = {\n    /**\n     * Trigger event\n     * @param  {string} name\n     */\n    trigger: function(name) {\n        if (!this.hasOwnProperty('__handlers__')) {\n            return;\n        }\n        if (!this.__handlers__.hasOwnProperty(name)) {\n            return;\n        }\n\n        var hdls = this.__handlers__[name];\n        var l = hdls.length, i = -1, args = arguments;\n        // Optimize advise from backbone\n        switch (args.length) {\n            case 1:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context);\n                }\n                return;\n            case 2:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1]);\n                }\n                return;\n            case 3:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2]);\n                }\n                return;\n            case 4:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2], args[3]);\n                }\n                return;\n            case 5:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2], args[3], args[4]);\n                }\n                return;\n            default:\n                while (++i < l) {\n                    hdls[i].action.apply(hdls[i].context, Array.prototype.slice.call(args, 1));\n                }\n                return;\n        }\n    },\n    /**\n     * Register event handler\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    on: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        var handlers = this.__handlers__ || (this.__handlers__={});\n        if (!handlers[name]) {\n            handlers[name] = [];\n        }\n        else {\n            if (this.has(name, action)) {\n                return;\n            }\n        }\n        var handler = new Handler(action, context || this);\n        handlers[name].push(handler);\n\n        return this;\n    },\n\n    /**\n     * Register event, event will only be triggered once and then removed\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    once: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        var self = this;\n        function wrapper() {\n            self.off(name, wrapper);\n            action.apply(this, arguments);\n        }\n        return this.on(name, wrapper, context);\n    },\n\n    /**\n     * Alias of once('before' + name)\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    before: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        name = 'before' + name;\n        return this.on(name, action, context);\n    },\n\n    /**\n     * Alias of once('after' + name)\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    after: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        name = 'after' + name;\n        return this.on(name, action, context);\n    },\n\n    /**\n     * Alias of on('success')\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    success: function(action, context) {\n        return this.once('success', action, context);\n    },\n\n    /**\n     * Alias of on('error')\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    error: function(action, context) {\n        return this.once('error', action, context);\n    },\n\n    /**\n     * Remove event listener\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    off: function(name, action) {\n\n        var handlers = this.__handlers__ || (this.__handlers__={});\n\n        if (!action) {\n            handlers[name] = [];\n            return;\n        }\n        if (handlers[name]) {\n            var hdls = handlers[name];\n            var retains = [];\n            for (var i = 0; i < hdls.length; i++) {\n                if (action && hdls[i].action !== action) {\n                    retains.push(hdls[i]);\n                }\n            }\n            handlers[name] = retains;\n        }\n\n        return this;\n    },\n\n    /**\n     * If registered the event handler\n     * @param  {string}  name\n     * @param  {Function}  action\n     * @return {boolean}\n     */\n    has: function(name, action) {\n        var handlers = this.__handlers__;\n\n        if (! handlers ||\n            ! handlers[name]) {\n            return false;\n        }\n        var hdls = handlers[name];\n        for (var i = 0; i < hdls.length; i++) {\n            if (hdls[i].action === action) {\n                return true;\n            }\n        }\n    }\n};\n\nexport default notifier;"]},"metadata":{},"sourceType":"module"}