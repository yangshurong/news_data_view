{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\n\nfunction transformPolygon(coordSys, poly) {\n  var ret = [];\n\n  for (var i = 0; i < poly.length; i++) {\n    ret.push(coordSys.dataToPoint(poly[i]));\n  }\n\n  return ret;\n}\n\nvar Polygons3DSeries = echarts.SeriesModel.extend({\n  type: 'series.polygons3D',\n  getRegionModel: function (idx) {\n    return this.getData().getItemModel(idx);\n  },\n  getRegionPolygonCoords: function (idx) {\n    var coordSys = this.coordinateSystem;\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n\n    if (!itemModel.get('multiPolygon')) {\n      coords = [coords];\n    } // TODO Validate\n\n\n    var out = [];\n\n    for (var i = 0; i < coords.length; i++) {\n      // TODO Convert here ?\n      var interiors = [];\n\n      for (var k = 1; k < coords[i].length; k++) {\n        interiors.push(transformPolygon(coordSys, coords[i][k]));\n      }\n\n      out.push({\n        exterior: transformPolygon(coordSys, coords[i][0]),\n        interiors: interiors\n      });\n    }\n\n    return out;\n  },\n  getInitialData: function (option) {\n    var polygonsData = new echarts.List(['value'], this);\n    polygonsData.hasItemOption = false;\n    polygonsData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        polygonsData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return polygonsData;\n  },\n  defaultOption: {\n    show: true,\n    data: null,\n    multiPolygon: false,\n    progressiveThreshold: 1e3,\n    progressive: 1e3,\n    zlevel: -10,\n    label: {\n      show: false,\n      // Distance in 3d space.\n      distance: 2,\n      textStyle: {\n        fontSize: 20,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 4\n      }\n    },\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 0,\n      borderColor: '#333'\n    },\n    emphasis: {\n      itemStyle: {\n        color: '#639fc0'\n      },\n      label: {\n        show: true\n      }\n    }\n  }\n});\necharts.util.merge(Polygons3DSeries.prototype, componentShadingMixin);\nexport default Polygons3DSeries;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/chart/polygons3D/Polygons3DSeries.js"],"names":["echarts","componentShadingMixin","transformPolygon","coordSys","poly","ret","i","length","push","dataToPoint","Polygons3DSeries","SeriesModel","extend","type","getRegionModel","idx","getData","getItemModel","getRegionPolygonCoords","coordinateSystem","itemModel","coords","option","Array","getShallow","get","out","interiors","k","exterior","getInitialData","polygonsData","List","hasItemOption","initData","data","dataItem","dimName","dataIndex","dimIndex","NaN","value","defaultOption","show","multiPolygon","progressiveThreshold","progressive","zlevel","label","distance","textStyle","fontSize","color","backgroundColor","padding","borderRadius","itemStyle","borderWidth","borderColor","emphasis","util","merge","prototype"],"mappings":"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","sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\n\nfunction transformPolygon(coordSys, poly) {\n  var ret = [];\n\n  for (var i = 0; i < poly.length; i++) {\n    ret.push(coordSys.dataToPoint(poly[i]));\n  }\n\n  return ret;\n}\n\nvar Polygons3DSeries = echarts.SeriesModel.extend({\n  type: 'series.polygons3D',\n  getRegionModel: function (idx) {\n    return this.getData().getItemModel(idx);\n  },\n  getRegionPolygonCoords: function (idx) {\n    var coordSys = this.coordinateSystem;\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n\n    if (!itemModel.get('multiPolygon')) {\n      coords = [coords];\n    } // TODO Validate\n\n\n    var out = [];\n\n    for (var i = 0; i < coords.length; i++) {\n      // TODO Convert here ?\n      var interiors = [];\n\n      for (var k = 1; k < coords[i].length; k++) {\n        interiors.push(transformPolygon(coordSys, coords[i][k]));\n      }\n\n      out.push({\n        exterior: transformPolygon(coordSys, coords[i][0]),\n        interiors: interiors\n      });\n    }\n\n    return out;\n  },\n  getInitialData: function (option) {\n    var polygonsData = new echarts.List(['value'], this);\n    polygonsData.hasItemOption = false;\n    polygonsData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        polygonsData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return polygonsData;\n  },\n  defaultOption: {\n    show: true,\n    data: null,\n    multiPolygon: false,\n    progressiveThreshold: 1e3,\n    progressive: 1e3,\n    zlevel: -10,\n    label: {\n      show: false,\n      // Distance in 3d space.\n      distance: 2,\n      textStyle: {\n        fontSize: 20,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 4\n      }\n    },\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 0,\n      borderColor: '#333'\n    },\n    emphasis: {\n      itemStyle: {\n        color: '#639fc0'\n      },\n      label: {\n        show: true\n      }\n    }\n  }\n});\necharts.util.merge(Polygons3DSeries.prototype, componentShadingMixin);\nexport default Polygons3DSeries;"]},"metadata":{},"sourceType":"module"}