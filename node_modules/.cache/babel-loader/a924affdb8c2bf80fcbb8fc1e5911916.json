{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport china from \"../assets/map/china.json\";\nimport speed_average_data from \"../assets/Sheng/item_data/speed_average.json\";\nexport default {\n  props: {\n    title_change: {\n      type: String,\n      default: \"政治\"\n    }\n  },\n  watch: {\n    title_change: function title_change(new_val, old_val) {\n      this.cur_info.title = new_val;\n      this.set_china_map();\n    }\n  },\n  data: function data() {\n    return {\n      list: [{\n        warnname: \"提交广告\",\n        standard: \"2017\"\n      }, {\n        warnname: \"审核通过\",\n        standard: \"2018\"\n      }, {\n        warnname: \"投放\",\n        standard: \"2019\"\n      }, {\n        warnname: \"结束投放\",\n        standard: \"2020\"\n      }],\n      cur_info: {\n        year: \"2017\",\n        title: \"政治\",\n        region_data: \"\"\n      }\n    };\n  },\n  methods: {\n    // 随机函数\n    randomValue: function randomValue() {\n      return Math.round(Math.random() * 1000);\n    },\n    time_change: function time_change(id) {\n      this.cur_info.year = id;\n    },\n    set_china_map: function set_china_map() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var that, _data, scar_data, i, x, y, z, options, myChart;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$echarts.registerMap(\"china\", china);\n\n                _this.layoutSize = \"150%\";\n                that = _this;\n                _data = china.features, scar_data = [];\n                console.log(_data);\n\n                for (i in _data) {\n                  x = _data[i].properties.cp[0], y = _data[i].properties.cp[1], z = _data[i].properties.name;\n                  scar_data.push([x, y, z]);\n                }\n\n                options = {\n                  // tooltip: {\n                  //   triggerOn: \"click\",\n                  //   enterable: true,\n                  //   confine: true,\n                  //   formatter: function (params) {\n                  //     let lastRegionName = \"\";\n                  //     setInterval(function () {\n                  //       if (document.getElementById(\"main_page_map_tooltip\")) {\n                  //         if (params.name !== lastRegionName) {\n                  //           var myChart = that.$echarts.init(\n                  //             document.getElementById(\"main_page_map_tooltip\")\n                  //           );\n                  //           var init_option = {\n                  //             title: {\n                  //               text: params.name,\n                  //             },\n                  //             tooltip: {},\n                  //             legend: {\n                  //               data: [\"销量\"],\n                  //             },\n                  //             xAxis: {\n                  //               data: [\n                  //                 \"衬衫\",\n                  //                 \"羊毛衫\",\n                  //                 \"雪纺衫\",\n                  //                 \"裤子\",\n                  //                 \"高跟鞋\",\n                  //                 \"袜子\",\n                  //               ],\n                  //             },\n                  //             yAxis: {},\n                  //             series: [\n                  //               {\n                  //                 name: \"销量\",\n                  //                 type: \"bar\",\n                  //                 data: [5, 20, 36, 10, 10, 20],\n                  //               },\n                  //             ],\n                  //           };\n                  //           myChart.setOption(init_option);\n                  //           lastRegionName = params.name;\n                  //         }\n                  //       }\n                  //     }, 500);\n                  //     return `\n                  //     <div id=\"main_page_map_tooltip\" style=\"width: 600px;height:400px;\"></div>\n                  //     `;\n                  //   }, //数据格式化\n                  // },\n                  geo: {\n                    map: \"china\",\n                    aspectScale: 1,\n                    layoutCenter: [\"50%\", \"50%\"],\n                    //地图位置\n                    layoutSize: _this.layoutSize,\n                    label: {\n                      normal: {\n                        show: false\n                      },\n                      emphasis: {\n                        show: false\n                      }\n                    },\n                    itemStyle: {\n                      normal: {\n                        shadowColor: \"#276fce\",\n                        shadowOffsetX: 0,\n                        shadowOffsetY: 15,\n                        opacity: 0.5\n                      },\n                      emphasis: {\n                        areaColor: \"#276fce\"\n                      }\n                    }\n                  },\n                  series: [// 常规地图\n                  {\n                    type: \"map\",\n                    mapType: \"china\",\n                    aspectScale: 1,\n                    layoutCenter: [\"50%\", \"50%\"],\n                    //地图位置\n                    layoutSize: _this.layoutSize,\n                    zoom: 1,\n                    //当前视角的缩放比例\n                    // roam: true, //是否开启平游或缩放\n                    scaleLimit: {\n                      //滚轮缩放的极限控制\n                      min: 1,\n                      max: 2\n                    },\n                    label: {\n                      normal: {\n                        show: true,\n                        textStyle: {\n                          color: \"#FFFFFF\",\n                          fontSize: 18\n                        },\n                        offset: [0, -20]\n                      },\n                      emphasis: {\n                        show: true,\n                        textStyle: {\n                          color: \"#FFFFFF\",\n                          fontSize: 18\n                        },\n                        offset: [0, -20]\n                      }\n                    },\n                    itemStyle: {\n                      normal: {\n                        areaColor: \"#0c274b\",\n                        borderColor: \"#1cccff\",\n                        borderWidth: 1.5\n                      },\n                      emphasis: {\n                        areaColor: \"#02102b\"\n                      }\n                    }\n                  }, {\n                    show: true,\n                    type: \"effectScatter\",\n                    symbolSize: function symbolSize(params) {\n                      //\n                      var t = parseInt(that.cur_info.year) - 2017;\n                      if (params[2] in speed_average_data['scar'] == false) return 0;\n                      console.log(speed_average_data['scar'][params[2]]);\n                      var x = speed_average_data['scar'][params[2]][that.cur_info.title][t];\n                      return 30 / x;\n                    },\n                    rippleEffect: {\n                      // 涟漪特效相关配置。\n                      scale: 4 // 控制涟漪大小\n\n                    },\n                    coordinateSystem: \"geo\",\n                    // series坐标系类型\n                    data: scar_data\n                  }]\n                };\n                myChart = _this.$echarts.init(_this.$refs.myEchart);\n                myChart.setOption(options);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.set_china_map();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.myChart) {\n      return;\n    }\n\n    this.myChart.dispose();\n    this.myChart = null;\n  }\n}; // 基于准备好的dom，初始化echarts实例","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACAA;AACAC;AACAC,kBADA;AAEAC;AAFA;AADA,GADA;AAOAC;AACAH,gBADA,wBACAI,OADA,EACAC,OADA,EACA;AACA;AACA;AACA;AAJA,GAPA;AAaAC,MAbA,kBAaA;AACA;AACAC,aACA;AACAC,wBADA;AAEAC;AAFA,OADA,EAKA;AACAD,wBADA;AAEAC;AAFA,OALA,EASA;AACAD,sBADA;AAEAC;AAFA,OATA,EAaA;AACAD,wBADA;AAEAC;AAFA,OAbA,CADA;AAmBAC;AACAC,oBADA;AAEAC,mBAFA;AAGAC;AAHA;AAnBA;AAyBA,GAvCA;AAwCAC;AACA;AACAC,eAFA,yBAEA;AACA;AACA,KAJA;AAKAC,eALA,uBAKAC,EALA,EAKA;AACA;AACA,KAPA;AAQAC,iBARA,2BAQA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AACAC,oBAHA,GAGA,KAHA;AAIAC,qBAJA,GAIAC,cAJA,EAKAC,SALA,GAKA,EALA;AAMAC;;AACA;AACAC,mBADA,GACAJ,yBADA,EAEAK,CAFA,GAEAL,yBAFA,EAGAM,CAHA,GAGAN,wBAHA;AAIAE;AACA;;AACAK,uBAbA,GAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC;AACAC,gCADA;AAEAC,kCAFA;AAGAC,gDAHA;AAGA;AACAC,gDAJA;AAKAC;AACAC;AACAC;AADA,uBADA;AAIAC;AACAD;AADA;AAJA,qBALA;AAaAE;AACAH;AACAI,8CADA;AAEAC,wCAFA;AAGAC,yCAHA;AAIAC;AAJA,uBADA;AAOAL;AACAM;AADA;AAPA;AAbA,mBAnDA;AA4EAC,2BACA;AACA;AACA1C,+BADA;AAEA2C,oCAFA;AAGAd,kCAHA;AAIAC,gDAJA;AAIA;AACAC,gDALA;AAMAa,2BANA;AAMA;AACA;AACAC;AACA;AACAC,4BAFA;AAGAC;AAHA,qBARA;AAaAf;AACAC;AACAC,kCADA;AAEAc;AACAC,0CADA;AAEAC;AAFA,yBAFA;AAMAC;AANA,uBADA;AASAhB;AACAD,kCADA;AAEAc;AACAC,0CADA;AAEAC;AAFA,yBAFA;AAMAC;AANA;AATA,qBAbA;AAgCAf;AACAH;AACAQ,4CADA;AAEAW,8CAFA;AAGAC;AAHA,uBADA;AAOAlB;AACAM;AADA;AAPA;AAhCA,mBAFA,EA8CA;AACAP,8BADA;AAEAlC,yCAFA;AAGAsD;AACA;AACA;AACA;AACAhC;AACA;AACA;AACA,qBAVA;AAWAiC;AACA;AACAC,8BAFA,CAEA;;AAFA,qBAXA;AAeAC,2CAfA;AAeA;AACApD;AAhBA,mBA9CA;AA5EA,iBAbA;AA4JAqD,uBA5JA,GA4JA,yCA5JA;AA6JAA;;AA7JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8JA;AAtKA,GAxCA;AAgNAC,SAhNA,qBAgNA;AACA;AACA,GAlNA;AAmNAC,eAnNA,2BAmNA;AACA;AACA;AACA;;AACA;AACA;AACA;AAzNA,E,CA2NA","names":["props","title_change","type","default","watch","new_val","old_val","data","list","warnname","standard","cur_info","year","title","region_data","methods","randomValue","time_change","id","set_china_map","that","_data","china","scar_data","console","x","y","z","options","geo","map","aspectScale","layoutCenter","layoutSize","label","normal","show","emphasis","itemStyle","shadowColor","shadowOffsetX","shadowOffsetY","opacity","areaColor","series","mapType","zoom","scaleLimit","min","max","textStyle","color","fontSize","offset","borderColor","borderWidth","symbolSize","rippleEffect","scale","coordinateSystem","myChart","mounted","beforeDestroy"],"sourceRoot":"src/components","sources":["MainPageRightMap.vue"],"sourcesContent":["<template>\r\n  <div class=\"h-3\">\r\n    <div ref=\"myEchart\" style=\"width: 1231px; height: 808px\"></div>\r\n    <div class=\"time_content\">\r\n      <div class=\"Timeline\">\r\n        <div class=\"timeaxis\">\r\n          <div v-for=\"(item, i) in list\" :key=\"i\">\r\n            <div class=\"timeaxis-box\">\r\n              <div\r\n                class=\"timeaxis-topText\"\r\n                :class=\"{ 'bd-empty': i == list.length - 1 }\"\r\n              ></div>\r\n              <div class=\"circular\" @click=\"time_change(item.standard)\"></div>\r\n              <div class=\"timeaxis-bootomText\">\r\n                <div class=\"text\">{{ item.standard }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport china from \"../assets/map/china.json\";\r\nimport speed_average_data from \"../assets/Sheng/item_data/speed_average.json\";\r\nexport default {\r\n  props: {\r\n    title_change: {\r\n      type: String,\r\n      default: \"政治\",\r\n    },\r\n  },\r\n  watch: {\r\n    title_change(new_val, old_val) {\r\n      this.cur_info.title = new_val;\r\n      this.set_china_map();\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      list: [\r\n        {\r\n          warnname: \"提交广告\",\r\n          standard: \"2017\",\r\n        },\r\n        {\r\n          warnname: \"审核通过\",\r\n          standard: \"2018\",\r\n        },\r\n        {\r\n          warnname: \"投放\",\r\n          standard: \"2019\",\r\n        },\r\n        {\r\n          warnname: \"结束投放\",\r\n          standard: \"2020\",\r\n        },\r\n      ],\r\n      cur_info: {\r\n        year: \"2017\",\r\n        title: \"政治\",\r\n        region_data: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 随机函数\r\n    randomValue() {\r\n      return Math.round(Math.random() * 1000);\r\n    },\r\n    time_change(id) {\r\n      this.cur_info.year = id;\r\n    },\r\n    async set_china_map() {\r\n      this.$echarts.registerMap(\"china\", china);\r\n      this.layoutSize = \"150%\";\r\n      let that = this;\r\n      let _data = china.features,\r\n        scar_data = [];\r\n      console.log(_data)\r\n      for (let i in _data) {\r\n        let x = _data[i].properties.cp[0],\r\n          y = _data[i].properties.cp[1],\r\n          z = _data[i].properties.name;\r\n        scar_data.push([x, y, z]);\r\n      }\r\n      let options = {\r\n        // tooltip: {\r\n        //   triggerOn: \"click\",\r\n        //   enterable: true,\r\n        //   confine: true,\r\n        //   formatter: function (params) {\r\n        //     let lastRegionName = \"\";\r\n        //     setInterval(function () {\r\n        //       if (document.getElementById(\"main_page_map_tooltip\")) {\r\n        //         if (params.name !== lastRegionName) {\r\n        //           var myChart = that.$echarts.init(\r\n        //             document.getElementById(\"main_page_map_tooltip\")\r\n        //           );\r\n        //           var init_option = {\r\n        //             title: {\r\n        //               text: params.name,\r\n        //             },\r\n        //             tooltip: {},\r\n        //             legend: {\r\n        //               data: [\"销量\"],\r\n        //             },\r\n        //             xAxis: {\r\n        //               data: [\r\n        //                 \"衬衫\",\r\n        //                 \"羊毛衫\",\r\n        //                 \"雪纺衫\",\r\n        //                 \"裤子\",\r\n        //                 \"高跟鞋\",\r\n        //                 \"袜子\",\r\n        //               ],\r\n        //             },\r\n        //             yAxis: {},\r\n        //             series: [\r\n        //               {\r\n        //                 name: \"销量\",\r\n        //                 type: \"bar\",\r\n        //                 data: [5, 20, 36, 10, 10, 20],\r\n        //               },\r\n        //             ],\r\n        //           };\r\n        //           myChart.setOption(init_option);\r\n        //           lastRegionName = params.name;\r\n        //         }\r\n        //       }\r\n        //     }, 500);\r\n        //     return `\r\n        //     <div id=\"main_page_map_tooltip\" style=\"width: 600px;height:400px;\"></div>\r\n        //     `;\r\n        //   }, //数据格式化\r\n        // },\r\n\r\n        geo: {\r\n          map: \"china\",\r\n          aspectScale: 1,\r\n          layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n          layoutSize: this.layoutSize,\r\n          label: {\r\n            normal: {\r\n              show: false,\r\n            },\r\n            emphasis: {\r\n              show: false,\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              shadowColor: \"#276fce\",\r\n              shadowOffsetX: 0,\r\n              shadowOffsetY: 15,\r\n              opacity: 0.5,\r\n            },\r\n            emphasis: {\r\n              areaColor: \"#276fce\",\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          // 常规地图\r\n          {\r\n            type: \"map\",\r\n            mapType: \"china\",\r\n            aspectScale: 1,\r\n            layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n            layoutSize: this.layoutSize,\r\n            zoom: 1, //当前视角的缩放比例\r\n            // roam: true, //是否开启平游或缩放\r\n            scaleLimit: {\r\n              //滚轮缩放的极限控制\r\n              min: 1,\r\n              max: 2,\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                textStyle: {\r\n                  color: \"#FFFFFF\",\r\n                  fontSize: 18,\r\n                },\r\n                offset:[0,-20]\r\n              },\r\n              emphasis: {\r\n                show: true,\r\n                textStyle: {\r\n                  color: \"#FFFFFF\",\r\n                  fontSize: 18,\r\n                },\r\n                offset:[0,-20]\r\n              },\r\n              \r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                areaColor: \"#0c274b\",\r\n                borderColor: \"#1cccff\",\r\n                borderWidth: 1.5,\r\n              },\r\n\r\n              emphasis: {\r\n                areaColor: \"#02102b\",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            show: true,\r\n            type: \"effectScatter\",\r\n            symbolSize:function(params){\r\n              //\r\n              let t=parseInt(that.cur_info.year)-2017\r\n              if((params[2] in speed_average_data['scar'])==false)return 0\r\n              console.log(speed_average_data['scar'][params[2]])\r\n              let x=speed_average_data['scar'][params[2]][that.cur_info.title][t]\r\n              return 30/x\r\n            },\r\n            rippleEffect: {\r\n              // 涟漪特效相关配置。\r\n              scale: 4, // 控制涟漪大小\r\n            },\r\n            coordinateSystem: \"geo\", // series坐标系类型\r\n            data: scar_data,\r\n          },\r\n        ],\r\n      };\r\n\r\n      let myChart = this.$echarts.init(this.$refs.myEchart);\r\n      myChart.setOption(options);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.set_china_map();\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.myChart) {\r\n      return;\r\n    }\r\n    this.myChart.dispose();\r\n    this.myChart = null;\r\n  },\r\n};\r\n// 基于准备好的dom，初始化echarts实例\r\n</script>\r\n<style lang=\"less\">\r\n/*懒加载图标动画*/\r\n.h-3 {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  .time_content {\r\n    width: 1231px;\r\n    height: 0px;\r\n    font-size: 20px;\r\n    z-index: 999999;\r\n    .Timeline {\r\n      width: 100%;\r\n      height: 100%;\r\n      margin-top: 40px;\r\n      .timeaxis {\r\n        height: 50px;\r\n        margin-top: 80px;\r\n        margin-left: 4em;\r\n        display: flex;\r\n        .timeaxis-box {\r\n          width: 430px;\r\n          .circular {\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 50%;\r\n            background: #165dff;\r\n            //margin-bottom: -10px;\r\n            position: relative;\r\n            top: -10px;\r\n            box-shadow: 0px 0px 5px 5px #fff;\r\n          }\r\n          .circular:hover {\r\n            width: 30px;\r\n            height: 30px;\r\n            border-radius: 50%;\r\n            background: #ff1616;\r\n            //margin-bottom: -10px;\r\n            position: relative;\r\n            top: -15px;\r\n            left: -5px;\r\n            box-shadow: 0px 0px 5px 5px #fff;\r\n          }\r\n          .timeaxis-topText {\r\n            border-bottom: 5px solid #c9cdd4; //时间轴线的宽度和颜色\r\n            position: relative;\r\n          }\r\n          .bd-empty {\r\n            // border: 0;\r\n            //margin-top: 5px;\r\n            border-bottom: 5px solid #c9cdd4; //时间轴线的宽度和颜色\r\n            opacity: 0;\r\n            position: relative;\r\n          }\r\n          .timeaxis-bootomText {\r\n            position: relative;\r\n            .text {\r\n              position: absolute;\r\n              top: 10px;\r\n              font-size: 28px;\r\n              left: -20px;\r\n              color: #fff;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}