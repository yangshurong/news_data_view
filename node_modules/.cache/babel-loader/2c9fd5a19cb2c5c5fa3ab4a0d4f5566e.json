{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { isTypedArray, clone, createHashMap, isArray, isObject, isArrayLike, hasOwn, assert, each, map, isNumber, isString } from 'zrender/lib/core/util';\nimport { SOURCE_FORMAT_ORIGINAL, SERIES_LAYOUT_BY_COLUMN, SOURCE_FORMAT_UNKNOWN, SOURCE_FORMAT_KEYED_COLUMNS, SOURCE_FORMAT_TYPED_ARRAY, SOURCE_FORMAT_ARRAY_ROWS, SOURCE_FORMAT_OBJECT_ROWS, SERIES_LAYOUT_BY_ROW } from '../util/types';\nimport { getDataItemValue } from '../util/model';\n;\n\nvar SourceImpl = function () {\n  function SourceImpl(fields) {\n    this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n    this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n    this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n    this.startIndex = fields.startIndex || 0;\n    this.dimensionsDefine = fields.dimensionsDefine;\n    this.dimensionsDetectedCount = fields.dimensionsDetectedCount;\n    this.encodeDefine = fields.encodeDefine;\n    this.metaRawOption = fields.metaRawOption;\n  }\n\n  return SourceImpl;\n}();\n\nexport function isSourceInstance(val) {\n  return val instanceof SourceImpl;\n}\nexport function createSource(sourceData, thisMetaRawOption, sourceFormat, encodeDefine) {\n  sourceFormat = sourceFormat || detectSourceFormat(sourceData);\n  var seriesLayoutBy = thisMetaRawOption.seriesLayoutBy;\n  var determined = determineSourceDimensions(sourceData, sourceFormat, seriesLayoutBy, thisMetaRawOption.sourceHeader, thisMetaRawOption.dimensions);\n  var source = new SourceImpl({\n    data: sourceData,\n    sourceFormat: sourceFormat,\n    seriesLayoutBy: seriesLayoutBy,\n    dimensionsDefine: determined.dimensionsDefine,\n    startIndex: determined.startIndex,\n    dimensionsDetectedCount: determined.dimensionsDetectedCount,\n    encodeDefine: makeEncodeDefine(encodeDefine),\n    metaRawOption: clone(thisMetaRawOption)\n  });\n  return source;\n}\nexport function createSourceFromSeriesDataOption(data) {\n  return new SourceImpl({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL\n  });\n}\nexport function cloneSourceShallow(source) {\n  return new SourceImpl({\n    data: source.data,\n    sourceFormat: source.sourceFormat,\n    seriesLayoutBy: source.seriesLayoutBy,\n    dimensionsDefine: clone(source.dimensionsDefine),\n    startIndex: source.startIndex,\n    dimensionsDetectedCount: source.dimensionsDetectedCount,\n    encodeDefine: makeEncodeDefine(source.encodeDefine)\n  });\n}\n\nfunction makeEncodeDefine(encodeDefine) {\n  return encodeDefine ? createHashMap(encodeDefine) : null;\n}\n\nexport function detectSourceFormat(data) {\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    if (data.length === 0) {\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n    }\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (hasOwn(data, key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  }\n\n  return sourceFormat;\n}\n\nfunction determineSourceDimensions(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  var dimensionsDetectedCount;\n  var startIndex;\n\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\n      startIndex: startIndex,\n      dimensionsDetectedCount: dimensionsDetectedCount\n    };\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    var dataArrayRows = data;\n\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        }\n      }, seriesLayoutBy, dataArrayRows, 10);\n    } else {\n      startIndex = isNumber(sourceHeader) ? sourceHeader : sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val + '' : '';\n      }, seriesLayoutBy, dataArrayRows, Infinity);\n    }\n\n    dimensionsDetectedCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? dataArrayRows.length : dataArrayRows[0] ? dataArrayRows[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectedCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!!dimensionsDefine, 'dimensions must be given if data is TypedArray.');\n    }\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\n    dimensionsDetectedCount: dimensionsDetectedCount\n  };\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {}\n\n  if (obj) {\n    var dimensions_1 = [];\n    each(obj, function (value, key) {\n      dimensions_1.push(key);\n    });\n    return dimensions_1;\n  }\n}\n\nfunction normalizeDimensionsOption(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (rawItem, index) {\n    rawItem = isObject(rawItem) ? rawItem : {\n      name: rawItem\n    };\n    var item = {\n      name: rawItem.name,\n      displayName: rawItem.displayName,\n      type: rawItem.type\n    };\n\n    if (item.name == null) {\n      return item;\n    }\n\n    item.name += '';\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_echarts@5.0.1@echarts/lib/data/Source.js"],"names":["isTypedArray","clone","createHashMap","isArray","isObject","isArrayLike","hasOwn","assert","each","map","isNumber","isString","SOURCE_FORMAT_ORIGINAL","SERIES_LAYOUT_BY_COLUMN","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SERIES_LAYOUT_BY_ROW","getDataItemValue","SourceImpl","fields","data","sourceFormat","seriesLayoutBy","startIndex","dimensionsDefine","dimensionsDetectedCount","encodeDefine","metaRawOption","isSourceInstance","val","createSource","sourceData","thisMetaRawOption","detectSourceFormat","determined","determineSourceDimensions","sourceHeader","dimensions","source","makeEncodeDefine","createSourceFromSeriesDataOption","cloneSourceShallow","length","i","len","item","key","normalizeDimensionsOption","dataArrayRows","arrayRowsTravelFirst","index","Infinity","objectRowsCollectDimensions","colArr","push","value0","process","env","NODE_ENV","firstIndex","obj","dimensions_1","value","nameMap","rawItem","name","displayName","type","exist","get","set","count","cb","maxLoop"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { isTypedArray, clone, createHashMap, isArray, isObject, isArrayLike, hasOwn, assert, each, map, isNumber, isString } from 'zrender/lib/core/util';\nimport { SOURCE_FORMAT_ORIGINAL, SERIES_LAYOUT_BY_COLUMN, SOURCE_FORMAT_UNKNOWN, SOURCE_FORMAT_KEYED_COLUMNS, SOURCE_FORMAT_TYPED_ARRAY, SOURCE_FORMAT_ARRAY_ROWS, SOURCE_FORMAT_OBJECT_ROWS, SERIES_LAYOUT_BY_ROW } from '../util/types';\nimport { getDataItemValue } from '../util/model';\n;\n\nvar SourceImpl = function () {\n  function SourceImpl(fields) {\n    this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n    this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n    this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n    this.startIndex = fields.startIndex || 0;\n    this.dimensionsDefine = fields.dimensionsDefine;\n    this.dimensionsDetectedCount = fields.dimensionsDetectedCount;\n    this.encodeDefine = fields.encodeDefine;\n    this.metaRawOption = fields.metaRawOption;\n  }\n\n  return SourceImpl;\n}();\n\nexport function isSourceInstance(val) {\n  return val instanceof SourceImpl;\n}\nexport function createSource(sourceData, thisMetaRawOption, sourceFormat, encodeDefine) {\n  sourceFormat = sourceFormat || detectSourceFormat(sourceData);\n  var seriesLayoutBy = thisMetaRawOption.seriesLayoutBy;\n  var determined = determineSourceDimensions(sourceData, sourceFormat, seriesLayoutBy, thisMetaRawOption.sourceHeader, thisMetaRawOption.dimensions);\n  var source = new SourceImpl({\n    data: sourceData,\n    sourceFormat: sourceFormat,\n    seriesLayoutBy: seriesLayoutBy,\n    dimensionsDefine: determined.dimensionsDefine,\n    startIndex: determined.startIndex,\n    dimensionsDetectedCount: determined.dimensionsDetectedCount,\n    encodeDefine: makeEncodeDefine(encodeDefine),\n    metaRawOption: clone(thisMetaRawOption)\n  });\n  return source;\n}\nexport function createSourceFromSeriesDataOption(data) {\n  return new SourceImpl({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL\n  });\n}\nexport function cloneSourceShallow(source) {\n  return new SourceImpl({\n    data: source.data,\n    sourceFormat: source.sourceFormat,\n    seriesLayoutBy: source.seriesLayoutBy,\n    dimensionsDefine: clone(source.dimensionsDefine),\n    startIndex: source.startIndex,\n    dimensionsDetectedCount: source.dimensionsDetectedCount,\n    encodeDefine: makeEncodeDefine(source.encodeDefine)\n  });\n}\n\nfunction makeEncodeDefine(encodeDefine) {\n  return encodeDefine ? createHashMap(encodeDefine) : null;\n}\n\nexport function detectSourceFormat(data) {\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    if (data.length === 0) {\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n    }\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (hasOwn(data, key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  }\n\n  return sourceFormat;\n}\n\nfunction determineSourceDimensions(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  var dimensionsDetectedCount;\n  var startIndex;\n\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\n      startIndex: startIndex,\n      dimensionsDetectedCount: dimensionsDetectedCount\n    };\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    var dataArrayRows = data;\n\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        }\n      }, seriesLayoutBy, dataArrayRows, 10);\n    } else {\n      startIndex = isNumber(sourceHeader) ? sourceHeader : sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val + '' : '';\n      }, seriesLayoutBy, dataArrayRows, Infinity);\n    }\n\n    dimensionsDetectedCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? dataArrayRows.length : dataArrayRows[0] ? dataArrayRows[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectedCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!!dimensionsDefine, 'dimensions must be given if data is TypedArray.');\n    }\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\n    dimensionsDetectedCount: dimensionsDetectedCount\n  };\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {}\n\n  if (obj) {\n    var dimensions_1 = [];\n    each(obj, function (value, key) {\n      dimensions_1.push(key);\n    });\n    return dimensions_1;\n  }\n}\n\nfunction normalizeDimensionsOption(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (rawItem, index) {\n    rawItem = isObject(rawItem) ? rawItem : {\n      name: rawItem\n    };\n    var item = {\n      name: rawItem.name,\n      displayName: rawItem.displayName,\n      type: rawItem.type\n    };\n\n    if (item.name == null) {\n      return item;\n    }\n\n    item.name += '';\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}