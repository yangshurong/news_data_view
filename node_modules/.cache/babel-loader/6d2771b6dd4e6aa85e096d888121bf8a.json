{"ast":null,"code":"var EXTENSION_LIST = ['OES_texture_float', 'OES_texture_half_float', 'OES_texture_float_linear', 'OES_texture_half_float_linear', 'OES_standard_derivatives', 'OES_vertex_array_object', 'OES_element_index_uint', 'WEBGL_compressed_texture_s3tc', 'WEBGL_depth_texture', 'EXT_texture_filter_anisotropic', 'EXT_shader_texture_lod', 'WEBGL_draw_buffers', 'EXT_frag_depth', 'EXT_sRGB', 'ANGLE_instanced_arrays'];\nvar PARAMETER_NAMES = ['MAX_TEXTURE_SIZE', 'MAX_CUBE_MAP_TEXTURE_SIZE'];\n\nfunction GLInfo(_gl) {\n  var extensions = {};\n  var parameters = {}; // Get webgl extension\n\n  for (var i = 0; i < EXTENSION_LIST.length; i++) {\n    var extName = EXTENSION_LIST[i];\n    createExtension(extName);\n  } // Get parameters\n\n\n  for (var i = 0; i < PARAMETER_NAMES.length; i++) {\n    var name = PARAMETER_NAMES[i];\n    parameters[name] = _gl.getParameter(_gl[name]);\n  }\n\n  this.getExtension = function (name) {\n    if (!(name in extensions)) {\n      createExtension(name);\n    }\n\n    return extensions[name];\n  };\n\n  this.getParameter = function (name) {\n    return parameters[name];\n  };\n\n  function createExtension(name) {\n    if (_gl.getExtension) {\n      var ext = _gl.getExtension(name);\n\n      if (!ext) {\n        ext = _gl.getExtension('MOZ_' + name);\n      }\n\n      if (!ext) {\n        ext = _gl.getExtension('WEBKIT_' + name);\n      }\n\n      extensions[name] = ext;\n    }\n  }\n}\n\nexport default GLInfo;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/claygl/src/core/GLInfo.js"],"names":["EXTENSION_LIST","PARAMETER_NAMES","GLInfo","_gl","extensions","parameters","i","length","extName","createExtension","name","getParameter","getExtension","ext"],"mappings":"AAAA,IAAIA,cAAc,GAAG,CACjB,mBADiB,EAEjB,wBAFiB,EAGjB,0BAHiB,EAIjB,+BAJiB,EAKjB,0BALiB,EAMjB,yBANiB,EAOjB,wBAPiB,EAQjB,+BARiB,EASjB,qBATiB,EAUjB,gCAViB,EAWjB,wBAXiB,EAYjB,oBAZiB,EAajB,gBAbiB,EAcjB,UAdiB,EAejB,wBAfiB,CAArB;AAkBA,IAAIC,eAAe,GAAG,CAClB,kBADkB,EAElB,2BAFkB,CAAtB;;AAKA,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAG,EAAjB,CAFiB,CAIjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,cAAc,CAACO,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,QAAIE,OAAO,GAAGR,cAAc,CAACM,CAAD,CAA5B;AACAG,IAAAA,eAAe,CAACD,OAAD,CAAf;AACH,GARgB,CASjB;;;AACA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,eAAe,CAACM,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,QAAII,IAAI,GAAGT,eAAe,CAACK,CAAD,CAA1B;AACAD,IAAAA,UAAU,CAACK,IAAD,CAAV,GAAmBP,GAAG,CAACQ,YAAJ,CAAiBR,GAAG,CAACO,IAAD,CAApB,CAAnB;AACH;;AAED,OAAKE,YAAL,GAAoB,UAAUF,IAAV,EAAgB;AAChC,QAAI,EAAEA,IAAI,IAAIN,UAAV,CAAJ,EAA2B;AACvBK,MAAAA,eAAe,CAACC,IAAD,CAAf;AACH;;AACD,WAAON,UAAU,CAACM,IAAD,CAAjB;AACH,GALD;;AAOA,OAAKC,YAAL,GAAoB,UAAUD,IAAV,EAAgB;AAChC,WAAOL,UAAU,CAACK,IAAD,CAAjB;AACH,GAFD;;AAIA,WAASD,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,QAAIP,GAAG,CAACS,YAAR,EAAsB;AAClB,UAAIC,GAAG,GAAGV,GAAG,CAACS,YAAJ,CAAiBF,IAAjB,CAAV;;AACA,UAAI,CAACG,GAAL,EAAU;AACNA,QAAAA,GAAG,GAAGV,GAAG,CAACS,YAAJ,CAAiB,SAASF,IAA1B,CAAN;AACH;;AACD,UAAI,CAACG,GAAL,EAAU;AACNA,QAAAA,GAAG,GAAGV,GAAG,CAACS,YAAJ,CAAiB,YAAYF,IAA7B,CAAN;AACH;;AACDN,MAAAA,UAAU,CAACM,IAAD,CAAV,GAAmBG,GAAnB;AACH;AACJ;AACJ;;AAED,eAAeX,MAAf","sourcesContent":["var EXTENSION_LIST = [\n    'OES_texture_float',\n    'OES_texture_half_float',\n    'OES_texture_float_linear',\n    'OES_texture_half_float_linear',\n    'OES_standard_derivatives',\n    'OES_vertex_array_object',\n    'OES_element_index_uint',\n    'WEBGL_compressed_texture_s3tc',\n    'WEBGL_depth_texture',\n    'EXT_texture_filter_anisotropic',\n    'EXT_shader_texture_lod',\n    'WEBGL_draw_buffers',\n    'EXT_frag_depth',\n    'EXT_sRGB',\n    'ANGLE_instanced_arrays'\n];\n\nvar PARAMETER_NAMES = [\n    'MAX_TEXTURE_SIZE',\n    'MAX_CUBE_MAP_TEXTURE_SIZE'\n];\n\nfunction GLInfo(_gl) {\n    var extensions = {};\n    var parameters = {};\n\n    // Get webgl extension\n    for (var i = 0; i < EXTENSION_LIST.length; i++) {\n        var extName = EXTENSION_LIST[i];\n        createExtension(extName);\n    }\n    // Get parameters\n    for (var i = 0; i < PARAMETER_NAMES.length; i++) {\n        var name = PARAMETER_NAMES[i];\n        parameters[name] = _gl.getParameter(_gl[name]);\n    }\n\n    this.getExtension = function (name) {\n        if (!(name in extensions)) {\n            createExtension(name);\n        }\n        return extensions[name];\n    };\n\n    this.getParameter = function (name) {\n        return parameters[name];\n    };\n\n    function createExtension(name) {\n        if (_gl.getExtension) {\n            var ext = _gl.getExtension(name);\n            if (!ext) {\n                ext = _gl.getExtension('MOZ_' + name);\n            }\n            if (!ext) {\n                ext = _gl.getExtension('WEBKIT_' + name);\n            }\n            extensions[name] = ext;\n        }\n    }\n}\n\nexport default GLInfo;\n"]},"metadata":{},"sourceType":"module"}