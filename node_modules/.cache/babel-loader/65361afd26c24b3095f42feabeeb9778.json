{"ast":null,"code":"import _typeof from \"C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.error.cause.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\nimport { each, filter, isArray, isObject, isString, createHashMap, assert, clone, merge, extend, mixin, isFunction } from 'zrender/lib/core/util';\nimport * as modelUtil from '../util/model';\nimport Model from './Model';\nimport ComponentModel from './Component';\nimport globalDefault from './globalDefault';\nimport { resetSourceDefaulter } from '../data/helper/sourceHelper';\nimport { concatInternalOptions } from './internalComponentCreator';\nimport { PaletteMixin } from './mixin/palette';\nvar reCreateSeriesIndices;\nvar assertSeriesInitialized;\nvar initBase;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\nvar OPTION_INNER_VALUE = 1;\n\nvar GlobalModel = function (_super) {\n  __extends(GlobalModel, _super);\n\n  function GlobalModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GlobalModel.prototype.init = function (option, parentModel, ecModel, theme, locale, optionManager) {\n    theme = theme || {};\n    this.option = null;\n    this._theme = new Model(theme);\n    this._locale = new Model(locale);\n    this._optionManager = optionManager;\n  };\n\n  GlobalModel.prototype.setOption = function (option, opts, optionPreprocessorFuncs) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(option != null, 'option is null/undefined');\n      assert(option[OPTION_INNER_KEY] !== OPTION_INNER_VALUE, 'please use chart.getOption()');\n    }\n\n    var innerOpt = normalizeSetOptionInput(opts);\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs, innerOpt);\n\n    this._resetOption(null, innerOpt);\n  };\n\n  GlobalModel.prototype.resetOption = function (type, opt) {\n    return this._resetOption(type, normalizeSetOptionInput(opt));\n  };\n\n  GlobalModel.prototype._resetOption = function (type, opt) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase(this, baseOption);\n      } else {\n        this.restoreData();\n\n        this._mergeOption(baseOption, opt);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n\n      if (timelineOption) {\n        optionChanged = true;\n\n        this._mergeOption(timelineOption, opt);\n      }\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          optionChanged = true;\n\n          this._mergeOption(mediaOption, opt);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  };\n\n  GlobalModel.prototype.mergeOption = function (option) {\n    this._mergeOption(option, null);\n  };\n\n  GlobalModel.prototype._mergeOption = function (newOption, opt) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var componentsCount = this._componentsCount;\n    var newCmptTypes = [];\n    var newCmptTypeMap = createHashMap();\n    var replaceMergeMainTypeMap = opt && opt.replaceMergeMainTypeMap;\n    resetSourceDefaulter(this);\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCmptTypes.push(mainType);\n        newCmptTypeMap.set(mainType, true);\n      }\n    });\n\n    if (replaceMergeMainTypeMap) {\n      replaceMergeMainTypeMap.each(function (val, mainTypeInReplaceMerge) {\n        if (ComponentModel.hasClass(mainTypeInReplaceMerge) && !newCmptTypeMap.get(mainTypeInReplaceMerge)) {\n          newCmptTypes.push(mainTypeInReplaceMerge);\n          newCmptTypeMap.set(mainTypeInReplaceMerge, true);\n        }\n      });\n    }\n\n    ComponentModel.topologicalTravel(newCmptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType) {\n      var newCmptOptionList = concatInternalOptions(this, mainType, modelUtil.normalizeToArray(newOption[mainType]));\n      var oldCmptList = componentsMap.get(mainType);\n      var mergeMode = !oldCmptList ? 'replaceAll' : replaceMergeMainTypeMap && replaceMergeMainTypeMap.get(mainType) ? 'replaceMerge' : 'normalMerge';\n      var mappingResult = modelUtil.mappingToExists(oldCmptList, newCmptOptionList, mergeMode);\n      modelUtil.setComponentTypeToKeyInfo(mappingResult, mainType, ComponentModel);\n      option[mainType] = null;\n      componentsMap.set(mainType, null);\n      componentsCount.set(mainType, 0);\n      var optionsByMainType = [];\n      var cmptsByMainType = [];\n      var cmptsCountByMainType = 0;\n      each(mappingResult, function (resultItem, index) {\n        var componentModel = resultItem.existing;\n        var newCmptOption = resultItem.newOption;\n\n        if (!newCmptOption) {\n          if (componentModel) {\n            componentModel.mergeOption({}, this);\n            componentModel.optionUpdated({}, false);\n          }\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel.constructor === ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCmptOption, this);\n            componentModel.optionUpdated(newCmptOption, false);\n          } else {\n            var extraOpt = extend({\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCmptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n\n            if (resultItem.brandNew) {\n              componentModel.__requireNewView = true;\n            }\n\n            componentModel.init(newCmptOption, this, this);\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        if (componentModel) {\n          optionsByMainType.push(componentModel.option);\n          cmptsByMainType.push(componentModel);\n          cmptsCountByMainType++;\n        } else {\n          optionsByMainType.push(void 0);\n          cmptsByMainType.push(void 0);\n        }\n      }, this);\n      option[mainType] = optionsByMainType;\n      componentsMap.set(mainType, cmptsByMainType);\n      componentsCount.set(mainType, cmptsCountByMainType);\n\n      if (mainType === 'series') {\n        reCreateSeriesIndices(this);\n      }\n    }\n\n    if (!this._seriesIndices) {\n      reCreateSeriesIndices(this);\n    }\n  };\n\n  GlobalModel.prototype.getOption = function () {\n    var option = clone(this.option);\n    each(option, function (optInMainType, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(optInMainType);\n        var realLen = opts.length;\n        var metNonInner = false;\n\n        for (var i = realLen - 1; i >= 0; i--) {\n          if (opts[i] && !modelUtil.isComponentIdInternal(opts[i])) {\n            metNonInner = true;\n          } else {\n            opts[i] = null;\n            !metNonInner && realLen--;\n          }\n        }\n\n        opts.length = realLen;\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  };\n\n  GlobalModel.prototype.getTheme = function () {\n    return this._theme;\n  };\n\n  GlobalModel.prototype.getLocaleModel = function () {\n    return this._locale;\n  };\n\n  GlobalModel.prototype.getLocale = function (localePosition) {\n    var locale = this.getLocaleModel();\n    return locale.get(localePosition);\n  };\n\n  GlobalModel.prototype.setUpdatePayload = function (payload) {\n    this._payload = payload;\n  };\n\n  GlobalModel.prototype.getUpdatePayload = function () {\n    return this._payload;\n  };\n\n  GlobalModel.prototype.getComponent = function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      var cmpt = list[idx || 0];\n\n      if (cmpt) {\n        return cmpt;\n      } else if (idx == null) {\n        for (var i = 0; i < list.length; i++) {\n          if (list[i]) {\n            return list[i];\n          }\n        }\n      }\n    }\n  };\n\n  GlobalModel.prototype.queryComponents = function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cmpts = this._componentsMap.get(mainType);\n\n    if (!cmpts || !cmpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      result = [];\n      each(modelUtil.normalizeToArray(index), function (idx) {\n        cmpts[idx] && result.push(cmpts[idx]);\n      });\n    } else if (id != null) {\n      result = queryByIdOrName('id', id, cmpts);\n    } else if (name != null) {\n      result = queryByIdOrName('name', name, cmpts);\n    } else {\n      result = filter(cmpts, function (cmpt) {\n        return !!cmpt;\n      });\n    }\n\n    return filterBySubType(result, condition);\n  };\n\n  GlobalModel.prototype.findComponents = function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : filter(this._componentsMap.get(mainType), function (cmpt) {\n      return !!cmpt;\n    });\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  };\n\n  GlobalModel.prototype.eachComponent = function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (isFunction(mainType)) {\n      var ctxForAll_1 = cb;\n      var cbForAll_1 = mainType;\n      componentsMap.each(function (cmpts, componentType) {\n        for (var i = 0; cmpts && i < cmpts.length; i++) {\n          var cmpt = cmpts[i];\n          cmpt && cbForAll_1.call(ctxForAll_1, componentType, cmpt, cmpt.componentIndex);\n        }\n      });\n    } else {\n      var cmpts = isString(mainType) ? componentsMap.get(mainType) : isObject(mainType) ? this.findComponents(mainType) : null;\n\n      for (var i = 0; cmpts && i < cmpts.length; i++) {\n        var cmpt = cmpts[i];\n        cmpt && cb.call(context, cmpt, cmpt.componentIndex);\n      }\n    }\n  };\n\n  GlobalModel.prototype.getSeriesByName = function (name) {\n    var nameStr = modelUtil.convertOptionIdName(name, null);\n    return filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && nameStr != null && oneSeries.name === nameStr;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesByIndex = function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  };\n\n  GlobalModel.prototype.getSeriesByType = function (subType) {\n    return filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && oneSeries.subType === subType;\n    });\n  };\n\n  GlobalModel.prototype.getSeries = function () {\n    return filter(this._componentsMap.get('series').slice(), function (oneSeries) {\n      return !!oneSeries;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesCount = function () {\n    return this._componentsCount.get('series');\n  };\n\n  GlobalModel.prototype.eachSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeries = function (cb, context) {\n    each(this._componentsMap.get('series'), function (series) {\n      series && cb.call(context, series, series.componentIndex);\n    });\n  };\n\n  GlobalModel.prototype.eachSeriesByType = function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeriesByType = function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  };\n\n  GlobalModel.prototype.isSeriesFiltered = function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  };\n\n  GlobalModel.prototype.getCurrentSeriesIndices = function () {\n    return (this._seriesIndices || []).slice();\n  };\n\n  GlobalModel.prototype.filterSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    var newSeriesIndices = [];\n    each(this._seriesIndices, function (seriesRawIdx) {\n      var series = this._componentsMap.get('series')[seriesRawIdx];\n\n      cb.call(context, series, seriesRawIdx) && newSeriesIndices.push(seriesRawIdx);\n    }, this);\n    this._seriesIndices = newSeriesIndices;\n    this._seriesIndicesMap = createHashMap(newSeriesIndices);\n  };\n\n  GlobalModel.prototype.restoreData = function (payload) {\n    reCreateSeriesIndices(this);\n    var componentsMap = this._componentsMap;\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      if (ComponentModel.hasClass(componentType)) {\n        componentTypes.push(componentType);\n      }\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType) {\n      each(componentsMap.get(componentType), function (component) {\n        if (component && (componentType !== 'series' || !isNotTargetSeries(component, payload))) {\n          component.restoreData();\n        }\n      });\n    });\n  };\n\n  GlobalModel.internalField = function () {\n    reCreateSeriesIndices = function reCreateSeriesIndices(ecModel) {\n      var seriesIndices = ecModel._seriesIndices = [];\n      each(ecModel._componentsMap.get('series'), function (series) {\n        series && seriesIndices.push(series.componentIndex);\n      });\n      ecModel._seriesIndicesMap = createHashMap(seriesIndices);\n    };\n\n    assertSeriesInitialized = function assertSeriesInitialized(ecModel) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!ecModel._seriesIndices) {\n          throw new Error('Option should contains series.');\n        }\n      }\n    };\n\n    initBase = function initBase(ecModel, baseOption) {\n      ecModel.option = {};\n      ecModel.option[OPTION_INNER_KEY] = OPTION_INNER_VALUE;\n      ecModel._componentsMap = createHashMap({\n        series: []\n      });\n      ecModel._componentsCount = createHashMap();\n      var airaOption = baseOption.aria;\n\n      if (isObject(airaOption) && airaOption.enabled == null) {\n        airaOption.enabled = true;\n      }\n\n      mergeTheme(baseOption, ecModel._theme.option);\n      merge(baseOption, globalDefault, false);\n\n      ecModel._mergeOption(baseOption, null);\n    };\n  }();\n\n  return GlobalModel;\n}(Model);\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seriesIndex;\n    var id = payload.seriesId;\n    var name_1 = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name_1 != null && seriesModel.name !== name_1;\n  }\n}\n\nfunction mergeTheme(option, theme) {\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    }\n\n    if (!ComponentModel.hasClass(name)) {\n      if (_typeof(themeItem) === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction queryByIdOrName(attr, idOrName, cmpts) {\n  if (isArray(idOrName)) {\n    var keyMap_1 = createHashMap();\n    each(idOrName, function (idOrNameItem) {\n      if (idOrNameItem != null) {\n        var idName = modelUtil.convertOptionIdName(idOrNameItem, null);\n        idName != null && keyMap_1.set(idOrNameItem, true);\n      }\n    });\n    return filter(cmpts, function (cmpt) {\n      return cmpt && keyMap_1.get(cmpt[attr]);\n    });\n  } else {\n    var idName_1 = modelUtil.convertOptionIdName(idOrName, null);\n    return filter(cmpts, function (cmpt) {\n      return cmpt && idName_1 != null && cmpt[attr] === idName_1;\n    });\n  }\n}\n\nfunction filterBySubType(components, condition) {\n  return condition.hasOwnProperty('subType') ? filter(components, function (cmpt) {\n    return cmpt && cmpt.subType === condition.subType;\n  }) : components;\n}\n\nfunction normalizeSetOptionInput(opts) {\n  var replaceMergeMainTypeMap = createHashMap();\n  opts && each(modelUtil.normalizeToArray(opts.replaceMerge), function (mainType) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(ComponentModel.hasClass(mainType), '\"' + mainType + '\" is not valid component main type in \"replaceMerge\"');\n    }\n\n    replaceMergeMainTypeMap.set(mainType, true);\n  });\n  return {\n    replaceMergeMainTypeMap: replaceMergeMainTypeMap\n  };\n}\n\nmixin(GlobalModel, PaletteMixin);\nexport default GlobalModel;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_echarts@5.0.1@echarts/lib/model/Global.js"],"names":["__extends","each","filter","isArray","isObject","isString","createHashMap","assert","clone","merge","extend","mixin","isFunction","modelUtil","Model","ComponentModel","globalDefault","resetSourceDefaulter","concatInternalOptions","PaletteMixin","reCreateSeriesIndices","assertSeriesInitialized","initBase","OPTION_INNER_KEY","OPTION_INNER_VALUE","GlobalModel","_super","apply","arguments","prototype","init","option","parentModel","ecModel","theme","locale","optionManager","_theme","_locale","_optionManager","setOption","opts","optionPreprocessorFuncs","process","env","NODE_ENV","innerOpt","normalizeSetOptionInput","_resetOption","resetOption","type","opt","optionChanged","baseOption","mountOption","restoreData","_mergeOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","length","mediaOption","mergeOption","newOption","componentsMap","_componentsMap","componentsCount","_componentsCount","newCmptTypes","newCmptTypeMap","replaceMergeMainTypeMap","componentOption","mainType","hasClass","push","set","val","mainTypeInReplaceMerge","get","topologicalTravel","getAllClassMainTypes","visitComponent","newCmptOptionList","normalizeToArray","oldCmptList","mergeMode","mappingResult","mappingToExists","setComponentTypeToKeyInfo","optionsByMainType","cmptsByMainType","cmptsCountByMainType","resultItem","index","componentModel","existing","newCmptOption","optionUpdated","ComponentModelClass","getClass","keyInfo","subType","constructor","name","extraOpt","componentIndex","brandNew","__requireNewView","_seriesIndices","getOption","optInMainType","realLen","metNonInner","i","isComponentIdInternal","getTheme","getLocaleModel","getLocale","localePosition","setUpdatePayload","payload","_payload","getUpdatePayload","getComponent","idx","list","cmpt","queryComponents","condition","id","cmpts","result","queryByIdOrName","filterBySubType","findComponents","query","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","res","eachComponent","cb","context","ctxForAll_1","cbForAll_1","componentType","call","getSeriesByName","nameStr","convertOptionIdName","oneSeries","getSeriesByIndex","seriesIndex","getSeriesByType","getSeries","slice","getSeriesCount","eachSeries","rawSeriesIndex","series","eachRawSeries","eachSeriesByType","eachRawSeriesByType","isSeriesFiltered","seriesModel","_seriesIndicesMap","getCurrentSeriesIndices","filterSeries","newSeriesIndices","seriesRawIdx","componentTypes","components","component","isNotTargetSeries","internalField","seriesIndices","Error","airaOption","aria","enabled","mergeTheme","seriesId","name_1","seriesName","notMergeColorLayer","color","colorLayer","themeItem","attr","idOrName","keyMap_1","idOrNameItem","idName","idName_1","hasOwnProperty","replaceMerge"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\nimport { each, filter, isArray, isObject, isString, createHashMap, assert, clone, merge, extend, mixin, isFunction } from 'zrender/lib/core/util';\nimport * as modelUtil from '../util/model';\nimport Model from './Model';\nimport ComponentModel from './Component';\nimport globalDefault from './globalDefault';\nimport { resetSourceDefaulter } from '../data/helper/sourceHelper';\nimport { concatInternalOptions } from './internalComponentCreator';\nimport { PaletteMixin } from './mixin/palette';\nvar reCreateSeriesIndices;\nvar assertSeriesInitialized;\nvar initBase;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\nvar OPTION_INNER_VALUE = 1;\n\nvar GlobalModel = function (_super) {\n  __extends(GlobalModel, _super);\n\n  function GlobalModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GlobalModel.prototype.init = function (option, parentModel, ecModel, theme, locale, optionManager) {\n    theme = theme || {};\n    this.option = null;\n    this._theme = new Model(theme);\n    this._locale = new Model(locale);\n    this._optionManager = optionManager;\n  };\n\n  GlobalModel.prototype.setOption = function (option, opts, optionPreprocessorFuncs) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(option != null, 'option is null/undefined');\n      assert(option[OPTION_INNER_KEY] !== OPTION_INNER_VALUE, 'please use chart.getOption()');\n    }\n\n    var innerOpt = normalizeSetOptionInput(opts);\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs, innerOpt);\n\n    this._resetOption(null, innerOpt);\n  };\n\n  GlobalModel.prototype.resetOption = function (type, opt) {\n    return this._resetOption(type, normalizeSetOptionInput(opt));\n  };\n\n  GlobalModel.prototype._resetOption = function (type, opt) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase(this, baseOption);\n      } else {\n        this.restoreData();\n\n        this._mergeOption(baseOption, opt);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n\n      if (timelineOption) {\n        optionChanged = true;\n\n        this._mergeOption(timelineOption, opt);\n      }\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          optionChanged = true;\n\n          this._mergeOption(mediaOption, opt);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  };\n\n  GlobalModel.prototype.mergeOption = function (option) {\n    this._mergeOption(option, null);\n  };\n\n  GlobalModel.prototype._mergeOption = function (newOption, opt) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var componentsCount = this._componentsCount;\n    var newCmptTypes = [];\n    var newCmptTypeMap = createHashMap();\n    var replaceMergeMainTypeMap = opt && opt.replaceMergeMainTypeMap;\n    resetSourceDefaulter(this);\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCmptTypes.push(mainType);\n        newCmptTypeMap.set(mainType, true);\n      }\n    });\n\n    if (replaceMergeMainTypeMap) {\n      replaceMergeMainTypeMap.each(function (val, mainTypeInReplaceMerge) {\n        if (ComponentModel.hasClass(mainTypeInReplaceMerge) && !newCmptTypeMap.get(mainTypeInReplaceMerge)) {\n          newCmptTypes.push(mainTypeInReplaceMerge);\n          newCmptTypeMap.set(mainTypeInReplaceMerge, true);\n        }\n      });\n    }\n\n    ComponentModel.topologicalTravel(newCmptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType) {\n      var newCmptOptionList = concatInternalOptions(this, mainType, modelUtil.normalizeToArray(newOption[mainType]));\n      var oldCmptList = componentsMap.get(mainType);\n      var mergeMode = !oldCmptList ? 'replaceAll' : replaceMergeMainTypeMap && replaceMergeMainTypeMap.get(mainType) ? 'replaceMerge' : 'normalMerge';\n      var mappingResult = modelUtil.mappingToExists(oldCmptList, newCmptOptionList, mergeMode);\n      modelUtil.setComponentTypeToKeyInfo(mappingResult, mainType, ComponentModel);\n      option[mainType] = null;\n      componentsMap.set(mainType, null);\n      componentsCount.set(mainType, 0);\n      var optionsByMainType = [];\n      var cmptsByMainType = [];\n      var cmptsCountByMainType = 0;\n      each(mappingResult, function (resultItem, index) {\n        var componentModel = resultItem.existing;\n        var newCmptOption = resultItem.newOption;\n\n        if (!newCmptOption) {\n          if (componentModel) {\n            componentModel.mergeOption({}, this);\n            componentModel.optionUpdated({}, false);\n          }\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel.constructor === ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCmptOption, this);\n            componentModel.optionUpdated(newCmptOption, false);\n          } else {\n            var extraOpt = extend({\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCmptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n\n            if (resultItem.brandNew) {\n              componentModel.__requireNewView = true;\n            }\n\n            componentModel.init(newCmptOption, this, this);\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        if (componentModel) {\n          optionsByMainType.push(componentModel.option);\n          cmptsByMainType.push(componentModel);\n          cmptsCountByMainType++;\n        } else {\n          optionsByMainType.push(void 0);\n          cmptsByMainType.push(void 0);\n        }\n      }, this);\n      option[mainType] = optionsByMainType;\n      componentsMap.set(mainType, cmptsByMainType);\n      componentsCount.set(mainType, cmptsCountByMainType);\n\n      if (mainType === 'series') {\n        reCreateSeriesIndices(this);\n      }\n    }\n\n    if (!this._seriesIndices) {\n      reCreateSeriesIndices(this);\n    }\n  };\n\n  GlobalModel.prototype.getOption = function () {\n    var option = clone(this.option);\n    each(option, function (optInMainType, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(optInMainType);\n        var realLen = opts.length;\n        var metNonInner = false;\n\n        for (var i = realLen - 1; i >= 0; i--) {\n          if (opts[i] && !modelUtil.isComponentIdInternal(opts[i])) {\n            metNonInner = true;\n          } else {\n            opts[i] = null;\n            !metNonInner && realLen--;\n          }\n        }\n\n        opts.length = realLen;\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  };\n\n  GlobalModel.prototype.getTheme = function () {\n    return this._theme;\n  };\n\n  GlobalModel.prototype.getLocaleModel = function () {\n    return this._locale;\n  };\n\n  GlobalModel.prototype.getLocale = function (localePosition) {\n    var locale = this.getLocaleModel();\n    return locale.get(localePosition);\n  };\n\n  GlobalModel.prototype.setUpdatePayload = function (payload) {\n    this._payload = payload;\n  };\n\n  GlobalModel.prototype.getUpdatePayload = function () {\n    return this._payload;\n  };\n\n  GlobalModel.prototype.getComponent = function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      var cmpt = list[idx || 0];\n\n      if (cmpt) {\n        return cmpt;\n      } else if (idx == null) {\n        for (var i = 0; i < list.length; i++) {\n          if (list[i]) {\n            return list[i];\n          }\n        }\n      }\n    }\n  };\n\n  GlobalModel.prototype.queryComponents = function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cmpts = this._componentsMap.get(mainType);\n\n    if (!cmpts || !cmpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      result = [];\n      each(modelUtil.normalizeToArray(index), function (idx) {\n        cmpts[idx] && result.push(cmpts[idx]);\n      });\n    } else if (id != null) {\n      result = queryByIdOrName('id', id, cmpts);\n    } else if (name != null) {\n      result = queryByIdOrName('name', name, cmpts);\n    } else {\n      result = filter(cmpts, function (cmpt) {\n        return !!cmpt;\n      });\n    }\n\n    return filterBySubType(result, condition);\n  };\n\n  GlobalModel.prototype.findComponents = function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : filter(this._componentsMap.get(mainType), function (cmpt) {\n      return !!cmpt;\n    });\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  };\n\n  GlobalModel.prototype.eachComponent = function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (isFunction(mainType)) {\n      var ctxForAll_1 = cb;\n      var cbForAll_1 = mainType;\n      componentsMap.each(function (cmpts, componentType) {\n        for (var i = 0; cmpts && i < cmpts.length; i++) {\n          var cmpt = cmpts[i];\n          cmpt && cbForAll_1.call(ctxForAll_1, componentType, cmpt, cmpt.componentIndex);\n        }\n      });\n    } else {\n      var cmpts = isString(mainType) ? componentsMap.get(mainType) : isObject(mainType) ? this.findComponents(mainType) : null;\n\n      for (var i = 0; cmpts && i < cmpts.length; i++) {\n        var cmpt = cmpts[i];\n        cmpt && cb.call(context, cmpt, cmpt.componentIndex);\n      }\n    }\n  };\n\n  GlobalModel.prototype.getSeriesByName = function (name) {\n    var nameStr = modelUtil.convertOptionIdName(name, null);\n    return filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && nameStr != null && oneSeries.name === nameStr;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesByIndex = function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  };\n\n  GlobalModel.prototype.getSeriesByType = function (subType) {\n    return filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && oneSeries.subType === subType;\n    });\n  };\n\n  GlobalModel.prototype.getSeries = function () {\n    return filter(this._componentsMap.get('series').slice(), function (oneSeries) {\n      return !!oneSeries;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesCount = function () {\n    return this._componentsCount.get('series');\n  };\n\n  GlobalModel.prototype.eachSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeries = function (cb, context) {\n    each(this._componentsMap.get('series'), function (series) {\n      series && cb.call(context, series, series.componentIndex);\n    });\n  };\n\n  GlobalModel.prototype.eachSeriesByType = function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeriesByType = function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  };\n\n  GlobalModel.prototype.isSeriesFiltered = function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  };\n\n  GlobalModel.prototype.getCurrentSeriesIndices = function () {\n    return (this._seriesIndices || []).slice();\n  };\n\n  GlobalModel.prototype.filterSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    var newSeriesIndices = [];\n    each(this._seriesIndices, function (seriesRawIdx) {\n      var series = this._componentsMap.get('series')[seriesRawIdx];\n\n      cb.call(context, series, seriesRawIdx) && newSeriesIndices.push(seriesRawIdx);\n    }, this);\n    this._seriesIndices = newSeriesIndices;\n    this._seriesIndicesMap = createHashMap(newSeriesIndices);\n  };\n\n  GlobalModel.prototype.restoreData = function (payload) {\n    reCreateSeriesIndices(this);\n    var componentsMap = this._componentsMap;\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      if (ComponentModel.hasClass(componentType)) {\n        componentTypes.push(componentType);\n      }\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType) {\n      each(componentsMap.get(componentType), function (component) {\n        if (component && (componentType !== 'series' || !isNotTargetSeries(component, payload))) {\n          component.restoreData();\n        }\n      });\n    });\n  };\n\n  GlobalModel.internalField = function () {\n    reCreateSeriesIndices = function (ecModel) {\n      var seriesIndices = ecModel._seriesIndices = [];\n      each(ecModel._componentsMap.get('series'), function (series) {\n        series && seriesIndices.push(series.componentIndex);\n      });\n      ecModel._seriesIndicesMap = createHashMap(seriesIndices);\n    };\n\n    assertSeriesInitialized = function (ecModel) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!ecModel._seriesIndices) {\n          throw new Error('Option should contains series.');\n        }\n      }\n    };\n\n    initBase = function (ecModel, baseOption) {\n      ecModel.option = {};\n      ecModel.option[OPTION_INNER_KEY] = OPTION_INNER_VALUE;\n      ecModel._componentsMap = createHashMap({\n        series: []\n      });\n      ecModel._componentsCount = createHashMap();\n      var airaOption = baseOption.aria;\n\n      if (isObject(airaOption) && airaOption.enabled == null) {\n        airaOption.enabled = true;\n      }\n\n      mergeTheme(baseOption, ecModel._theme.option);\n      merge(baseOption, globalDefault, false);\n\n      ecModel._mergeOption(baseOption, null);\n    };\n  }();\n\n  return GlobalModel;\n}(Model);\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seriesIndex;\n    var id = payload.seriesId;\n    var name_1 = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name_1 != null && seriesModel.name !== name_1;\n  }\n}\n\nfunction mergeTheme(option, theme) {\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    }\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction queryByIdOrName(attr, idOrName, cmpts) {\n  if (isArray(idOrName)) {\n    var keyMap_1 = createHashMap();\n    each(idOrName, function (idOrNameItem) {\n      if (idOrNameItem != null) {\n        var idName = modelUtil.convertOptionIdName(idOrNameItem, null);\n        idName != null && keyMap_1.set(idOrNameItem, true);\n      }\n    });\n    return filter(cmpts, function (cmpt) {\n      return cmpt && keyMap_1.get(cmpt[attr]);\n    });\n  } else {\n    var idName_1 = modelUtil.convertOptionIdName(idOrName, null);\n    return filter(cmpts, function (cmpt) {\n      return cmpt && idName_1 != null && cmpt[attr] === idName_1;\n    });\n  }\n}\n\nfunction filterBySubType(components, condition) {\n  return condition.hasOwnProperty('subType') ? filter(components, function (cmpt) {\n    return cmpt && cmpt.subType === condition.subType;\n  }) : components;\n}\n\nfunction normalizeSetOptionInput(opts) {\n  var replaceMergeMainTypeMap = createHashMap();\n  opts && each(modelUtil.normalizeToArray(opts.replaceMerge), function (mainType) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(ComponentModel.hasClass(mainType), '\"' + mainType + '\" is not valid component main type in \"replaceMerge\"');\n    }\n\n    replaceMergeMainTypeMap.set(mainType, true);\n  });\n  return {\n    replaceMergeMainTypeMap: replaceMergeMainTypeMap\n  };\n}\n\nmixin(GlobalModel, PaletteMixin);\nexport default GlobalModel;"]},"metadata":{},"sourceType":"module"}