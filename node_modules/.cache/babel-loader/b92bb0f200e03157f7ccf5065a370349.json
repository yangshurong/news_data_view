{"ast":null,"code":"import \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as modelUtil from '../../util/model';\nimport * as graphicUtil from '../../util/graphic';\nimport * as layoutUtil from '../../util/layout';\nimport { parsePercent } from '../../util/number';\nimport ComponentModel from '../../model/Component';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\nimport { isEC4CompatibleStyle, convertFromEC4CompatibleStyle } from '../../util/styleCompat';\nvar TRANSFORM_PROPS = {\n  x: 1,\n  y: 1,\n  scaleX: 1,\n  scaleY: 1,\n  originX: 1,\n  originY: 1,\n  rotation: 1\n};\n;\nvar inner = modelUtil.makeInner();\nvar _nonShapeGraphicElements = {\n  path: null,\n  compoundPath: null,\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n};\n\nvar preprocessor = function preprocessor(option) {\n  var graphicOption = option.graphic;\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n};\n\n;\n\nvar GraphicComponentModel = function (_super) {\n  __extends(GraphicComponentModel, _super);\n\n  function GraphicComponentModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentModel.type;\n    return _this;\n  }\n\n  GraphicComponentModel.prototype.mergeOption = function (option, ecModel) {\n    var elements = this.option.elements;\n    this.option.elements = null;\n\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this.option.elements = elements;\n  };\n\n  GraphicComponentModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList, null);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList, 'normalMerge');\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.newOption;\n\n      if (process.env.NODE_ENV !== 'production') {\n        zrUtil.assert(zrUtil.isObject(newElOption) || resultItem.existing, 'Empty graphic option definition');\n      }\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this);\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        delete existList[i].$action;\n      }\n    }\n  };\n\n  GraphicComponentModel.prototype._flatten = function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      }\n\n      delete option.children;\n    }, this);\n  };\n\n  GraphicComponentModel.prototype.useElOptionsToUpdate = function () {\n    var els = this._elOptionsToUpdate;\n    this._elOptionsToUpdate = null;\n    return els;\n  };\n\n  GraphicComponentModel.type = 'graphic';\n  GraphicComponentModel.defaultOption = {\n    elements: []\n  };\n  return GraphicComponentModel;\n}(ComponentModel);\n\nvar GraphicComponentView = function (_super) {\n  __extends(GraphicComponentView, _super);\n\n  function GraphicComponentView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentView.type;\n    return _this;\n  }\n\n  GraphicComponentView.prototype.init = function () {\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.render = function (graphicModel, ecModel, api) {\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  };\n\n  GraphicComponentView.prototype._updateElements = function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group;\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var elExisting = id != null ? elMap.get(id) : null;\n      var parentId = modelUtil.convertOptionIdName(elOption.parentId, null);\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elType = elOption.type;\n      var elOptionStyle = elOption.style;\n\n      if (elType === 'text' && elOptionStyle) {\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = elOptionStyle.verticalAlign = elOptionStyle.align = null;\n        }\n      }\n\n      var textContentOption = elOption.textContent;\n      var textConfig = elOption.textConfig;\n\n      if (elOptionStyle && isEC4CompatibleStyle(elOptionStyle, elType, !!textConfig, !!textContentOption)) {\n        var convertResult = convertFromEC4CompatibleStyle(elOptionStyle, elType, true);\n\n        if (!textConfig && convertResult.textConfig) {\n          textConfig = elOption.textConfig = convertResult.textConfig;\n        }\n\n        if (!textContentOption && convertResult.textContent) {\n          textContentOption = convertResult.textContent;\n        }\n      }\n\n      var elOptionCleaned = getCleanedElOption(elOption);\n\n      if (process.env.NODE_ENV !== 'production') {\n        elExisting && zrUtil.assert(targetElParent === elExisting.parent, 'Changing parent is not supported.');\n      }\n\n      var $action = elOption.$action || 'merge';\n\n      if ($action === 'merge') {\n        elExisting ? elExisting.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(elExisting, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(elExisting, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el && textContentOption) {\n        if ($action === 'merge') {\n          var textContentExisting = el.getTextContent();\n          textContentExisting ? textContentExisting.attr(textContentOption) : el.setTextContent(new graphicUtil.Text(textContentOption));\n        } else if ($action === 'replace') {\n          el.setTextContent(new graphicUtil.Text(textContentOption));\n        }\n      }\n\n      if (el) {\n        var elInner = inner(el);\n        elInner.__ecGraphicWidthOption = elOption.width;\n        elInner.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n      }\n    });\n  };\n\n  GraphicComponentView.prototype._relocate = function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight();\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el || !el.isGroup) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup;\n      var elInner = inner(el);\n      var parentElInner = inner(parentEl);\n      elInner.__ecGraphicWidth = parsePercent(elInner.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentElInner.__ecGraphicWidth) || 0;\n      elInner.__ecGraphicHeight = parsePercent(elInner.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentElInner.__ecGraphicHeight) || 0;\n    }\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var parentElInner = inner(parentEl);\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentElInner.__ecGraphicWidth,\n        height: parentElInner.__ecGraphicHeight\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  };\n\n  GraphicComponentView.prototype._clear = function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.dispose = function () {\n    this._clear();\n  };\n\n  GraphicComponentView.type = 'graphic';\n  return GraphicComponentView;\n}(ComponentView);\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(graphicType, 'graphic type MUST be set');\n  }\n\n  var Clz = zrUtil.hasOwn(_nonShapeGraphicElements, graphicType) ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(Clz, 'graphic type can not be found');\n  }\n\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  inner(el).__ecGraphicId = id;\n}\n\nfunction removeEl(elExisting, elMap) {\n  var existElParent = elExisting && elExisting.parent;\n\n  if (existElParent) {\n    elExisting.type === 'group' && elExisting.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(inner(elExisting).__ecGraphicId);\n    existElParent.remove(elExisting);\n  }\n}\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding', 'textContent'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.existing;\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type);\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  }\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      if (process.env.NODE_ENV !== 'production') {\n        var newType = newElOption.type;\n        zrUtil.assert(!newType || existElOption.type === newType, 'Please set $action: \"replace\" to change `type`');\n      }\n\n      zrUtil.merge(existElOption, newElOptCopy, true);\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      });\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [isSetLoc(newElOption, ['left', 'right']), isSetLoc(newElOption, ['top', 'bottom'])];\n\n  if (existItem.type === 'group') {\n    var existingGroupOpt = existItem;\n    var newGroupOpt = newElOption;\n    existingGroupOpt.width == null && (existingGroupOpt.width = newGroupOpt.width = 0);\n    existingGroupOpt.height == null && (existingGroupOpt.height = newGroupOpt.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = getECData(el).eventData;\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = getECData(el).eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  }\n\n  if (eventData) {\n    eventData.info = elOption.info;\n  }\n}\n\nexport function install(registers) {\n  registers.registerComponentModel(GraphicComponentModel);\n  registers.registerComponentView(GraphicComponentView);\n  registers.registerPreprocessor(preprocessor);\n}","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_echarts@5.0.1@echarts/lib/component/graphic/install.js"],"names":["__extends","zrUtil","modelUtil","graphicUtil","layoutUtil","parsePercent","ComponentModel","ComponentView","getECData","isEC4CompatibleStyle","convertFromEC4CompatibleStyle","TRANSFORM_PROPS","x","y","scaleX","scaleY","originX","originY","rotation","inner","makeInner","_nonShapeGraphicElements","path","compoundPath","group","Group","image","Image","text","Text","preprocessor","option","graphicOption","graphic","isArray","elements","GraphicComponentModel","_super","_this","apply","arguments","type","prototype","mergeOption","ecModel","call","optionUpdated","newOption","isInit","thisOption","newList","existList","flattenedList","_flatten","mappingResult","mappingToExists","elOptionsToUpdate","_elOptionsToUpdate","each","resultItem","index","newElOption","process","env","NODE_ENV","assert","isObject","existing","push","setKeyInfoToNewElOption","mergeNewElOptionToExist","setLayoutInfoToExist","i","length","splice","$action","optionList","result","parentOption","children","useElOptionsToUpdate","els","defaultOption","GraphicComponentView","init","_elMap","createHashMap","render","graphicModel","api","_lastGraphicModel","_clear","_updateElements","_relocate","elMap","rootGroup","elOption","id","convertOptionIdName","elExisting","get","parentId","targetElParent","elType","elOptionStyle","style","hv","textVerticalAlign","textBaseline","verticalAlign","align","textContentOption","textContent","textConfig","convertResult","elOptionCleaned","getCleanedElOption","parent","attr","createEl","removeEl","el","textContentExisting","getTextContent","setTextContent","elInner","__ecGraphicWidthOption","width","__ecGraphicHeightOption","height","setEventData","elOptions","apiWidth","getWidth","apiHeight","getHeight","isGroup","parentEl","isParentRoot","parentElInner","__ecGraphicWidth","__ecGraphicHeight","containerInfo","positionElement","boundingMode","bounding","dispose","graphicType","Clz","hasOwn","getShapeClass","add","set","__ecGraphicId","existElParent","traverse","removeKey","remove","extend","concat","LOCATION_PARAMS","name","isSetLoc","obj","props","isSet","prop","existElOption","keyInfo","newElParentOption","newElOptCopy","newType","merge","mergeLayoutParam","ignoreSize","copyLayoutParams","existItem","existingGroupOpt","newGroupOpt","eventData","silent","ignore","componentType","componentIndex","info","install","registers","registerComponentModel","registerComponentView","registerPreprocessor"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as modelUtil from '../../util/model';\nimport * as graphicUtil from '../../util/graphic';\nimport * as layoutUtil from '../../util/layout';\nimport { parsePercent } from '../../util/number';\nimport ComponentModel from '../../model/Component';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\nimport { isEC4CompatibleStyle, convertFromEC4CompatibleStyle } from '../../util/styleCompat';\nvar TRANSFORM_PROPS = {\n  x: 1,\n  y: 1,\n  scaleX: 1,\n  scaleY: 1,\n  originX: 1,\n  originY: 1,\n  rotation: 1\n};\n;\nvar inner = modelUtil.makeInner();\nvar _nonShapeGraphicElements = {\n  path: null,\n  compoundPath: null,\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n};\n\nvar preprocessor = function (option) {\n  var graphicOption = option.graphic;\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n};\n\n;\n\nvar GraphicComponentModel = function (_super) {\n  __extends(GraphicComponentModel, _super);\n\n  function GraphicComponentModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentModel.type;\n    return _this;\n  }\n\n  GraphicComponentModel.prototype.mergeOption = function (option, ecModel) {\n    var elements = this.option.elements;\n    this.option.elements = null;\n\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this.option.elements = elements;\n  };\n\n  GraphicComponentModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList, null);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList, 'normalMerge');\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.newOption;\n\n      if (process.env.NODE_ENV !== 'production') {\n        zrUtil.assert(zrUtil.isObject(newElOption) || resultItem.existing, 'Empty graphic option definition');\n      }\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this);\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        delete existList[i].$action;\n      }\n    }\n  };\n\n  GraphicComponentModel.prototype._flatten = function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      }\n\n      delete option.children;\n    }, this);\n  };\n\n  GraphicComponentModel.prototype.useElOptionsToUpdate = function () {\n    var els = this._elOptionsToUpdate;\n    this._elOptionsToUpdate = null;\n    return els;\n  };\n\n  GraphicComponentModel.type = 'graphic';\n  GraphicComponentModel.defaultOption = {\n    elements: []\n  };\n  return GraphicComponentModel;\n}(ComponentModel);\n\nvar GraphicComponentView = function (_super) {\n  __extends(GraphicComponentView, _super);\n\n  function GraphicComponentView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentView.type;\n    return _this;\n  }\n\n  GraphicComponentView.prototype.init = function () {\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.render = function (graphicModel, ecModel, api) {\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  };\n\n  GraphicComponentView.prototype._updateElements = function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group;\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var elExisting = id != null ? elMap.get(id) : null;\n      var parentId = modelUtil.convertOptionIdName(elOption.parentId, null);\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elType = elOption.type;\n      var elOptionStyle = elOption.style;\n\n      if (elType === 'text' && elOptionStyle) {\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = elOptionStyle.verticalAlign = elOptionStyle.align = null;\n        }\n      }\n\n      var textContentOption = elOption.textContent;\n      var textConfig = elOption.textConfig;\n\n      if (elOptionStyle && isEC4CompatibleStyle(elOptionStyle, elType, !!textConfig, !!textContentOption)) {\n        var convertResult = convertFromEC4CompatibleStyle(elOptionStyle, elType, true);\n\n        if (!textConfig && convertResult.textConfig) {\n          textConfig = elOption.textConfig = convertResult.textConfig;\n        }\n\n        if (!textContentOption && convertResult.textContent) {\n          textContentOption = convertResult.textContent;\n        }\n      }\n\n      var elOptionCleaned = getCleanedElOption(elOption);\n\n      if (process.env.NODE_ENV !== 'production') {\n        elExisting && zrUtil.assert(targetElParent === elExisting.parent, 'Changing parent is not supported.');\n      }\n\n      var $action = elOption.$action || 'merge';\n\n      if ($action === 'merge') {\n        elExisting ? elExisting.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(elExisting, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(elExisting, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el && textContentOption) {\n        if ($action === 'merge') {\n          var textContentExisting = el.getTextContent();\n          textContentExisting ? textContentExisting.attr(textContentOption) : el.setTextContent(new graphicUtil.Text(textContentOption));\n        } else if ($action === 'replace') {\n          el.setTextContent(new graphicUtil.Text(textContentOption));\n        }\n      }\n\n      if (el) {\n        var elInner = inner(el);\n        elInner.__ecGraphicWidthOption = elOption.width;\n        elInner.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n      }\n    });\n  };\n\n  GraphicComponentView.prototype._relocate = function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight();\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el || !el.isGroup) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup;\n      var elInner = inner(el);\n      var parentElInner = inner(parentEl);\n      elInner.__ecGraphicWidth = parsePercent(elInner.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentElInner.__ecGraphicWidth) || 0;\n      elInner.__ecGraphicHeight = parsePercent(elInner.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentElInner.__ecGraphicHeight) || 0;\n    }\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var parentElInner = inner(parentEl);\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentElInner.__ecGraphicWidth,\n        height: parentElInner.__ecGraphicHeight\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  };\n\n  GraphicComponentView.prototype._clear = function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.dispose = function () {\n    this._clear();\n  };\n\n  GraphicComponentView.type = 'graphic';\n  return GraphicComponentView;\n}(ComponentView);\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(graphicType, 'graphic type MUST be set');\n  }\n\n  var Clz = zrUtil.hasOwn(_nonShapeGraphicElements, graphicType) ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(Clz, 'graphic type can not be found');\n  }\n\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  inner(el).__ecGraphicId = id;\n}\n\nfunction removeEl(elExisting, elMap) {\n  var existElParent = elExisting && elExisting.parent;\n\n  if (existElParent) {\n    elExisting.type === 'group' && elExisting.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(inner(elExisting).__ecGraphicId);\n    existElParent.remove(elExisting);\n  }\n}\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding', 'textContent'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.existing;\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type);\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  }\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      if (process.env.NODE_ENV !== 'production') {\n        var newType = newElOption.type;\n        zrUtil.assert(!newType || existElOption.type === newType, 'Please set $action: \"replace\" to change `type`');\n      }\n\n      zrUtil.merge(existElOption, newElOptCopy, true);\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      });\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [isSetLoc(newElOption, ['left', 'right']), isSetLoc(newElOption, ['top', 'bottom'])];\n\n  if (existItem.type === 'group') {\n    var existingGroupOpt = existItem;\n    var newGroupOpt = newElOption;\n    existingGroupOpt.width == null && (existingGroupOpt.width = newGroupOpt.width = 0);\n    existingGroupOpt.height == null && (existingGroupOpt.height = newGroupOpt.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = getECData(el).eventData;\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = getECData(el).eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  }\n\n  if (eventData) {\n    eventData.info = elOption.info;\n  }\n}\n\nexport function install(registers) {\n  registers.registerComponentModel(GraphicComponentModel);\n  registers.registerComponentView(GraphicComponentView);\n  registers.registerPreprocessor(preprocessor);\n}"]},"metadata":{},"sourceType":"module"}