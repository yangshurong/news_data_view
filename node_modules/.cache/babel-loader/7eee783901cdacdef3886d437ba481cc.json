{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.float32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint32-array.js\";\nimport \"core-js/modules/es.typed-array.uint16-array.js\";\nexport default {\n  convertToDynamicArray: function convertToDynamicArray(clear) {\n    if (clear) {\n      this.resetOffset();\n    }\n\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (clear || !attributes[name].value) {\n        attributes[name].value = [];\n      } else {\n        attributes[name].value = Array.prototype.slice.call(attributes[name].value);\n      }\n    }\n\n    if (clear || !this.indices) {\n      this.indices = [];\n    } else {\n      this.indices = Array.prototype.slice.call(this.indices);\n    }\n  },\n  convertToTypedArray: function convertToTypedArray() {\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (attributes[name].value && attributes[name].value.length > 0) {\n        attributes[name].value = new Float32Array(attributes[name].value);\n      } else {\n        attributes[name].value = null;\n      }\n    }\n\n    if (this.indices && this.indices.length > 0) {\n      this.indices = this.vertexCount > 0xffff ? new Uint32Array(this.indices) : new Uint16Array(this.indices);\n    }\n\n    this.dirty();\n  }\n};","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/util/geometry/dynamicConvertMixin.js"],"names":["convertToDynamicArray","clear","resetOffset","attributes","name","value","Array","prototype","slice","call","indices","convertToTypedArray","length","Float32Array","vertexCount","Uint32Array","Uint16Array","dirty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,eAAe;AACbA,EAAAA,qBAAqB,EAAE,+BAAUC,KAAV,EAAiB;AACtC,QAAIA,KAAJ,EAAW;AACT,WAAKC,WAAL;AACD;;AAED,QAAIC,UAAU,GAAG,KAAKA,UAAtB;;AAEA,SAAK,IAAIC,IAAT,IAAiBD,UAAjB,EAA6B;AAC3B,UAAIF,KAAK,IAAI,CAACE,UAAU,CAACC,IAAD,CAAV,CAAiBC,KAA/B,EAAsC;AACpCF,QAAAA,UAAU,CAACC,IAAD,CAAV,CAAiBC,KAAjB,GAAyB,EAAzB;AACD,OAFD,MAEO;AACLF,QAAAA,UAAU,CAACC,IAAD,CAAV,CAAiBC,KAAjB,GAAyBC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BN,UAAU,CAACC,IAAD,CAAV,CAAiBC,KAA5C,CAAzB;AACD;AACF;;AAED,QAAIJ,KAAK,IAAI,CAAC,KAAKS,OAAnB,EAA4B;AAC1B,WAAKA,OAAL,GAAe,EAAf;AACD,KAFD,MAEO;AACL,WAAKA,OAAL,GAAeJ,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKC,OAAhC,CAAf;AACD;AACF,GArBY;AAsBbC,EAAAA,mBAAmB,EAAE,+BAAY;AAC/B,QAAIR,UAAU,GAAG,KAAKA,UAAtB;;AAEA,SAAK,IAAIC,IAAT,IAAiBD,UAAjB,EAA6B;AAC3B,UAAIA,UAAU,CAACC,IAAD,CAAV,CAAiBC,KAAjB,IAA0BF,UAAU,CAACC,IAAD,CAAV,CAAiBC,KAAjB,CAAuBO,MAAvB,GAAgC,CAA9D,EAAiE;AAC/DT,QAAAA,UAAU,CAACC,IAAD,CAAV,CAAiBC,KAAjB,GAAyB,IAAIQ,YAAJ,CAAiBV,UAAU,CAACC,IAAD,CAAV,CAAiBC,KAAlC,CAAzB;AACD,OAFD,MAEO;AACLF,QAAAA,UAAU,CAACC,IAAD,CAAV,CAAiBC,KAAjB,GAAyB,IAAzB;AACD;AACF;;AAED,QAAI,KAAKK,OAAL,IAAgB,KAAKA,OAAL,CAAaE,MAAb,GAAsB,CAA1C,EAA6C;AAC3C,WAAKF,OAAL,GAAe,KAAKI,WAAL,GAAmB,MAAnB,GAA4B,IAAIC,WAAJ,CAAgB,KAAKL,OAArB,CAA5B,GAA4D,IAAIM,WAAJ,CAAgB,KAAKN,OAArB,CAA3E;AACD;;AAED,SAAKO,KAAL;AACD;AAtCY,CAAf","sourcesContent":["export default {\n  convertToDynamicArray: function (clear) {\n    if (clear) {\n      this.resetOffset();\n    }\n\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (clear || !attributes[name].value) {\n        attributes[name].value = [];\n      } else {\n        attributes[name].value = Array.prototype.slice.call(attributes[name].value);\n      }\n    }\n\n    if (clear || !this.indices) {\n      this.indices = [];\n    } else {\n      this.indices = Array.prototype.slice.call(this.indices);\n    }\n  },\n  convertToTypedArray: function () {\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (attributes[name].value && attributes[name].value.length > 0) {\n        attributes[name].value = new Float32Array(attributes[name].value);\n      } else {\n        attributes[name].value = null;\n      }\n    }\n\n    if (this.indices && this.indices.length > 0) {\n      this.indices = this.vertexCount > 0xffff ? new Uint32Array(this.indices) : new Uint16Array(this.indices);\n    }\n\n    this.dirty();\n  }\n};"]},"metadata":{},"sourceType":"module"}