{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nexports.__esModule = true;\n\nvar _chalk = require('chalk');\n\nvar _chalk2 = _interopRequireDefault(_chalk);\n\nvar _tokenize = require('./tokenize');\n\nvar _tokenize2 = _interopRequireDefault(_tokenize);\n\nvar _input = require('./input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar colors = new _chalk2.default.constructor({\n  enabled: true\n});\nvar HIGHLIGHT_THEME = {\n  'brackets': colors.cyan,\n  'at-word': colors.cyan,\n  'call': colors.cyan,\n  'comment': colors.gray,\n  'string': colors.green,\n  'class': colors.yellow,\n  'hash': colors.magenta,\n  '(': colors.cyan,\n  ')': colors.cyan,\n  '{': colors.yellow,\n  '}': colors.yellow,\n  '[': colors.yellow,\n  ']': colors.yellow,\n  ':': colors.yellow,\n  ';': colors.yellow\n};\n\nfunction getTokenType(_ref, index, tokens) {\n  var type = _ref[0],\n      value = _ref[1];\n\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class';\n    }\n\n    if (value[0] === '#') {\n      return 'hash';\n    }\n  }\n\n  var nextToken = tokens[index + 1];\n\n  if (nextToken && (nextToken[0] === 'brackets' || nextToken[0] === '(')) {\n    return 'call';\n  }\n\n  return type;\n}\n\nfunction terminalHighlight(css) {\n  var tokens = (0, _tokenize2.default)(new _input2.default(css), {\n    ignoreErrors: true\n  });\n  return tokens.map(function (token, index) {\n    var color = HIGHLIGHT_THEME[getTokenType(token, index, tokens)];\n\n    if (color) {\n      return token[1].split(/\\r?\\n/).map(function (i) {\n        return color(i);\n      }).join('\\n');\n    } else {\n      return token[1];\n    }\n  }).join('');\n}\n\nexports.default = terminalHighlight;\nmodule.exports = exports['default'];","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;;;;;AAEA,IAAIA,SAAS,IAAIC,gBAAMC,WAAV,CAAsB;AAAEC,WAAS;AAAX,CAAtB,CAAb;AAEA,IAAMC,kBAAkB;AACpB,cAAYJ,OAAOK,IADC;AAEpB,aAAYL,OAAOK,IAFC;AAGpB,UAAYL,OAAOK,IAHC;AAIpB,aAAYL,OAAOM,IAJC;AAKpB,YAAYN,OAAOO,KALC;AAMpB,WAAYP,OAAOQ,MANC;AAOpB,UAAYR,OAAOS,OAPC;AAQpB,OAAYT,OAAOK,IARC;AASpB,OAAYL,OAAOK,IATC;AAUpB,OAAYL,OAAOQ,MAVC;AAWpB,OAAYR,OAAOQ,MAXC;AAYpB,OAAYR,OAAOQ,MAZC;AAapB,OAAYR,OAAOQ,MAbC;AAcpB,OAAYR,OAAOQ,MAdC;AAepB,OAAYR,OAAOQ;AAfC,CAAxB;;AAkBA,SAASE,YAAT,OAAqCC,KAArC,EAA4CC,MAA5C,EAAoD;AAAA,MAA7BC,IAA6B;AAAA,MAAvBC,KAAuB;;AAChD,MAAID,SAAS,MAAb,EAAqB;AACjB,QAAIC,MAAM,CAANA,MAAa,GAAjB,EAAsB;AAClB,aAAO,OAAP;AACH;;AACD,QAAIA,MAAM,CAANA,MAAa,GAAjB,EAAsB;AAClB,aAAO,MAAP;AACH;AACJ;;AAED,MAAIC,YAAYH,OAAOD,QAAQ,CAAfC,CAAhB;;AACA,MAAIG,cAAcA,UAAU,CAAVA,MAAiB,UAAjBA,IAA+BA,UAAU,CAAVA,MAAiB,GAA9DA,CAAJ,EAAwE;AACpE,WAAO,MAAP;AACH;;AAED,SAAOF,IAAP;AACH;;AAED,SAASG,iBAAT,CAA2BC,GAA3B,EAAgC;AAC5B,MAAIL,SAAS,wBAAS,oBAAUK,GAAV,CAAT,EAAyB;AAAEC,kBAAc;AAAhB,GAAzB,CAAb;AACA,SAAON,OAAOO,GAAPP,CAAW,UAACQ,KAAD,EAAQT,KAAR,EAAkB;AAChC,QAAIU,QAAQjB,gBAAgBM,aAAaU,KAAbV,EAAoBC,KAApBD,EAA2BE,MAA3BF,CAAhBN,CAAZ;;AACA,QAAKiB,KAAL,EAAa;AACT,aAAOD,MAAM,CAANA,EAASE,KAATF,CAAe,OAAfA,EACJD,GADIC,CACC;AAAA,eAAKC,MAAME,CAANF,CAAL;AADD,SAEJG,IAFIJ,CAEC,IAFDA,CAAP;AADJ,WAIO;AACH,aAAOA,MAAM,CAANA,CAAP;AACH;AARE,KASJI,IATIZ,CASC,EATDA,CAAP;AAUH;;kBAEcI","names":["colors","_chalk2","constructor","enabled","HIGHLIGHT_THEME","cyan","gray","green","yellow","magenta","getTokenType","index","tokens","type","value","nextToken","terminalHighlight","css","ignoreErrors","map","token","color","split","i","join"],"sources":["terminal-highlight.es6"],"sourcesContent":["import chalk from 'chalk';\n\nimport tokenize from './tokenize';\nimport Input    from './input';\n\nlet colors = new chalk.constructor({ enabled: true });\n\nconst HIGHLIGHT_THEME = {\n    'brackets': colors.cyan,\n    'at-word':  colors.cyan,\n    'call':     colors.cyan,\n    'comment':  colors.gray,\n    'string':   colors.green,\n    'class':    colors.yellow,\n    'hash':     colors.magenta,\n    '(':        colors.cyan,\n    ')':        colors.cyan,\n    '{':        colors.yellow,\n    '}':        colors.yellow,\n    '[':        colors.yellow,\n    ']':        colors.yellow,\n    ':':        colors.yellow,\n    ';':        colors.yellow\n};\n\nfunction getTokenType([type, value], index, tokens) {\n    if (type === 'word') {\n        if (value[0] === '.') {\n            return 'class';\n        }\n        if (value[0] === '#') {\n            return 'hash';\n        }\n    }\n\n    let nextToken = tokens[index + 1];\n    if (nextToken && (nextToken[0] === 'brackets' || nextToken[0] === '(')) {\n        return 'call';\n    }\n\n    return type;\n}\n\nfunction terminalHighlight(css) {\n    let tokens = tokenize(new Input(css), { ignoreErrors: true });\n    return tokens.map((token, index) => {\n        let color = HIGHLIGHT_THEME[getTokenType(token, index, tokens)];\n        if ( color ) {\n            return token[1].split(/\\r?\\n/)\n              .map( i => color(i) )\n              .join('\\n');\n        } else {\n            return token[1];\n        }\n    }).join('');\n}\n\nexport default terminalHighlight;\n"]},"metadata":{},"sourceType":"script"}