{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nvar defaultOption = {\n  show: true,\n  grid3DIndex: 0,\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字\n  name: '',\n  // 坐标轴名字位置\n  nameLocation: 'middle',\n  nameTextStyle: {\n    fontSize: 16\n  },\n  // 文字与轴线距离\n  nameGap: 20,\n  axisPointer: {},\n  axisLine: {},\n  // 坐标轴小标记\n  axisTick: {},\n  axisLabel: {},\n  // 分隔区域\n  splitArea: {}\n};\nvar categoryAxis = echarts.util.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    // Default with axisTick\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  },\n  axisPointer: {\n    label: {\n      show: false\n    }\n  }\n}, defaultOption);\nvar valueAxis = echarts.util.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5,\n  // Minimum interval\n  // minInterval: null\n  axisPointer: {\n    label: {}\n  }\n}, defaultOption); // FIXME\n\nvar timeAxis = echarts.util.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, valueAxis);\nvar logAxis = echarts.util.defaults({\n  logBase: 10\n}, valueAxis);\nlogAxis.scale = true;\nexport default {\n  categoryAxis3D: categoryAxis,\n  valueAxis3D: valueAxis,\n  timeAxis3D: timeAxis,\n  logAxis3D: logAxis\n};","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_echarts-gl@2.0.9@echarts-gl/lib/component/grid3D/axis3DDefault.js"],"names":["echarts","defaultOption","show","grid3DIndex","inverse","name","nameLocation","nameTextStyle","fontSize","nameGap","axisPointer","axisLine","axisTick","axisLabel","splitArea","categoryAxis","util","merge","boundaryGap","alignWithLabel","interval","label","valueAxis","splitNumber","timeAxis","defaults","scale","min","max","logAxis","logBase","categoryAxis3D","valueAxis3D","timeAxis3D","logAxis3D"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;AACA,IAAIC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE,IADY;AAElBC,EAAAA,WAAW,EAAE,CAFK;AAGlB;AACAC,EAAAA,OAAO,EAAE,KAJS;AAKlB;AACAC,EAAAA,IAAI,EAAE,EANY;AAOlB;AACAC,EAAAA,YAAY,EAAE,QARI;AASlBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,QAAQ,EAAE;AADG,GATG;AAYlB;AACAC,EAAAA,OAAO,EAAE,EAbS;AAclBC,EAAAA,WAAW,EAAE,EAdK;AAelBC,EAAAA,QAAQ,EAAE,EAfQ;AAgBlB;AACAC,EAAAA,QAAQ,EAAE,EAjBQ;AAkBlBC,EAAAA,SAAS,EAAE,EAlBO;AAmBlB;AACAC,EAAAA,SAAS,EAAE;AApBO,CAApB;AAsBA,IAAIC,YAAY,GAAGf,OAAO,CAACgB,IAAR,CAAaC,KAAb,CAAmB;AACpC;AACAC,EAAAA,WAAW,EAAE,IAFuB;AAGpC;AACA;AACA;AACA;AACAN,EAAAA,QAAQ,EAAE;AACR;AACA;AACAO,IAAAA,cAAc,EAAE,KAHR;AAIRC,IAAAA,QAAQ,EAAE;AAJF,GAP0B;AAapC;AACAP,EAAAA,SAAS,EAAE;AACTO,IAAAA,QAAQ,EAAE;AADD,GAdyB;AAiBpCV,EAAAA,WAAW,EAAE;AACXW,IAAAA,KAAK,EAAE;AACLnB,MAAAA,IAAI,EAAE;AADD;AADI;AAjBuB,CAAnB,EAsBhBD,aAtBgB,CAAnB;AAuBA,IAAIqB,SAAS,GAAGtB,OAAO,CAACgB,IAAR,CAAaC,KAAb,CAAmB;AACjC;AACAC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFoB;AAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACAK,EAAAA,WAAW,EAAE,CAVoB;AAWjC;AACA;AACAb,EAAAA,WAAW,EAAE;AACXW,IAAAA,KAAK,EAAE;AADI;AAboB,CAAnB,EAgBbpB,aAhBa,CAAhB,C,CAgBmB;;AAEnB,IAAIuB,QAAQ,GAAGxB,OAAO,CAACgB,IAAR,CAAaS,QAAb,CAAsB;AACnCC,EAAAA,KAAK,EAAE,IAD4B;AAEnCC,EAAAA,GAAG,EAAE,SAF8B;AAGnCC,EAAAA,GAAG,EAAE;AAH8B,CAAtB,EAIZN,SAJY,CAAf;AAKA,IAAIO,OAAO,GAAG7B,OAAO,CAACgB,IAAR,CAAaS,QAAb,CAAsB;AAClCK,EAAAA,OAAO,EAAE;AADyB,CAAtB,EAEXR,SAFW,CAAd;AAGAO,OAAO,CAACH,KAAR,GAAgB,IAAhB;AACA,eAAe;AACbK,EAAAA,cAAc,EAAEhB,YADH;AAEbiB,EAAAA,WAAW,EAAEV,SAFA;AAGbW,EAAAA,UAAU,EAAET,QAHC;AAIbU,EAAAA,SAAS,EAAEL;AAJE,CAAf","sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nvar defaultOption = {\n  show: true,\n  grid3DIndex: 0,\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字\n  name: '',\n  // 坐标轴名字位置\n  nameLocation: 'middle',\n  nameTextStyle: {\n    fontSize: 16\n  },\n  // 文字与轴线距离\n  nameGap: 20,\n  axisPointer: {},\n  axisLine: {},\n  // 坐标轴小标记\n  axisTick: {},\n  axisLabel: {},\n  // 分隔区域\n  splitArea: {}\n};\nvar categoryAxis = echarts.util.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    // Default with axisTick\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  },\n  axisPointer: {\n    label: {\n      show: false\n    }\n  }\n}, defaultOption);\nvar valueAxis = echarts.util.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5,\n  // Minimum interval\n  // minInterval: null\n  axisPointer: {\n    label: {}\n  }\n}, defaultOption); // FIXME\n\nvar timeAxis = echarts.util.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, valueAxis);\nvar logAxis = echarts.util.defaults({\n  logBase: 10\n}, valueAxis);\nlogAxis.scale = true;\nexport default {\n  categoryAxis3D: categoryAxis,\n  valueAxis3D: valueAxis,\n  timeAxis3D: timeAxis,\n  logAxis3D: logAxis\n};"]},"metadata":{},"sourceType":"module"}