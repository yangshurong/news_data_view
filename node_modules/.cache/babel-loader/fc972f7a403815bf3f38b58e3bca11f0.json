{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport test_mind_data from \"../assets/Shi/test_mind_data.json\";\nimport word_cloud_data from \"../assets/Sheng/item_data/word_cloud_3ddata.json\";\nexport default {\n  data() {\n    return {\n      cur_info: {\n        year: \"2017\",\n        title: \"政治\",\n        region: \"青岛\",\n        region_data: \"\"\n      },\n      time_select_value: 0,\n      rank_speed_list: [{\n        rank: \"排名\",\n        title: \"主题\",\n        speed: \"响应时间\"\n      }, {\n        rank: 1,\n        title: \"政治\",\n        speed: 0.2\n      }, {\n        rank: \"2\",\n        title: \"民生\",\n        speed: 1.9\n      }]\n    };\n  },\n\n  mounted() {\n    this.set_region_map();\n    this.set_policy_detail();\n    this.set_wordcloud();\n    this.set_num_tag();\n  },\n\n  methods: {\n    get_time_change(new_time) {\n      //时间变化后\n      console.log(new_time.toString()); //this.cur_info.year = new_time.toString();\n      //this.set_num_tag();\n      //this.set_speed_tag();\n    },\n\n    async set_region_map() {\n      await this.$axios({\n        url: \"https://geo.datav.aliyun.com/areas_v3/bound/370200_full.json\",\n        method: \"get\"\n      }).then(res => {\n        this.cur_info.region_data = res.data;\n      });\n      this.$echarts.registerMap(this.cur_info.region, this.cur_info.region_data);\n      let _data = this.cur_info.region_data.features,\n          scar_data = [];\n\n      for (let i in _data) {\n        let x = _data[i].properties.center[0],\n            y = _data[i].properties.center[1],\n            z = _data[i].properties.name;\n        scar_data.push([x, y, z]);\n      }\n\n      this.speed_region_Chart = this.$echarts.init(this.$refs.region);\n      let layoutSize = \"600\",\n          aspectScale = 687 / 415;\n      let speed_region_option = {\n        geo: {\n          map: this.cur_info.region,\n          z: 2,\n          aspectScale: aspectScale,\n          layoutCenter: [\"50%\", \"50%\"],\n          //地图位置\n          layoutSize: layoutSize,\n          zoom: 1,\n          //当前视角的缩放比例\n          scaleLimit: {\n            //滚轮缩放的极限控制\n            min: 1,\n            max: 2\n          },\n          label: {\n            normal: {\n              show: false,\n              textStyle: {\n                color: \"#FFFFFF\",\n                fontSize: 18\n              }\n            },\n            emphasis: {\n              show: false,\n              textStyle: {\n                color: \"#FFFFFF\",\n                fontSize: 18\n              }\n            }\n          },\n          itemStyle: {\n            normal: {\n              shadowColor: \"rgba(21,55,112,255)\",\n              shadowOffsetX: 10,\n              shadowOffsetY: 10,\n              areaColor: \"rgba(24,48,82,255)\",\n              borderColor: \"rgba(84,113,166)\",\n              borderWidth: 1.5\n            },\n            emphasis: {\n              areaColor: \"rgba(7,69,162)\"\n            }\n          }\n        },\n        series: [{\n          type: \"map\",\n          mapType: this.cur_info.region,\n          aspectScale: aspectScale,\n          zoom: 1,\n          layoutSize: layoutSize,\n          z: 1,\n          layoutCenter: [\"50%\", \"50%\"],\n          //地图位置\n          label: {\n            normal: {\n              show: false\n            },\n            emphasis: {\n              show: false\n            }\n          },\n          itemStyle: {\n            normal: {\n              shadowColor: \"rgba(22,57,89,255)\",\n              shadowOffsetX: 20,\n              shadowOffsetY: 20,\n              //areaColor: \"rgba(22,57,89,255)\",\n              borderColor: \"#4a75ff\",\n              borderWidth: 7\n            },\n            emphasis: {\n              areaColor: \"rgba(22,57,89,0)\"\n            }\n          }\n        }]\n      };\n      this.speed_region_Chart.setOption(speed_region_option);\n    },\n\n    async set_policy_detail() {\n      let option = {\n        tooltip: {\n          trigger: \"item\",\n          triggerOn: \"mousemove\"\n        },\n        series: [{\n          type: \"tree\",\n          data: [test_mind_data],\n          top: \"1%\",\n          left: \"7%\",\n          bottom: \"1%\",\n          right: \"20%\",\n          symbolSize: 10,\n          label: {\n            position: \"left\",\n            verticalAlign: \"middle\",\n            align: \"right\",\n            fontSize: 10,\n            color: \"#FFFFFF\"\n          },\n          leaves: {\n            label: {\n              position: \"right\",\n              verticalAlign: \"middle\",\n              align: \"left\"\n            }\n          },\n          emphasis: {\n            focus: \"ancestor\"\n          },\n          expandAndCollapse: true,\n          animationDuration: 550,\n          animationDurationUpdate: 750\n        }]\n      };\n      this.detail_chart = this.$echarts.init(this.$refs.mind);\n      this.detail_chart.setOption(option);\n    },\n\n    async set_wordcloud() {\n      //-------------------------set wordcloud\n      this.word_cloud_Chart = this.$echarts.init(this.$refs.word_cloud);\n      var maskImage = new Image();\n      maskImage.src = word_cloud_data.image;\n      this.word_cloud_Chart.setOption({\n        series: [{\n          type: \"wordCloud\",\n          shape: \"circle\",\n          keepAspect: false,\n          left: \"center\",\n          top: \"center\",\n          width: \"70%\",\n          height: \"70%\",\n          right: null,\n          bottom: null,\n          //maskImage:maskImage,\n          sizeRange: [12, 30],\n          rotationRange: [-45, 45],\n          rotationStep: 90,\n          // 词间距，数值越小，间距越小，这里间距太小的话，会出现大词把小词套住的情况，比如一个大的口字，中间会有比较大的空隙，这时候他会把一些很小的字放在口字里面，这样的话，鼠标就无法选中里面的那个小字\n          gridSize: 2,\n          // 允许词太大的时候，超出画布的范围\n          drawOutOfBound: false,\n          // 布局的时候是否有动画\n          layoutAnimation: false,\n          textStyle: {\n            fontWeight: \"bold\",\n            color: function () {\n              return \"rgb(\" + [Math.round(Math.random() * 254), Math.round(Math.random() * 254), Math.round(Math.random() * 254)].join(\",\") + \")\";\n            }\n          },\n          emphasis: {\n            focus: \"self\",\n            textStyle: {\n              textShadowBlur: 10,\n              textShadowColor: \"#333\"\n            }\n          },\n          // Data is an array. Each array item must have name and value property.\n          data: word_cloud_data.value\n        }]\n      });\n    },\n\n    async set_num_tag() {\n      // prettier-ignore\n      let dataAxis = ['政治', '经济', '资源', '生产', '文化', '民生']; // prettier-ignore\n\n      let data = [10, 20, 16, 30, 41, 55];\n      let yMax = 500;\n      let dataShadow = [];\n\n      for (let i = 0; i < data.length; i++) {\n        dataShadow.push(yMax);\n      }\n\n      let echarts = this.$echarts;\n      let option = {\n        //title: {\n        //  text: \"特性示例：渐变色 阴影 点击缩放\",\n        //  subtext: \"Feature Sample: Gradient Color, Shadow, Click Zoom\",\n        //},\n        xAxis: {\n          name: \"主题\",\n          data: dataAxis,\n          axisLabel: {\n            inside: true,\n            color: \"#FFFFFF\"\n          },\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            show: false\n          },\n          nameTextStyle: {\n            color: \"rgba(255,255,255)\" //fontSize:\"20px\"\n\n          },\n          z: 10\n        },\n        yAxis: {\n          name: \"个数\",\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          nameTextStyle: {\n            color: \"rgba(255,255,255)\" //fontSize:\"20px\"\n\n          },\n          axisLabel: {\n            textStyle: {\n              color: \"rgba(255,255,255)\"\n            }\n          }\n        },\n        dataZoom: [{\n          type: \"inside\"\n        }],\n        series: [{\n          type: \"bar\",\n          showBackground: true,\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: \"#83bff6\"\n            }, {\n              offset: 0.5,\n              color: \"#188df0\"\n            }, {\n              offset: 1,\n              color: \"#188df0\"\n            }])\n          },\n          emphasis: {\n            itemStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: \"#2378f7\"\n              }, {\n                offset: 0.7,\n                color: \"#2378f7\"\n              }, {\n                offset: 1,\n                color: \"#83bff6\"\n              }])\n            }\n          },\n          data: data\n        }]\n      }; // Enable data zoom when user click bar.\n\n      const zoomSize = 3;\n      this.num_tag_chart = this.$echarts.init(this.$refs.tag_num);\n      let that = this;\n      this.num_tag_chart.on(\"click\", function (params) {\n        let h = parseInt(Math.max(params.dataIndex - zoomSize / 2, 0));\n        let t = parseInt(Math.min(params.dataIndex + zoomSize / 2, data.length - 1));\n        console.log(h, t);\n        that.num_tag_chart.dispatchAction({\n          type: \"dataZoom\",\n          startValue: dataAxis[h],\n          endValue: dataAxis[t]\n        });\n      });\n      this.num_tag_chart.setOption(option);\n    }\n\n  },\n\n  beforeDestroy() {\n    if (this.speed_region_Chart) {\n      this.speed_region_Chart.dispose();\n      this.speed_region_Chart = null;\n    }\n\n    if (this.detail_chart) {\n      this.detail_chart.dispose();\n      this.detail_chart = null;\n    }\n\n    if (this.word_cloud_Chart) {\n      this.word_cloud_Chart.dispose();\n      this.word_cloud_Chart = null;\n    }\n\n    if (this.num_tag_chart) {\n      this.num_tag_chart.dispose();\n      this.num_tag_chart = null;\n    }\n  }\n\n};","map":{"version":3,"mappings":"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","names":["data","cur_info","year","title","region","region_data","time_select_value","rank_speed_list","rank","speed","mounted","methods","get_time_change","console","url","method","then","res","scar_data","y","z","aspectScale","geo","map","layoutCenter","layoutSize","zoom","scaleLimit","min","max","label","normal","show","textStyle","color","fontSize","emphasis","itemStyle","shadowColor","shadowOffsetX","shadowOffsetY","areaColor","borderColor","borderWidth","series","type","mapType","tooltip","trigger","triggerOn","top","left","bottom","right","symbolSize","position","verticalAlign","align","leaves","focus","expandAndCollapse","animationDuration","animationDurationUpdate","maskImage","shape","keepAspect","width","height","sizeRange","rotationRange","rotationStep","gridSize","drawOutOfBound","layoutAnimation","fontWeight","Math","join","textShadowBlur","textShadowColor","dataShadow","xAxis","name","axisLabel","inside","axisTick","axisLine","nameTextStyle","yAxis","dataZoom","showBackground","offset","that","startValue","endValue","beforeDestroy"],"sourceRoot":"src/views","sources":["ShiView.vue"],"sourcesContent":["<template>\r\n  <div class=\"ShiBackground\">\r\n    <div class=\"title\"></div>\r\n    <div class=\"content\">\r\n      <div class=\"policy_content\"></div>\r\n      <div class=\"news_content\">\r\n        <div class=\"map_chart\">\r\n          <div\r\n            ref=\"region\"\r\n            style=\"width: 100%; height: 100%; margin-left: 0px\"\r\n          ></div>\r\n        </div>\r\n        <div class=\"time\">\r\n          <div style=\"font-size: 18px; color: #ffffff; margin-bottom: 0px\">\r\n            2017\r\n          </div>\r\n          <el-slider\r\n            v-model=\"time_select_value\"\r\n            :max=\"2021\"\r\n            :min=\"2017\"\r\n            @change=\"get_time_change\"\r\n            :step=\"1\"\r\n            class=\"time_select\"\r\n          >\r\n          </el-slider>\r\n\r\n          <div style=\"font-size: 18px; color: #ffffff; margin-top: 0px\">\r\n            2021\r\n          </div>\r\n        </div>\r\n        <div class=\"mind\">\r\n          <div\r\n            ref=\"mind\"\r\n            style=\"width: 100%; height: 100%; margin-left: 0px\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"right\">\r\n        <div class=\"tag_num\">\r\n          <div\r\n            ref=\"tag_num\"\r\n            style=\"\r\n              width: 100%;\r\n              height: 100%;\r\n              margin-left: 0px;\r\n              margin-top: 30px;\r\n            \"\r\n          ></div>\r\n        </div>\r\n        <div class=\"wordCloud\">\r\n          <div\r\n            ref=\"word_cloud\"\r\n            style=\"width: 100%; height: 100%; margin-left: 0px\"\r\n          ></div>\r\n        </div>\r\n        <div class=\"rank_speed\">\r\n          <div style=\"width:100%;height:50px\"></div>\r\n          <div\r\n            v-for=\"(item, i) in rank_speed_list\"\r\n            :key=\"i\"\r\n          >\r\n            <div class=\"list_item\"\r\n                :class=\"{ 'as_first': i !== 0 }\">\r\n              <div class=\"item_rank\">{{ item.rank }}</div>\r\n              <div class=\"item_title\"\r\n              :class=\"{ 'item_title_content': i !== 0 }\">{{ item.title }}</div>\r\n              <div class=\"item_speed\">{{ item.speed }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport test_mind_data from \"../assets/Shi/test_mind_data.json\";\r\nimport word_cloud_data from \"../assets/Sheng/item_data/word_cloud_3ddata.json\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      cur_info: {\r\n        year: \"2017\",\r\n        title: \"政治\",\r\n        region: \"青岛\",\r\n        region_data: \"\",\r\n      },\r\n      time_select_value: 0,\r\n      rank_speed_list: [\r\n        {\r\n          rank: \"排名\",\r\n          title: \"主题\",\r\n          speed: \"响应时间\",\r\n        },\r\n        {\r\n          rank: 1,\r\n          title: \"政治\",\r\n          speed: 0.2,\r\n        },\r\n        {\r\n          rank: \"2\",\r\n          title: \"民生\",\r\n          speed: 1.9,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.set_region_map();\r\n    this.set_policy_detail();\r\n    this.set_wordcloud();\r\n    this.set_num_tag();\r\n  },\r\n  methods: {\r\n    get_time_change(new_time) {\r\n      //时间变化后\r\n      console.log(new_time.toString());\r\n      //this.cur_info.year = new_time.toString();\r\n      //this.set_num_tag();\r\n      //this.set_speed_tag();\r\n    },\r\n    async set_region_map() {\r\n      await this.$axios({\r\n        url: \"https://geo.datav.aliyun.com/areas_v3/bound/370200_full.json\",\r\n        method: \"get\",\r\n      }).then((res) => {\r\n        this.cur_info.region_data = res.data;\r\n      });\r\n      this.$echarts.registerMap(\r\n        this.cur_info.region,\r\n        this.cur_info.region_data\r\n      );\r\n      let _data = this.cur_info.region_data.features,\r\n        scar_data = [];\r\n      for (let i in _data) {\r\n        let x = _data[i].properties.center[0],\r\n          y = _data[i].properties.center[1],\r\n          z = _data[i].properties.name;\r\n        scar_data.push([x, y, z]);\r\n      }\r\n      this.speed_region_Chart = this.$echarts.init(this.$refs.region);\r\n      let layoutSize = \"600\",\r\n        aspectScale = 687 / 415;\r\n      let speed_region_option = {\r\n        geo: {\r\n          map: this.cur_info.region,\r\n          z: 2,\r\n          aspectScale: aspectScale,\r\n          layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n          layoutSize: layoutSize,\r\n          zoom: 1, //当前视角的缩放比例\r\n          scaleLimit: {\r\n            //滚轮缩放的极限控制\r\n            min: 1,\r\n            max: 2,\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: false,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n            emphasis: {\r\n              show: false,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              shadowColor: \"rgba(21,55,112,255)\",\r\n              shadowOffsetX: 10,\r\n              shadowOffsetY: 10,\r\n              areaColor: \"rgba(24,48,82,255)\",\r\n              borderColor: \"rgba(84,113,166)\",\r\n              borderWidth: 1.5,\r\n            },\r\n            emphasis: {\r\n              areaColor: \"rgba(7,69,162)\",\r\n            },\r\n          },\r\n        },\r\n\r\n        series: [\r\n          {\r\n            type: \"map\",\r\n            mapType: this.cur_info.region,\r\n            aspectScale: aspectScale,\r\n            zoom: 1,\r\n            layoutSize: layoutSize,\r\n            z: 1,\r\n            layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n              },\r\n              emphasis: {\r\n                show: false,\r\n              },\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                shadowColor: \"rgba(22,57,89,255)\",\r\n                shadowOffsetX: 20,\r\n                shadowOffsetY: 20,\r\n                //areaColor: \"rgba(22,57,89,255)\",\r\n                borderColor: \"#4a75ff\",\r\n                borderWidth: 7,\r\n              },\r\n              emphasis: {\r\n                areaColor: \"rgba(22,57,89,0)\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      this.speed_region_Chart.setOption(speed_region_option);\r\n    },\r\n    async set_policy_detail() {\r\n      let option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          triggerOn: \"mousemove\",\r\n        },\r\n        series: [\r\n          {\r\n            type: \"tree\",\r\n            data: [test_mind_data],\r\n            top: \"1%\",\r\n            left: \"7%\",\r\n            bottom: \"1%\",\r\n            right: \"20%\",\r\n            symbolSize: 10,\r\n            label: {\r\n              position: \"left\",\r\n              verticalAlign: \"middle\",\r\n              align: \"right\",\r\n              fontSize: 10,\r\n              color: \"#FFFFFF\",\r\n            },\r\n            leaves: {\r\n              label: {\r\n                position: \"right\",\r\n                verticalAlign: \"middle\",\r\n                align: \"left\",\r\n              },\r\n            },\r\n            emphasis: {\r\n              focus: \"ancestor\",\r\n            },\r\n            expandAndCollapse: true,\r\n            animationDuration: 550,\r\n            animationDurationUpdate: 750,\r\n          },\r\n        ],\r\n      };\r\n      this.detail_chart = this.$echarts.init(this.$refs.mind);\r\n      this.detail_chart.setOption(option);\r\n    },\r\n    async set_wordcloud() {\r\n      //-------------------------set wordcloud\r\n      this.word_cloud_Chart = this.$echarts.init(this.$refs.word_cloud);\r\n      var maskImage = new Image();\r\n      maskImage.src = word_cloud_data.image;\r\n      this.word_cloud_Chart.setOption({\r\n        series: [\r\n          {\r\n            type: \"wordCloud\",\r\n            shape: \"circle\",\r\n            keepAspect: false,\r\n            left: \"center\",\r\n            top: \"center\",\r\n            width: \"70%\",\r\n            height: \"70%\",\r\n            right: null,\r\n            bottom: null,\r\n            //maskImage:maskImage,\r\n            sizeRange: [12, 30],\r\n            rotationRange: [-45, 45],\r\n            rotationStep: 90,\r\n            // 词间距，数值越小，间距越小，这里间距太小的话，会出现大词把小词套住的情况，比如一个大的口字，中间会有比较大的空隙，这时候他会把一些很小的字放在口字里面，这样的话，鼠标就无法选中里面的那个小字\r\n            gridSize: 2,\r\n            // 允许词太大的时候，超出画布的范围\r\n            drawOutOfBound: false,\r\n            // 布局的时候是否有动画\r\n            layoutAnimation: false,\r\n            textStyle: {\r\n              fontWeight: \"bold\",\r\n              color: function () {\r\n                return (\r\n                  \"rgb(\" +\r\n                  [\r\n                    Math.round(Math.random() * 254),\r\n                    Math.round(Math.random() * 254),\r\n                    Math.round(Math.random() * 254),\r\n                  ].join(\",\") +\r\n                  \")\"\r\n                );\r\n              },\r\n            },\r\n            emphasis: {\r\n              focus: \"self\",\r\n              textStyle: {\r\n                textShadowBlur: 10,\r\n                textShadowColor: \"#333\",\r\n              },\r\n            },\r\n\r\n            // Data is an array. Each array item must have name and value property.\r\n            data: word_cloud_data.value,\r\n          },\r\n        ],\r\n      });\r\n    },\r\n    async set_num_tag() {\r\n      // prettier-ignore\r\n      let dataAxis = ['政治','经济','资源','生产','文化','民生'];\r\n      // prettier-ignore\r\n      let data = [10,20,16,30,41,55];\r\n      let yMax = 500;\r\n      let dataShadow = [];\r\n      for (let i = 0; i < data.length; i++) {\r\n        dataShadow.push(yMax);\r\n      }\r\n      let echarts = this.$echarts;\r\n      let option = {\r\n        //title: {\r\n        //  text: \"特性示例：渐变色 阴影 点击缩放\",\r\n        //  subtext: \"Feature Sample: Gradient Color, Shadow, Click Zoom\",\r\n        //},\r\n        xAxis: {\r\n          name: \"主题\",\r\n          data: dataAxis,\r\n          axisLabel: {\r\n            inside: true,\r\n            color: \"#FFFFFF\",\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n            //fontSize:\"20px\"\r\n          },\r\n\r\n          z: 10,\r\n        },\r\n        yAxis: {\r\n          name: \"个数\",\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n            //fontSize:\"20px\"\r\n          },\r\n\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        dataZoom: [\r\n          {\r\n            type: \"inside\",\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            type: \"bar\",\r\n            showBackground: true,\r\n            itemStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: \"#83bff6\" },\r\n                { offset: 0.5, color: \"#188df0\" },\r\n                { offset: 1, color: \"#188df0\" },\r\n              ]),\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  { offset: 0, color: \"#2378f7\" },\r\n                  { offset: 0.7, color: \"#2378f7\" },\r\n                  { offset: 1, color: \"#83bff6\" },\r\n                ]),\r\n              },\r\n            },\r\n            data: data,\r\n          },\r\n        ],\r\n      };\r\n      // Enable data zoom when user click bar.\r\n      const zoomSize = 3;\r\n      this.num_tag_chart = this.$echarts.init(this.$refs.tag_num);\r\n      let that = this;\r\n      this.num_tag_chart.on(\"click\", function (params) {\r\n        let h = parseInt(Math.max(params.dataIndex - zoomSize / 2, 0));\r\n        let t = parseInt(\r\n          Math.min(params.dataIndex + zoomSize / 2, data.length - 1)\r\n        );\r\n        console.log(h, t);\r\n        that.num_tag_chart.dispatchAction({\r\n          type: \"dataZoom\",\r\n          startValue: dataAxis[h],\r\n          endValue: dataAxis[t],\r\n        });\r\n      });\r\n      this.num_tag_chart.setOption(option);\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    if (this.speed_region_Chart) {\r\n      this.speed_region_Chart.dispose();\r\n      this.speed_region_Chart = null;\r\n    }\r\n    if (this.detail_chart) {\r\n      this.detail_chart.dispose();\r\n      this.detail_chart = null;\r\n    }\r\n    if (this.word_cloud_Chart) {\r\n      this.word_cloud_Chart.dispose();\r\n      this.word_cloud_Chart = null;\r\n    }\r\n    if (this.num_tag_chart) {\r\n      this.num_tag_chart.dispose();\r\n      this.num_tag_chart = null;\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.tag_num {\r\n  width: 100%;\r\n  height: 340px;\r\n  background: url(../assets/Shi/tag_num.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n}\r\n.wordCloud {\r\n  width: 100%;\r\n  margin-top: 12px;\r\n  height: 302px;\r\n  background: url(../assets/Shi/3dwordCloud.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n}\r\n.rank_speed {\r\n  width: 100%;\r\n  margin-top: 12px;\r\n  margin-left: 6px;\r\n  height: 327px;\r\n  background: url(../assets/Shi/rank_speed.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n  display: flex;\r\n  flex-flow: column;\r\n  .as_first {\r\n    margin-top: 91px;\r\n  }\r\n  .list_item {\r\n    display: flex;\r\n    width: 489px;\r\n    margin-left: 129px;\r\n    margin-top: 10px;\r\n    .item_rank {\r\n      color: rgba(255, 255, 255, 100);\r\n      font-size: 20px;\r\n      text-align: left;\r\n      font-weight: bold;\r\n      width: 110px;\r\n      //font-family: SourceHanSansSC-regular;\r\n    }\r\n    .item_title {\r\n      color: rgba(161, 158, 158, 100);\r\n      font-size: 20px;\r\n      width: 86px+31px;\r\n      text-align: left;\r\n    }\r\n    .item_speed {\r\n      color: rgba(161, 158, 158, 100);\r\n      font-size: 20px;\r\n    }\r\n    .item_title_content{\r\n      color: rgba(231,0,0);\r\n      font-size: 20px;\r\n      width: 86px+31px;\r\n      text-align: left;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n.news_content {\r\n  .map_chart {\r\n    width: 686px;\r\n    height: 415px;\r\n    margin: 89px 0 0 22px;\r\n  }\r\n  .time {\r\n    width: 100%;\r\n    height: 28px;\r\n    margin-left: 83px;\r\n    margin-top: 0px;\r\n    display: flex;\r\n    .time_select {\r\n      width: 496px;\r\n      height: 28px;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n  .mind {\r\n    width: 538px;\r\n    height: 390px;\r\n    margin-left: 77px;\r\n  }\r\n  width: 735px;\r\n  height: 947px;\r\n  margin-top: 114px;\r\n  margin-left: 45px;\r\n  background: url(../assets/Shi/news_content.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n  display: flex;\r\n  flex-flow: column;\r\n}\r\n.policy_content {\r\n  width: 487px;\r\n  height: 997px;\r\n  margin-top: 43px;\r\n  margin-left: 54px;\r\n  background: url(../assets/Shi/policy_content.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n}\r\n.right {\r\n  margin-top: 69px;\r\n  margin-left: 36px;\r\n  width: 567px;\r\n  height: 775px+287px;\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  justify-content: flex-start;\r\n}\r\n\r\n.ShiBackground {\r\n  width: 1936px;\r\n  height: 1083px;\r\n  background: url(../assets/Sheng/ShengBackground.PNG) no-repeat;\r\n  background-size: 100% 100%;\r\n  .title {\r\n    width: 1936px;\r\n    height: 343px;\r\n    background: url(../assets/main_page_title.png) no-repeat;\r\n    background-size: 100% 100%;\r\n    background-position: center top;\r\n  }\r\n  .content {\r\n    margin-top: -343px;\r\n    width: 1936px;\r\n    height: 1083px-343px;\r\n    display: flex;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}