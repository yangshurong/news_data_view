{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nvar isDimensionStacked = echarts.helper.dataStack.isDimensionStacked;\n\nfunction ifCrossZero(extent) {\n  var min = extent[0];\n  var max = extent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n\n;\n\nfunction cartesian3DLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData(); // var barOnPlane = seriesModel.get('onGridPlane');\n\n  var barSize = seriesModel.get('barSize');\n\n  if (barSize == null) {\n    var size = coordSys.size;\n    var barWidth;\n    var barDepth;\n    var xAxis = coordSys.getAxis('x');\n    var yAxis = coordSys.getAxis('y');\n\n    if (xAxis.type === 'category') {\n      barWidth = xAxis.getBandWidth() * 0.7;\n    } else {\n      // PENDING\n      barWidth = Math.round(size[0] / Math.sqrt(data.count())) * 0.6;\n    }\n\n    if (yAxis.type === 'category') {\n      barDepth = yAxis.getBandWidth() * 0.7;\n    } else {\n      barDepth = Math.round(size[1] / Math.sqrt(data.count())) * 0.6;\n    }\n\n    barSize = [barWidth, barDepth];\n  } else if (!echarts.util.isArray(barSize)) {\n    barSize = [barSize, barSize];\n  }\n\n  var zAxisExtent = coordSys.getAxis('z').scale.getExtent();\n  var ifZAxisCrossZero = ifCrossZero(zAxisExtent);\n  var dims = ['x', 'y', 'z'].map(function (coordDimName) {\n    return seriesModel.coordDimToDataDim(coordDimName)[0];\n  });\n  var isStacked = isDimensionStacked(data, dims[2]);\n  var valueDim = isStacked ? data.getCalculationInfo('stackResultDimension') : dims[2];\n  data.each(dims, function (x, y, z, idx) {\n    // TODO zAxis is inversed\n    // TODO On different plane.\n    var stackedValue = data.get(valueDim, idx);\n    var baseValue = isStacked ? stackedValue - z : ifZAxisCrossZero ? 0 : zAxisExtent[0];\n    var start = coordSys.dataToPoint([x, y, baseValue]);\n    var end = coordSys.dataToPoint([x, y, stackedValue]);\n    var height = vec3.dist(start, end); // PENDING When zAxis is not cross zero.\n\n    var dir = [0, end[1] < start[1] ? -1 : 1, 0];\n\n    if (Math.abs(height) === 0) {\n      // TODO\n      height = 0.1;\n    }\n\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', [1, 0, 0]);\n}\n\nexport default cartesian3DLayout;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/chart/bar3D/cartesian3DLayout.js"],"names":["echarts","glmatrix","vec3","isDimensionStacked","helper","dataStack","ifCrossZero","extent","min","max","cartesian3DLayout","seriesModel","coordSys","data","getData","barSize","get","size","barWidth","barDepth","xAxis","getAxis","yAxis","type","getBandWidth","Math","round","sqrt","count","util","isArray","zAxisExtent","scale","getExtent","ifZAxisCrossZero","dims","map","coordDimName","coordDimToDataDim","isStacked","valueDim","getCalculationInfo","each","x","y","z","idx","stackedValue","baseValue","start","dataToPoint","end","height","dist","dir","abs","setItemLayout","setLayout"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACA,IAAIC,kBAAkB,GAAGH,OAAO,CAACI,MAAR,CAAeC,SAAf,CAAyBF,kBAAlD;;AAEA,SAASG,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAIC,GAAG,GAAGD,MAAM,CAAC,CAAD,CAAhB;AACA,MAAIE,GAAG,GAAGF,MAAM,CAAC,CAAD,CAAhB;AACA,SAAO,EAAEC,GAAG,GAAG,CAAN,IAAWC,GAAG,GAAG,CAAjB,IAAsBD,GAAG,GAAG,CAAN,IAAWC,GAAG,GAAG,CAAzC,CAAP;AACD;;AAED;;AAEA,SAASC,iBAAT,CAA2BC,WAA3B,EAAwCC,QAAxC,EAAkD;AAChD,MAAIC,IAAI,GAAGF,WAAW,CAACG,OAAZ,EAAX,CADgD,CACd;;AAElC,MAAIC,OAAO,GAAGJ,WAAW,CAACK,GAAZ,CAAgB,SAAhB,CAAd;;AAEA,MAAID,OAAO,IAAI,IAAf,EAAqB;AACnB,QAAIE,IAAI,GAAGL,QAAQ,CAACK,IAApB;AACA,QAAIC,QAAJ;AACA,QAAIC,QAAJ;AACA,QAAIC,KAAK,GAAGR,QAAQ,CAACS,OAAT,CAAiB,GAAjB,CAAZ;AACA,QAAIC,KAAK,GAAGV,QAAQ,CAACS,OAAT,CAAiB,GAAjB,CAAZ;;AAEA,QAAID,KAAK,CAACG,IAAN,KAAe,UAAnB,EAA+B;AAC7BL,MAAAA,QAAQ,GAAGE,KAAK,CAACI,YAAN,KAAuB,GAAlC;AACD,KAFD,MAEO;AACL;AACAN,MAAAA,QAAQ,GAAGO,IAAI,CAACC,KAAL,CAAWT,IAAI,CAAC,CAAD,CAAJ,GAAUQ,IAAI,CAACE,IAAL,CAAUd,IAAI,CAACe,KAAL,EAAV,CAArB,IAAgD,GAA3D;AACD;;AAED,QAAIN,KAAK,CAACC,IAAN,KAAe,UAAnB,EAA+B;AAC7BJ,MAAAA,QAAQ,GAAGG,KAAK,CAACE,YAAN,KAAuB,GAAlC;AACD,KAFD,MAEO;AACLL,MAAAA,QAAQ,GAAGM,IAAI,CAACC,KAAL,CAAWT,IAAI,CAAC,CAAD,CAAJ,GAAUQ,IAAI,CAACE,IAAL,CAAUd,IAAI,CAACe,KAAL,EAAV,CAArB,IAAgD,GAA3D;AACD;;AAEDb,IAAAA,OAAO,GAAG,CAACG,QAAD,EAAWC,QAAX,CAAV;AACD,GArBD,MAqBO,IAAI,CAACnB,OAAO,CAAC6B,IAAR,CAAaC,OAAb,CAAqBf,OAArB,CAAL,EAAoC;AACzCA,IAAAA,OAAO,GAAG,CAACA,OAAD,EAAUA,OAAV,CAAV;AACD;;AAED,MAAIgB,WAAW,GAAGnB,QAAQ,CAACS,OAAT,CAAiB,GAAjB,EAAsBW,KAAtB,CAA4BC,SAA5B,EAAlB;AACA,MAAIC,gBAAgB,GAAG5B,WAAW,CAACyB,WAAD,CAAlC;AACA,MAAII,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAAUC,YAAV,EAAwB;AACrD,WAAO1B,WAAW,CAAC2B,iBAAZ,CAA8BD,YAA9B,EAA4C,CAA5C,CAAP;AACD,GAFU,CAAX;AAGA,MAAIE,SAAS,GAAGpC,kBAAkB,CAACU,IAAD,EAAOsB,IAAI,CAAC,CAAD,CAAX,CAAlC;AACA,MAAIK,QAAQ,GAAGD,SAAS,GAAG1B,IAAI,CAAC4B,kBAAL,CAAwB,sBAAxB,CAAH,GAAqDN,IAAI,CAAC,CAAD,CAAjF;AACAtB,EAAAA,IAAI,CAAC6B,IAAL,CAAUP,IAAV,EAAgB,UAAUQ,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,GAAnB,EAAwB;AACtC;AACA;AACA,QAAIC,YAAY,GAAGlC,IAAI,CAACG,GAAL,CAASwB,QAAT,EAAmBM,GAAnB,CAAnB;AACA,QAAIE,SAAS,GAAGT,SAAS,GAAGQ,YAAY,GAAGF,CAAlB,GAAsBX,gBAAgB,GAAG,CAAH,GAAOH,WAAW,CAAC,CAAD,CAAjF;AACA,QAAIkB,KAAK,GAAGrC,QAAQ,CAACsC,WAAT,CAAqB,CAACP,CAAD,EAAIC,CAAJ,EAAOI,SAAP,CAArB,CAAZ;AACA,QAAIG,GAAG,GAAGvC,QAAQ,CAACsC,WAAT,CAAqB,CAACP,CAAD,EAAIC,CAAJ,EAAOG,YAAP,CAArB,CAAV;AACA,QAAIK,MAAM,GAAGlD,IAAI,CAACmD,IAAL,CAAUJ,KAAV,EAAiBE,GAAjB,CAAb,CAPsC,CAOF;;AAEpC,QAAIG,GAAG,GAAG,CAAC,CAAD,EAAIH,GAAG,CAAC,CAAD,CAAH,GAASF,KAAK,CAAC,CAAD,CAAd,GAAoB,CAAC,CAArB,GAAyB,CAA7B,EAAgC,CAAhC,CAAV;;AAEA,QAAIxB,IAAI,CAAC8B,GAAL,CAASH,MAAT,MAAqB,CAAzB,EAA4B;AAC1B;AACAA,MAAAA,MAAM,GAAG,GAAT;AACD;;AAED,QAAInC,IAAI,GAAG,CAACF,OAAO,CAAC,CAAD,CAAR,EAAaqC,MAAb,EAAqBrC,OAAO,CAAC,CAAD,CAA5B,CAAX;AACAF,IAAAA,IAAI,CAAC2C,aAAL,CAAmBV,GAAnB,EAAwB,CAACG,KAAD,EAAQK,GAAR,EAAarC,IAAb,CAAxB;AACD,GAlBD;AAmBAJ,EAAAA,IAAI,CAAC4C,SAAL,CAAe,QAAf,EAAyB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAzB;AACD;;AAED,eAAe/C,iBAAf","sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nvar isDimensionStacked = echarts.helper.dataStack.isDimensionStacked;\n\nfunction ifCrossZero(extent) {\n  var min = extent[0];\n  var max = extent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n\n;\n\nfunction cartesian3DLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData(); // var barOnPlane = seriesModel.get('onGridPlane');\n\n  var barSize = seriesModel.get('barSize');\n\n  if (barSize == null) {\n    var size = coordSys.size;\n    var barWidth;\n    var barDepth;\n    var xAxis = coordSys.getAxis('x');\n    var yAxis = coordSys.getAxis('y');\n\n    if (xAxis.type === 'category') {\n      barWidth = xAxis.getBandWidth() * 0.7;\n    } else {\n      // PENDING\n      barWidth = Math.round(size[0] / Math.sqrt(data.count())) * 0.6;\n    }\n\n    if (yAxis.type === 'category') {\n      barDepth = yAxis.getBandWidth() * 0.7;\n    } else {\n      barDepth = Math.round(size[1] / Math.sqrt(data.count())) * 0.6;\n    }\n\n    barSize = [barWidth, barDepth];\n  } else if (!echarts.util.isArray(barSize)) {\n    barSize = [barSize, barSize];\n  }\n\n  var zAxisExtent = coordSys.getAxis('z').scale.getExtent();\n  var ifZAxisCrossZero = ifCrossZero(zAxisExtent);\n  var dims = ['x', 'y', 'z'].map(function (coordDimName) {\n    return seriesModel.coordDimToDataDim(coordDimName)[0];\n  });\n  var isStacked = isDimensionStacked(data, dims[2]);\n  var valueDim = isStacked ? data.getCalculationInfo('stackResultDimension') : dims[2];\n  data.each(dims, function (x, y, z, idx) {\n    // TODO zAxis is inversed\n    // TODO On different plane.\n    var stackedValue = data.get(valueDim, idx);\n    var baseValue = isStacked ? stackedValue - z : ifZAxisCrossZero ? 0 : zAxisExtent[0];\n    var start = coordSys.dataToPoint([x, y, baseValue]);\n    var end = coordSys.dataToPoint([x, y, stackedValue]);\n    var height = vec3.dist(start, end); // PENDING When zAxis is not cross zero.\n\n    var dir = [0, end[1] < start[1] ? -1 : 1, 0];\n\n    if (Math.abs(height) === 0) {\n      // TODO\n      height = 0.1;\n    }\n\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', [1, 0, 0]);\n}\n\nexport default cartesian3DLayout;"]},"metadata":{},"sourceType":"module"}