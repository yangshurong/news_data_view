{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport Animator from 'zrender/lib/animation/Animator';\nvar animatableMixin = {\n  _animators: null,\n  getAnimators: function getAnimators() {\n    this._animators = this._animators || [];\n    return this._animators;\n  },\n  animate: function animate(path, opts) {\n    this._animators = this._animators || [];\n    var el = this;\n    var target;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el;\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (target == null) {\n      throw new Error('Target ' + path + ' not exists');\n    }\n\n    var animators = this._animators;\n    var animator = new Animator(target, opts);\n    var self = this;\n    animator.during(function () {\n      if (self.__zr) {\n        self.__zr.refresh();\n      }\n    }).done(function () {\n      var idx = animators.indexOf(animator);\n\n      if (idx >= 0) {\n        animators.splice(idx, 1);\n      }\n    });\n    animators.push(animator);\n\n    if (this.__zr) {\n      this.__zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n  stopAnimation: function stopAnimation(forwardToLast) {\n    this._animators = this._animators || [];\n    var animators = this._animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n  addAnimatorsToZr: function addAnimatorsToZr(zr) {\n    if (this._animators) {\n      for (var i = 0; i < this._animators.length; i++) {\n        zr.animation.addAnimator(this._animators[i]);\n      }\n    }\n  },\n  removeAnimatorsFromZr: function removeAnimatorsFromZr(zr) {\n    if (this._animators) {\n      for (var i = 0; i < this._animators.length; i++) {\n        zr.animation.removeAnimator(this._animators[i]);\n      }\n    }\n  }\n};\nexport default animatableMixin;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/util/animatableMixin.js"],"names":["Animator","animatableMixin","_animators","getAnimators","animate","path","opts","el","target","pathSplitted","split","prop","i","l","length","Error","animators","animator","self","during","__zr","refresh","done","idx","indexOf","splice","push","animation","addAnimator","stopAnimation","forwardToLast","len","stop","addAnimatorsToZr","zr","removeAnimatorsFromZr","removeAnimator"],"mappings":"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","sourcesContent":["import Animator from 'zrender/lib/animation/Animator';\nvar animatableMixin = {\n  _animators: null,\n  getAnimators: function () {\n    this._animators = this._animators || [];\n    return this._animators;\n  },\n  animate: function (path, opts) {\n    this._animators = this._animators || [];\n    var el = this;\n    var target;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el;\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (target == null) {\n      throw new Error('Target ' + path + ' not exists');\n    }\n\n    var animators = this._animators;\n    var animator = new Animator(target, opts);\n    var self = this;\n    animator.during(function () {\n      if (self.__zr) {\n        self.__zr.refresh();\n      }\n    }).done(function () {\n      var idx = animators.indexOf(animator);\n\n      if (idx >= 0) {\n        animators.splice(idx, 1);\n      }\n    });\n    animators.push(animator);\n\n    if (this.__zr) {\n      this.__zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n  stopAnimation: function (forwardToLast) {\n    this._animators = this._animators || [];\n    var animators = this._animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n  addAnimatorsToZr: function (zr) {\n    if (this._animators) {\n      for (var i = 0; i < this._animators.length; i++) {\n        zr.animation.addAnimator(this._animators[i]);\n      }\n    }\n  },\n  removeAnimatorsFromZr: function (zr) {\n    if (this._animators) {\n      for (var i = 0; i < this._animators.length; i++) {\n        zr.animation.removeAnimator(this._animators[i]);\n      }\n    }\n  }\n};\nexport default animatableMixin;"]},"metadata":{},"sourceType":"module"}