{"ast":null,"code":"function get(options) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('get', options.url); // With response type set browser can get and put binary data\n  // https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data\n  // Default is text, and it can be set\n  // arraybuffer, blob, document, json, text\n\n  xhr.responseType = options.responseType || 'text';\n\n  if (options.onprogress) {\n    //https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest\n    xhr.onprogress = function (e) {\n      if (e.lengthComputable) {\n        var percent = e.loaded / e.total;\n        options.onprogress(percent, e.loaded, e.total);\n      } else {\n        options.onprogress(null);\n      }\n    };\n  }\n\n  xhr.onload = function (e) {\n    if (xhr.status >= 400) {\n      options.onerror && options.onerror();\n    } else {\n      options.onload && options.onload(xhr.response);\n    }\n  };\n\n  if (options.onerror) {\n    xhr.onerror = options.onerror;\n  }\n\n  xhr.send(null);\n}\n\nexport default {\n  get: get\n};","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_claygl@1.3.0@claygl/src/core/request.js"],"names":["get","options","xhr","XMLHttpRequest","open","url","responseType","onprogress","e","lengthComputable","percent","loaded","total","onload","status","onerror","response","send"],"mappings":"AAAA,SAASA,GAAT,CAAaC,OAAb,EAAsB;AAElB,MAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AAEAD,EAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBH,OAAO,CAACI,GAAxB,EAJkB,CAKlB;AACA;AACA;AACA;;AACAH,EAAAA,GAAG,CAACI,YAAJ,GAAmBL,OAAO,CAACK,YAAR,IAAwB,MAA3C;;AAEA,MAAIL,OAAO,CAACM,UAAZ,EAAwB;AACpB;AACAL,IAAAA,GAAG,CAACK,UAAJ,GAAiB,UAASC,CAAT,EAAY;AACzB,UAAIA,CAAC,CAACC,gBAAN,EAAwB;AACpB,YAAIC,OAAO,GAAGF,CAAC,CAACG,MAAF,GAAWH,CAAC,CAACI,KAA3B;AACAX,QAAAA,OAAO,CAACM,UAAR,CAAmBG,OAAnB,EAA4BF,CAAC,CAACG,MAA9B,EAAsCH,CAAC,CAACI,KAAxC;AACH,OAHD,MAIK;AACDX,QAAAA,OAAO,CAACM,UAAR,CAAmB,IAAnB;AACH;AACJ,KARD;AASH;;AACDL,EAAAA,GAAG,CAACW,MAAJ,GAAa,UAASL,CAAT,EAAY;AACrB,QAAIN,GAAG,CAACY,MAAJ,IAAc,GAAlB,EAAuB;AACnBb,MAAAA,OAAO,CAACc,OAAR,IAAmBd,OAAO,CAACc,OAAR,EAAnB;AACH,KAFD,MAGK;AACDd,MAAAA,OAAO,CAACY,MAAR,IAAkBZ,OAAO,CAACY,MAAR,CAAeX,GAAG,CAACc,QAAnB,CAAlB;AACH;AACJ,GAPD;;AAQA,MAAIf,OAAO,CAACc,OAAZ,EAAqB;AACjBb,IAAAA,GAAG,CAACa,OAAJ,GAAcd,OAAO,CAACc,OAAtB;AACH;;AACDb,EAAAA,GAAG,CAACe,IAAJ,CAAS,IAAT;AACH;;AAED,eAAe;AACXjB,EAAAA,GAAG,EAAEA;AADM,CAAf","sourcesContent":["function get(options) {\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open('get', options.url);\n    // With response type set browser can get and put binary data\n    // https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data\n    // Default is text, and it can be set\n    // arraybuffer, blob, document, json, text\n    xhr.responseType = options.responseType || 'text';\n\n    if (options.onprogress) {\n        //https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest\n        xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n                var percent = e.loaded / e.total;\n                options.onprogress(percent, e.loaded, e.total);\n            }\n            else {\n                options.onprogress(null);\n            }\n        };\n    }\n    xhr.onload = function(e) {\n        if (xhr.status >= 400) {\n            options.onerror && options.onerror();\n        }\n        else {\n            options.onload && options.onload(xhr.response);\n        }\n    };\n    if (options.onerror) {\n        xhr.onerror = options.onerror;\n    }\n    xhr.send(null);\n}\n\nexport default {\n    get: get\n};\n"]},"metadata":{},"sourceType":"module"}