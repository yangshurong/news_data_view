{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport ZRTextureAtlasSurface from '../../util/ZRTextureAtlasSurface';\nimport LabelsMesh from '../../util/mesh/LabelsMesh';\nimport retrieve from '../../util/retrieve';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nimport { createTextStyle } from 'echarts/lib/label/labelStyle';\nvar LABEL_NORMAL_SHOW_BIT = 1;\nvar LABEL_EMPHASIS_SHOW_BIT = 2;\n\nfunction LabelsBuilder(width, height, api) {\n  this._labelsMesh = new LabelsMesh();\n  this._labelTextureSurface = new ZRTextureAtlasSurface({\n    width: 512,\n    height: 512,\n    devicePixelRatio: api.getDevicePixelRatio(),\n    onupdate: function onupdate() {\n      api.getZr().refresh();\n    }\n  });\n  this._api = api;\n\n  this._labelsMesh.material.set('textureAtlas', this._labelTextureSurface.getTexture());\n}\n\nLabelsBuilder.prototype.getLabelPosition = function (dataIndex, positionDesc, distance) {\n  return [0, 0, 0];\n};\n\nLabelsBuilder.prototype.getLabelDistance = function (dataIndex, positionDesc, distance) {\n  return 0;\n};\n\nLabelsBuilder.prototype.getMesh = function () {\n  return this._labelsMesh;\n};\n\nLabelsBuilder.prototype.updateData = function (data, start, end) {\n  if (start == null) {\n    start = 0;\n  }\n\n  if (end == null) {\n    end = data.count();\n  }\n\n  if (!this._labelsVisibilitiesBits || this._labelsVisibilitiesBits.length !== end - start) {\n    this._labelsVisibilitiesBits = new Uint8Array(end - start);\n  }\n\n  var normalLabelVisibilityQuery = ['label', 'show'];\n  var emphasisLabelVisibilityQuery = ['emphasis', 'label', 'show'];\n\n  for (var idx = start; idx < end; idx++) {\n    var itemModel = data.getItemModel(idx);\n    var normalVisibility = itemModel.get(normalLabelVisibilityQuery);\n    var emphasisVisibility = itemModel.get(emphasisLabelVisibilityQuery);\n\n    if (emphasisVisibility == null) {\n      emphasisVisibility = normalVisibility;\n    }\n\n    var bit = (normalVisibility ? LABEL_NORMAL_SHOW_BIT : 0) | (emphasisVisibility ? LABEL_EMPHASIS_SHOW_BIT : 0);\n    this._labelsVisibilitiesBits[idx - start] = bit;\n  }\n\n  this._start = start;\n  this._end = end;\n  this._data = data;\n};\n\nLabelsBuilder.prototype.updateLabels = function (highlightDataIndices) {\n  if (!this._data) {\n    return;\n  }\n\n  highlightDataIndices = highlightDataIndices || [];\n  var hasHighlightData = highlightDataIndices.length > 0;\n  var highlightDataIndicesMap = {};\n\n  for (var i = 0; i < highlightDataIndices.length; i++) {\n    highlightDataIndicesMap[highlightDataIndices[i]] = true;\n  }\n\n  this._labelsMesh.geometry.convertToDynamicArray(true);\n\n  this._labelTextureSurface.clear();\n\n  var normalLabelQuery = ['label'];\n  var emphasisLabelQuery = ['emphasis', 'label'];\n  var seriesModel = this._data.hostModel;\n  var data = this._data;\n  var seriesLabelModel = seriesModel.getModel(normalLabelQuery);\n  var seriesLabelEmphasisModel = seriesModel.getModel(emphasisLabelQuery, seriesLabelModel);\n  var textAlignMap = {\n    left: 'right',\n    right: 'left',\n    top: 'center',\n    bottom: 'center'\n  };\n  var textVerticalAlignMap = {\n    left: 'middle',\n    right: 'middle',\n    top: 'bottom',\n    bottom: 'top'\n  };\n\n  for (var dataIndex = this._start; dataIndex < this._end; dataIndex++) {\n    var isEmphasis = false;\n\n    if (hasHighlightData && highlightDataIndicesMap[dataIndex]) {\n      isEmphasis = true;\n    }\n\n    var ifShow = this._labelsVisibilitiesBits[dataIndex - this._start] & (isEmphasis ? LABEL_EMPHASIS_SHOW_BIT : LABEL_NORMAL_SHOW_BIT);\n\n    if (!ifShow) {\n      continue;\n    }\n\n    var itemModel = data.getItemModel(dataIndex);\n    var labelModel = itemModel.getModel(isEmphasis ? emphasisLabelQuery : normalLabelQuery, isEmphasis ? seriesLabelEmphasisModel : seriesLabelModel);\n    var distance = labelModel.get('distance') || 0;\n    var position = labelModel.get('position');\n\n    var dpr = this._api.getDevicePixelRatio();\n\n    var text = seriesModel.getFormattedLabel(dataIndex, isEmphasis ? 'emphasis' : 'normal');\n\n    if (text == null || text === '') {\n      return;\n    } // TODO Background.\n\n\n    var textEl = new echarts.graphic.Text({\n      style: createTextStyle(labelModel, {\n        text: text,\n        fill: labelModel.get('color') || getItemVisualColor(data, dataIndex) || '#000',\n        align: 'left',\n        verticalAlign: 'top',\n        opacity: retrieve.firstNotNull(labelModel.get('opacity'), getItemVisualOpacity(data, dataIndex), 1)\n      })\n    });\n    var rect = textEl.getBoundingRect();\n    var lineHeight = 1.2;\n    rect.height *= lineHeight;\n\n    var coords = this._labelTextureSurface.add(textEl);\n\n    var textAlign = textAlignMap[position] || 'center';\n    var textVerticalAlign = textVerticalAlignMap[position] || 'bottom';\n\n    this._labelsMesh.geometry.addSprite(this.getLabelPosition(dataIndex, position, distance), [rect.width * dpr, rect.height * dpr], coords, textAlign, textVerticalAlign, this.getLabelDistance(dataIndex, position, distance) * dpr);\n  }\n\n  this._labelsMesh.material.set('uvScale', this._labelTextureSurface.getCoordsScale()); // var canvas = this._labelTextureSurface.getTexture().image;\n  // document.body.appendChild(canvas);\n  // canvas.style.cssText = 'position:absolute;z-index: 1000';\n  // Update image.\n\n\n  this._labelTextureSurface.getZr().refreshImmediately();\n\n  this._labelsMesh.geometry.convertToTypedArray();\n\n  this._labelsMesh.geometry.dirty();\n};\n\nLabelsBuilder.prototype.dispose = function () {\n  this._labelTextureSurface.dispose();\n};\n\nexport default LabelsBuilder;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_echarts-gl@2.0.9@echarts-gl/lib/component/common/LabelsBuilder.js"],"names":["echarts","ZRTextureAtlasSurface","LabelsMesh","retrieve","getItemVisualColor","getItemVisualOpacity","createTextStyle","LABEL_NORMAL_SHOW_BIT","LABEL_EMPHASIS_SHOW_BIT","LabelsBuilder","width","height","api","_labelsMesh","_labelTextureSurface","devicePixelRatio","getDevicePixelRatio","onupdate","getZr","refresh","_api","material","set","getTexture","prototype","getLabelPosition","dataIndex","positionDesc","distance","getLabelDistance","getMesh","updateData","data","start","end","count","_labelsVisibilitiesBits","length","Uint8Array","normalLabelVisibilityQuery","emphasisLabelVisibilityQuery","idx","itemModel","getItemModel","normalVisibility","get","emphasisVisibility","bit","_start","_end","_data","updateLabels","highlightDataIndices","hasHighlightData","highlightDataIndicesMap","i","geometry","convertToDynamicArray","clear","normalLabelQuery","emphasisLabelQuery","seriesModel","hostModel","seriesLabelModel","getModel","seriesLabelEmphasisModel","textAlignMap","left","right","top","bottom","textVerticalAlignMap","isEmphasis","ifShow","labelModel","position","dpr","text","getFormattedLabel","textEl","graphic","Text","style","fill","align","verticalAlign","opacity","firstNotNull","rect","getBoundingRect","lineHeight","coords","add","textAlign","textVerticalAlign","addSprite","getCoordsScale","refreshImmediately","convertToTypedArray","dirty","dispose"],"mappings":"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","sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport ZRTextureAtlasSurface from '../../util/ZRTextureAtlasSurface';\nimport LabelsMesh from '../../util/mesh/LabelsMesh';\nimport retrieve from '../../util/retrieve';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nimport { createTextStyle } from 'echarts/lib/label/labelStyle';\nvar LABEL_NORMAL_SHOW_BIT = 1;\nvar LABEL_EMPHASIS_SHOW_BIT = 2;\n\nfunction LabelsBuilder(width, height, api) {\n  this._labelsMesh = new LabelsMesh();\n  this._labelTextureSurface = new ZRTextureAtlasSurface({\n    width: 512,\n    height: 512,\n    devicePixelRatio: api.getDevicePixelRatio(),\n    onupdate: function () {\n      api.getZr().refresh();\n    }\n  });\n  this._api = api;\n\n  this._labelsMesh.material.set('textureAtlas', this._labelTextureSurface.getTexture());\n}\n\nLabelsBuilder.prototype.getLabelPosition = function (dataIndex, positionDesc, distance) {\n  return [0, 0, 0];\n};\n\nLabelsBuilder.prototype.getLabelDistance = function (dataIndex, positionDesc, distance) {\n  return 0;\n};\n\nLabelsBuilder.prototype.getMesh = function () {\n  return this._labelsMesh;\n};\n\nLabelsBuilder.prototype.updateData = function (data, start, end) {\n  if (start == null) {\n    start = 0;\n  }\n\n  if (end == null) {\n    end = data.count();\n  }\n\n  if (!this._labelsVisibilitiesBits || this._labelsVisibilitiesBits.length !== end - start) {\n    this._labelsVisibilitiesBits = new Uint8Array(end - start);\n  }\n\n  var normalLabelVisibilityQuery = ['label', 'show'];\n  var emphasisLabelVisibilityQuery = ['emphasis', 'label', 'show'];\n\n  for (var idx = start; idx < end; idx++) {\n    var itemModel = data.getItemModel(idx);\n    var normalVisibility = itemModel.get(normalLabelVisibilityQuery);\n    var emphasisVisibility = itemModel.get(emphasisLabelVisibilityQuery);\n\n    if (emphasisVisibility == null) {\n      emphasisVisibility = normalVisibility;\n    }\n\n    var bit = (normalVisibility ? LABEL_NORMAL_SHOW_BIT : 0) | (emphasisVisibility ? LABEL_EMPHASIS_SHOW_BIT : 0);\n    this._labelsVisibilitiesBits[idx - start] = bit;\n  }\n\n  this._start = start;\n  this._end = end;\n  this._data = data;\n};\n\nLabelsBuilder.prototype.updateLabels = function (highlightDataIndices) {\n  if (!this._data) {\n    return;\n  }\n\n  highlightDataIndices = highlightDataIndices || [];\n  var hasHighlightData = highlightDataIndices.length > 0;\n  var highlightDataIndicesMap = {};\n\n  for (var i = 0; i < highlightDataIndices.length; i++) {\n    highlightDataIndicesMap[highlightDataIndices[i]] = true;\n  }\n\n  this._labelsMesh.geometry.convertToDynamicArray(true);\n\n  this._labelTextureSurface.clear();\n\n  var normalLabelQuery = ['label'];\n  var emphasisLabelQuery = ['emphasis', 'label'];\n  var seriesModel = this._data.hostModel;\n  var data = this._data;\n  var seriesLabelModel = seriesModel.getModel(normalLabelQuery);\n  var seriesLabelEmphasisModel = seriesModel.getModel(emphasisLabelQuery, seriesLabelModel);\n  var textAlignMap = {\n    left: 'right',\n    right: 'left',\n    top: 'center',\n    bottom: 'center'\n  };\n  var textVerticalAlignMap = {\n    left: 'middle',\n    right: 'middle',\n    top: 'bottom',\n    bottom: 'top'\n  };\n\n  for (var dataIndex = this._start; dataIndex < this._end; dataIndex++) {\n    var isEmphasis = false;\n\n    if (hasHighlightData && highlightDataIndicesMap[dataIndex]) {\n      isEmphasis = true;\n    }\n\n    var ifShow = this._labelsVisibilitiesBits[dataIndex - this._start] & (isEmphasis ? LABEL_EMPHASIS_SHOW_BIT : LABEL_NORMAL_SHOW_BIT);\n\n    if (!ifShow) {\n      continue;\n    }\n\n    var itemModel = data.getItemModel(dataIndex);\n    var labelModel = itemModel.getModel(isEmphasis ? emphasisLabelQuery : normalLabelQuery, isEmphasis ? seriesLabelEmphasisModel : seriesLabelModel);\n    var distance = labelModel.get('distance') || 0;\n    var position = labelModel.get('position');\n\n    var dpr = this._api.getDevicePixelRatio();\n\n    var text = seriesModel.getFormattedLabel(dataIndex, isEmphasis ? 'emphasis' : 'normal');\n\n    if (text == null || text === '') {\n      return;\n    } // TODO Background.\n\n\n    var textEl = new echarts.graphic.Text({\n      style: createTextStyle(labelModel, {\n        text: text,\n        fill: labelModel.get('color') || getItemVisualColor(data, dataIndex) || '#000',\n        align: 'left',\n        verticalAlign: 'top',\n        opacity: retrieve.firstNotNull(labelModel.get('opacity'), getItemVisualOpacity(data, dataIndex), 1)\n      })\n    });\n    var rect = textEl.getBoundingRect();\n    var lineHeight = 1.2;\n    rect.height *= lineHeight;\n\n    var coords = this._labelTextureSurface.add(textEl);\n\n    var textAlign = textAlignMap[position] || 'center';\n    var textVerticalAlign = textVerticalAlignMap[position] || 'bottom';\n\n    this._labelsMesh.geometry.addSprite(this.getLabelPosition(dataIndex, position, distance), [rect.width * dpr, rect.height * dpr], coords, textAlign, textVerticalAlign, this.getLabelDistance(dataIndex, position, distance) * dpr);\n  }\n\n  this._labelsMesh.material.set('uvScale', this._labelTextureSurface.getCoordsScale()); // var canvas = this._labelTextureSurface.getTexture().image;\n  // document.body.appendChild(canvas);\n  // canvas.style.cssText = 'position:absolute;z-index: 1000';\n  // Update image.\n\n\n  this._labelTextureSurface.getZr().refreshImmediately();\n\n  this._labelsMesh.geometry.convertToTypedArray();\n\n  this._labelsMesh.geometry.dirty();\n};\n\nLabelsBuilder.prototype.dispose = function () {\n  this._labelTextureSurface.dispose();\n};\n\nexport default LabelsBuilder;"]},"metadata":{},"sourceType":"module"}