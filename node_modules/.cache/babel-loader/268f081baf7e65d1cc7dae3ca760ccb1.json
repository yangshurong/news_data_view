{"ast":null,"code":"import Node from './Node';\nimport glenum from './core/glenum';\n/**\n * @constructor\n * @alias clay.Renderable\n * @extends clay.Node\n */\n\nvar Renderable = Node.extend(\n/** @lends clay.Renderable# */\n{\n  /**\n   * @type {clay.Material}\n   */\n  material: null,\n\n  /**\n   * @type {clay.Geometry}\n   */\n  geometry: null,\n\n  /**\n   * @type {number}\n   */\n  mode: glenum.TRIANGLES,\n  _renderInfo: null\n},\n/** @lends clay.Renderable.prototype */\n{\n  __program: null,\n\n  /**\n   * Group of received light.\n   */\n  lightGroup: 0,\n\n  /**\n   * Render order, Nodes with smaller value renders before nodes with larger values.\n   * @type {Number}\n   */\n  renderOrder: 0,\n\n  /**\n   * Used when mode is LINES, LINE_STRIP or LINE_LOOP\n   * @type {number}\n   */\n  // lineWidth: 1,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   */\n  culling: true,\n\n  /**\n   * Specify which side of polygon will be culled.\n   * Possible values:\n   *  + {@link clay.Renderable.BACK}\n   *  + {@link clay.Renderable.FRONT}\n   *  + {@link clay.Renderable.FRONT_AND_BACK}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/cullFace\n   * @type {number}\n   */\n  cullFace: glenum.BACK,\n\n  /**\n   * Specify which side is front face.\n   * Possible values:\n   *  + {@link clay.Renderable.CW}\n   *  + {@link clay.Renderable.CCW}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/frontFace\n   * @type {number}\n   */\n  frontFace: glenum.CCW,\n\n  /**\n   * If enable software frustum culling\n   * @type {boolean}\n   */\n  frustumCulling: true,\n\n  /**\n   * @type {boolean}\n   */\n  receiveShadow: true,\n\n  /**\n   * @type {boolean}\n   */\n  castShadow: true,\n\n  /**\n   * @type {boolean}\n   */\n  ignorePicking: false,\n\n  /**\n   * @type {boolean}\n   */\n  ignorePreZ: false,\n\n  /**\n   * @type {boolean}\n   */\n  ignoreGBuffer: false,\n\n  /**\n   * @return {boolean}\n   */\n  isRenderable: function isRenderable() {\n    // TODO Shader ?\n    return this.geometry && this.material && this.material.shader && !this.invisible && this.geometry.vertexCount > 0;\n  },\n\n  /**\n   * Before render hook\n   * @type {Function}\n   */\n  beforeRender: function beforeRender(_gl) {},\n\n  /**\n   * Before render hook\n   * @type {Function}\n   */\n  afterRender: function afterRender(_gl, renderStat) {},\n  getBoundingBox: function getBoundingBox(filter, out) {\n    out = Node.prototype.getBoundingBox.call(this, filter, out);\n\n    if (this.geometry && this.geometry.boundingBox) {\n      out.union(this.geometry.boundingBox);\n    }\n\n    return out;\n  },\n\n  /**\n   * Clone a new renderable\n   * @function\n   * @return {clay.Renderable}\n   */\n  clone: function () {\n    var properties = ['castShadow', 'receiveShadow', 'mode', 'culling', 'cullFace', 'frontFace', 'frustumCulling', 'renderOrder', 'lineWidth', 'ignorePicking', 'ignorePreZ', 'ignoreGBuffer'];\n    return function () {\n      var renderable = Node.prototype.clone.call(this);\n      renderable.geometry = this.geometry;\n      renderable.material = this.material;\n\n      for (var i = 0; i < properties.length; i++) {\n        var name = properties[i]; // Try not to overwrite the prototype property\n\n        if (renderable[name] !== this[name]) {\n          renderable[name] = this[name];\n        }\n      }\n\n      return renderable;\n    };\n  }()\n});\n/**\n * @type {number}\n */\n\nRenderable.POINTS = glenum.POINTS;\n/**\n * @type {number}\n */\n\nRenderable.LINES = glenum.LINES;\n/**\n * @type {number}\n */\n\nRenderable.LINE_LOOP = glenum.LINE_LOOP;\n/**\n * @type {number}\n */\n\nRenderable.LINE_STRIP = glenum.LINE_STRIP;\n/**\n * @type {number}\n */\n\nRenderable.TRIANGLES = glenum.TRIANGLES;\n/**\n * @type {number}\n */\n\nRenderable.TRIANGLE_STRIP = glenum.TRIANGLE_STRIP;\n/**\n * @type {number}\n */\n\nRenderable.TRIANGLE_FAN = glenum.TRIANGLE_FAN;\n/**\n * @type {number}\n */\n\nRenderable.BACK = glenum.BACK;\n/**\n * @type {number}\n */\n\nRenderable.FRONT = glenum.FRONT;\n/**\n * @type {number}\n */\n\nRenderable.FRONT_AND_BACK = glenum.FRONT_AND_BACK;\n/**\n * @type {number}\n */\n\nRenderable.CW = glenum.CW;\n/**\n * @type {number}\n */\n\nRenderable.CCW = glenum.CCW;\nexport default Renderable;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_claygl@1.3.0@claygl/src/Renderable.js"],"names":["Node","glenum","Renderable","extend","material","geometry","mode","TRIANGLES","_renderInfo","__program","lightGroup","renderOrder","culling","cullFace","BACK","frontFace","CCW","frustumCulling","receiveShadow","castShadow","ignorePicking","ignorePreZ","ignoreGBuffer","isRenderable","shader","invisible","vertexCount","beforeRender","_gl","afterRender","renderStat","getBoundingBox","filter","out","prototype","call","boundingBox","union","clone","properties","renderable","i","length","name","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","FRONT","FRONT_AND_BACK","CW"],"mappings":"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","sourcesContent":["import Node from './Node';\nimport glenum from './core/glenum';\n\n/**\n * @constructor\n * @alias clay.Renderable\n * @extends clay.Node\n */\nvar Renderable = Node.extend(/** @lends clay.Renderable# */ {\n    /**\n     * @type {clay.Material}\n     */\n    material: null,\n\n    /**\n     * @type {clay.Geometry}\n     */\n    geometry: null,\n\n    /**\n     * @type {number}\n     */\n    mode: glenum.TRIANGLES,\n\n    _renderInfo: null\n},\n/** @lends clay.Renderable.prototype */\n{\n\n    __program: null,\n\n    /**\n     * Group of received light.\n     */\n    lightGroup: 0,\n    /**\n     * Render order, Nodes with smaller value renders before nodes with larger values.\n     * @type {Number}\n     */\n    renderOrder: 0,\n\n    /**\n     * Used when mode is LINES, LINE_STRIP or LINE_LOOP\n     * @type {number}\n     */\n    // lineWidth: 1,\n\n    /**\n     * If enable culling\n     * @type {boolean}\n     */\n    culling: true,\n    /**\n     * Specify which side of polygon will be culled.\n     * Possible values:\n     *  + {@link clay.Renderable.BACK}\n     *  + {@link clay.Renderable.FRONT}\n     *  + {@link clay.Renderable.FRONT_AND_BACK}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/cullFace\n     * @type {number}\n     */\n    cullFace: glenum.BACK,\n    /**\n     * Specify which side is front face.\n     * Possible values:\n     *  + {@link clay.Renderable.CW}\n     *  + {@link clay.Renderable.CCW}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/frontFace\n     * @type {number}\n     */\n    frontFace: glenum.CCW,\n\n    /**\n     * If enable software frustum culling\n     * @type {boolean}\n     */\n    frustumCulling: true,\n    /**\n     * @type {boolean}\n     */\n    receiveShadow: true,\n    /**\n     * @type {boolean}\n     */\n    castShadow: true,\n    /**\n     * @type {boolean}\n     */\n    ignorePicking: false,\n    /**\n     * @type {boolean}\n     */\n    ignorePreZ: false,\n\n    /**\n     * @type {boolean}\n     */\n    ignoreGBuffer: false,\n\n    /**\n     * @return {boolean}\n     */\n    isRenderable: function() {\n        // TODO Shader ?\n        return this.geometry && this.material && this.material.shader && !this.invisible\n            && this.geometry.vertexCount > 0;\n    },\n\n    /**\n     * Before render hook\n     * @type {Function}\n     */\n    beforeRender: function (_gl) {},\n\n    /**\n     * Before render hook\n     * @type {Function}\n     */\n    afterRender: function (_gl, renderStat) {},\n\n    getBoundingBox: function (filter, out) {\n        out = Node.prototype.getBoundingBox.call(this, filter, out);\n        if (this.geometry && this.geometry.boundingBox) {\n            out.union(this.geometry.boundingBox);\n        }\n\n        return out;\n    },\n\n    /**\n     * Clone a new renderable\n     * @function\n     * @return {clay.Renderable}\n     */\n    clone: (function() {\n        var properties = [\n            'castShadow', 'receiveShadow',\n            'mode', 'culling', 'cullFace', 'frontFace',\n            'frustumCulling',\n            'renderOrder', 'lineWidth',\n            'ignorePicking', 'ignorePreZ', 'ignoreGBuffer'\n        ];\n        return function() {\n            var renderable = Node.prototype.clone.call(this);\n\n            renderable.geometry = this.geometry;\n            renderable.material = this.material;\n\n            for (var i = 0; i < properties.length; i++) {\n                var name = properties[i];\n                // Try not to overwrite the prototype property\n                if (renderable[name] !== this[name]) {\n                    renderable[name] = this[name];\n                }\n            }\n\n            return renderable;\n        };\n    })()\n});\n\n/**\n * @type {number}\n */\nRenderable.POINTS = glenum.POINTS;\n/**\n * @type {number}\n */\nRenderable.LINES = glenum.LINES;\n/**\n * @type {number}\n */\nRenderable.LINE_LOOP = glenum.LINE_LOOP;\n/**\n * @type {number}\n */\nRenderable.LINE_STRIP = glenum.LINE_STRIP;\n/**\n * @type {number}\n */\nRenderable.TRIANGLES = glenum.TRIANGLES;\n/**\n * @type {number}\n */\nRenderable.TRIANGLE_STRIP = glenum.TRIANGLE_STRIP;\n/**\n * @type {number}\n */\nRenderable.TRIANGLE_FAN = glenum.TRIANGLE_FAN;\n/**\n * @type {number}\n */\nRenderable.BACK = glenum.BACK;\n/**\n * @type {number}\n */\nRenderable.FRONT = glenum.FRONT;\n/**\n * @type {number}\n */\nRenderable.FRONT_AND_BACK = glenum.FRONT_AND_BACK;\n/**\n * @type {number}\n */\nRenderable.CW = glenum.CW;\n/**\n * @type {number}\n */\nRenderable.CCW = glenum.CCW;\n\nexport default Renderable;\n"]},"metadata":{},"sourceType":"module"}