{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"../../node_modules/echarts/map/js/china.js\";\nexport default {\n  data: function data() {\n    return {\n      list: [{\n        warnname: \"提交广告\",\n        standard: '2017'\n      }, {\n        warnname: \"审核通过\",\n        standard: \"2018\"\n      }, {\n        warnname: \"投放\",\n        standard: \"2019\"\n      }, {\n        warnname: \"结束投放\",\n        standard: \"2020\"\n      }],\n      dataList: [{\n        name: \"南海诸岛\",\n        value: 0\n      }, {\n        name: '北京',\n        value: this.randomValue()\n      }, {\n        name: '天津',\n        value: this.randomValue()\n      }, {\n        name: '上海',\n        value: this.randomValue()\n      }, {\n        name: '重庆',\n        value: this.randomValue()\n      }, {\n        name: '河北',\n        value: this.randomValue()\n      }, {\n        name: '河南',\n        value: this.randomValue()\n      }, {\n        name: '云南',\n        value: this.randomValue()\n      }, {\n        name: '辽宁',\n        value: this.randomValue()\n      }, {\n        name: '黑龙江',\n        value: this.randomValue()\n      }, {\n        name: '湖南',\n        value: this.randomValue()\n      }, {\n        name: '安徽',\n        value: this.randomValue()\n      }, {\n        name: '山东',\n        value: this.randomValue()\n      }, {\n        name: '新疆',\n        value: this.randomValue()\n      }, {\n        name: '江苏',\n        value: this.randomValue()\n      }, {\n        name: '浙江',\n        value: this.randomValue()\n      }, {\n        name: '江西',\n        value: this.randomValue()\n      }, {\n        name: '湖北',\n        value: this.randomValue()\n      }, {\n        name: '广西',\n        value: this.randomValue()\n      }, {\n        name: '甘肃',\n        value: this.randomValue()\n      }, {\n        name: '山西',\n        value: this.randomValue()\n      }, {\n        name: '内蒙古',\n        value: this.randomValue()\n      }, {\n        name: '陕西',\n        value: this.randomValue()\n      }, {\n        name: '吉林',\n        value: this.randomValue()\n      }, {\n        name: '福建',\n        value: this.randomValue()\n      }, {\n        name: '贵州',\n        value: this.randomValue()\n      }, {\n        name: '广东',\n        value: this.randomValue()\n      }, {\n        name: '青海',\n        value: this.randomValue()\n      }, {\n        name: '西藏',\n        value: this.randomValue()\n      }, {\n        name: '四川',\n        value: this.randomValue()\n      }, {\n        name: '宁夏',\n        value: this.randomValue()\n      }, {\n        name: '海南',\n        value: this.randomValue()\n      }, {\n        name: '台湾',\n        value: this.randomValue()\n      }, {\n        name: '香港',\n        value: this.randomValue()\n      }, {\n        name: '澳门',\n        value: this.randomValue()\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.layoutSize = \"150%\";\n    this.options = {\n      geo: {\n        map: \"china\",\n        aspectScale: 1,\n        layoutCenter: [\"50%\", \"50%\"],\n        //地图位置\n        layoutSize: this.layoutSize,\n        label: {\n          normal: {\n            show: false\n          },\n          emphasis: {\n            show: false\n          }\n        },\n        itemStyle: {\n          normal: {\n            shadowColor: \"#276fce\",\n            shadowOffsetX: 0,\n            shadowOffsetY: 15,\n            opacity: 0.5\n          },\n          emphasis: {\n            areaColor: \"#276fce\"\n          }\n        }\n      },\n      series: [// 常规地图\n      {\n        type: \"map\",\n        mapType: \"china\",\n        aspectScale: 1,\n        layoutCenter: [\"50%\", \"50%\"],\n        //地图位置\n        layoutSize: this.layoutSize,\n        zoom: 1,\n        //当前视角的缩放比例\n        // roam: true, //是否开启平游或缩放\n        scaleLimit: {\n          //滚轮缩放的极限控制\n          min: 1,\n          max: 2\n        },\n        label: {\n          normal: {\n            show: true,\n            textStyle: {\n              color: \"#FFFFFF\",\n              fontSize: 18\n            }\n          },\n          emphasis: {\n            show: true,\n            textStyle: {\n              color: \"#FFFFFF\",\n              fontSize: 18\n            }\n          }\n        },\n        itemStyle: {\n          normal: {\n            areaColor: \"#0c274b\",\n            borderColor: \"#1cccff\",\n            borderWidth: 1.5\n          },\n          emphasis: {\n            areaColor: \"#02102b\"\n          }\n        }\n      }]\n    };\n    console.log(this.$refs.myEchart);\n    this.myChart = this.$echarts.init(this.$refs.myEchart);\n    this.myChart.setOption(this.options); //echarts自适应\n    //window.onresize = this.myChart.resize;\n\n    var than = this; //绑定市区点击事件\n\n    this.myChart.on(\"click\", function (e) {\n      //防止重复点击\n      if (than.name == e.name) {\n        return false;\n      }\n\n      than.options.series[0].data[0].name = e.name;\n      than.myChart.setOption(than.options);\n      than.styles.left = e.event.event.offsetX - 132 + \"px\"; //-132 根据布局计算偏移量\n\n      than.styles.top = e.event.event.offsetY + 80 + \"px\"; //80根据布局计算偏移量\n\n      than.name = e.name; //请求后台接口获取对应数据 ---此处模拟\n\n      than.tabsChange(than.btn[0]);\n    }); //--------------------------------------处理时间轴\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.myChart) {\n      return;\n    }\n\n    this.myChart.dispose();\n    this.myChart = null;\n  },\n  methods: {\n    // 随机函数\n    randomValue: function randomValue() {\n      return Math.round(Math.random() * 1000);\n    }\n  }\n}; // 基于准备好的dom，初始化echarts实例","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACAA,MADA,kBACA;AACA;AACAC,aACA;AACAC,wBADA;AAEAC;AAFA,OADA,EAKA;AACAD,wBADA;AAEAC;AAFA,OALA,EASA;AACAD,sBADA;AAEAC;AAFA,OATA,EAaA;AACAD,wBADA;AAEAC;AAFA,OAbA,CADA;AAmBAC,iBACA;AAAAC;AAAAC;AAAA,OADA,EAEA;AAAAD;AAAAC;AAAA,OAFA,EAGA;AAAAD;AAAAC;AAAA,OAHA,EAIA;AAAAD;AAAAC;AAAA,OAJA,EAKA;AAAAD;AAAAC;AAAA,OALA,EAMA;AAAAD;AAAAC;AAAA,OANA,EAOA;AAAAD;AAAAC;AAAA,OAPA,EAQA;AAAAD;AAAAC;AAAA,OARA,EASA;AAAAD;AAAAC;AAAA,OATA,EAUA;AAAAD;AAAAC;AAAA,OAVA,EAWA;AAAAD;AAAAC;AAAA,OAXA,EAYA;AAAAD;AAAAC;AAAA,OAZA,EAaA;AAAAD;AAAAC;AAAA,OAbA,EAcA;AAAAD;AAAAC;AAAA,OAdA,EAeA;AAAAD;AAAAC;AAAA,OAfA,EAgBA;AAAAD;AAAAC;AAAA,OAhBA,EAiBA;AAAAD;AAAAC;AAAA,OAjBA,EAkBA;AAAAD;AAAAC;AAAA,OAlBA,EAmBA;AAAAD;AAAAC;AAAA,OAnBA,EAoBA;AAAAD;AAAAC;AAAA,OApBA,EAqBA;AAAAD;AAAAC;AAAA,OArBA,EAsBA;AAAAD;AAAAC;AAAA,OAtBA,EAuBA;AAAAD;AAAAC;AAAA,OAvBA,EAwBA;AAAAD;AAAAC;AAAA,OAxBA,EAyBA;AAAAD;AAAAC;AAAA,OAzBA,EA0BA;AAAAD;AAAAC;AAAA,OA1BA,EA2BA;AAAAD;AAAAC;AAAA,OA3BA,EA4BA;AAAAD;AAAAC;AAAA,OA5BA,EA6BA;AAAAD;AAAAC;AAAA,OA7BA,EA8BA;AAAAD;AAAAC;AAAA,OA9BA,EA+BA;AAAAD;AAAAC;AAAA,OA/BA,EAgCA;AAAAD;AAAAC;AAAA,OAhCA,EAiCA;AAAAD;AAAAC;AAAA,OAjCA,EAkCA;AAAAD;AAAAC;AAAA,OAlCA,EAmCA;AAAAD;AAAAC;AAAA,OAnCA;AAnBA;AA2DA,GA7DA;AA8DAC,SA9DA,qBA8DA;AACA;AACA;AACAC;AACAC,oBADA;AAEAC,sBAFA;AAGAC,oCAHA;AAGA;AACAC,mCAJA;AAKAC;AACAC;AACAC;AADA,WADA;AAIAC;AACAD;AADA;AAJA,SALA;AAaAE;AACAH;AACAI,kCADA;AAEAC,4BAFA;AAGAC,6BAHA;AAIAC;AAJA,WADA;AAOAL;AACAM;AADA;AAPA;AAbA,OADA;AA0BAC,eACA;AACA;AACAC,mBADA;AAEAC,wBAFA;AAGAf,sBAHA;AAIAC,oCAJA;AAIA;AACAC,mCALA;AAMAc,eANA;AAMA;AACA;AACAC;AACA;AACAC,gBAFA;AAGAC;AAHA,SARA;AAaAhB;AACAC;AACAC,sBADA;AAEAe;AACAC,8BADA;AAEAC;AAFA;AAFA,WADA;AAQAhB;AACAD,sBADA;AAEAe;AACAC,8BADA;AAEAC;AAFA;AAFA;AARA,SAbA;AA6BAf;AACAH;AACAQ,gCADA;AAEAW,kCAFA;AAGAC;AAHA,WADA;AAOAlB;AACAM;AADA;AAPA;AA7BA,OAFA;AA1BA;AAuEAa;AACA;AACA,yCA3EA,CA4EA;AACA;;AACA,oBA9EA,CA+EA;;AACA;AACA;AACA;AACA;AACA;;AACAC;AACAA;AACAA,4DAPA,CAOA;;AACAA,0DARA,CAQA;;AACAA,yBATA,CAUA;;AACAA;AACA,KAZA,EAhFA,CA8FA;AACA,GA7JA;AA8JAC,eA9JA,2BA8JA;AACA;AACA;AACA;;AACA;AACA;AACA,GApKA;AAqKAC;AACA;AACAC,eAFA,yBAEA;AACA;AACA;AAJA;AArKA,E,CA4KA","names":["data","list","warnname","standard","dataList","name","value","mounted","geo","map","aspectScale","layoutCenter","layoutSize","label","normal","show","emphasis","itemStyle","shadowColor","shadowOffsetX","shadowOffsetY","opacity","areaColor","series","type","mapType","zoom","scaleLimit","min","max","textStyle","color","fontSize","borderColor","borderWidth","console","than","beforeDestroy","methods","randomValue"],"sourceRoot":"src/components","sources":["MainPageRightMap.vue"],"sourcesContent":["<template>\r\n  <div class=\"h-3\">\r\n    <!--弹窗-->\r\n    <!-- <div class=\"layer\" ref=\"layer\" :style=\"styles\" v-if=\"layerList.length>0\">\r\n            <div class=\"content\">\r\n                <p>LPL夏季赛({{name}})</p>\r\n                <Row style=\"text-align: center;line-height: 22px;height: 24px;\">\r\n                    <Button style=\"margin-left:4px\" :type=\"item.selected?'warning':'info'\" size=\"small\" @click=\"tabsChange(item)\" v-for=\"(item,index) in btn\" :key=\"index\">{{item.name}}</Button>\r\n                </Row>\r\n                <Row style=\"text-align: center;padding-bottom: 20px;\">\r\n                    <Col span=\"8\" v-for=\"(item,index) in layerList\" :key=\"index\" class=\"col-item\">\r\n                        <div class=\"num\">{{item.circle}}</div>\r\n                        <div class=\"text\">{{item.text}}</div>\r\n                    </Col>\r\n                </Row>\r\n                <Spin fix style=\"background: rgba(0,0,0,0.5);font-size: 20px;\" v-if=\"loading\">\r\n                    <Icon type=\"ios-loading\" size=18 class=\"demo-spin-icon-load\"></Icon>\r\n                    <div>Loading</div>\r\n                </Spin>\r\n            </div>\r\n        </div> -->\r\n    <div ref=\"myEchart\" style=\"width: 1231px; height: 808px\"></div>\r\n    <div class=\"time_content\">\r\n      <div class=\"Timeline\">\r\n        <div class=\"timeaxis\">\r\n          <div v-for=\"(item, i) in list\" :key=\"i\">\r\n            <div class=\"timeaxis-box\">\r\n              <div\r\n                class=\"timeaxis-topText\"\r\n                :class=\"{ 'bd-empty': i == list.length - 1 }\"\r\n              >\r\n                <!-- <div class=\"text\">{{ item.warnname }}</div>\r\n                <div class=\"tiem\">2017-03-10</div> -->\r\n              </div>\r\n              <div class=\"circular\"></div>\r\n              <div class=\"timeaxis-bootomText\">\r\n                <div class=\"text\">{{ item.standard }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport \"../../node_modules/echarts/map/js/china.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      list: [\r\n        {\r\n          warnname: \"提交广告\",\r\n          standard:'2017'\r\n        },\r\n        {\r\n          warnname: \"审核通过\",\r\n          standard: \"2018\",\r\n        },\r\n        {\r\n          warnname: \"投放\",\r\n          standard: \"2019\",\r\n        },\r\n        {\r\n          warnname: \"结束投放\",\r\n          standard: \"2020\",\r\n        },\r\n      ],\r\n      dataList:[\r\n            {name:\"南海诸岛\",value:0},\r\n            {name: '北京', value: this.randomValue()},\r\n            {name: '天津', value: this.randomValue()},\r\n            {name: '上海', value: this.randomValue()},\r\n            {name: '重庆', value: this.randomValue()},\r\n            {name: '河北', value: this.randomValue()},\r\n            {name: '河南', value: this.randomValue()},\r\n            {name: '云南', value: this.randomValue()},\r\n            {name: '辽宁', value: this.randomValue()},\r\n            {name: '黑龙江', value: this.randomValue()},\r\n            {name: '湖南', value: this.randomValue()},\r\n            {name: '安徽', value: this.randomValue()},\r\n            {name: '山东', value: this.randomValue()},\r\n            {name: '新疆', value: this.randomValue()},\r\n            {name: '江苏', value: this.randomValue()},\r\n            {name: '浙江', value: this.randomValue()},\r\n            {name: '江西', value: this.randomValue()},\r\n            {name: '湖北', value: this.randomValue()},\r\n            {name: '广西', value: this.randomValue()},\r\n            {name: '甘肃', value: this.randomValue()},\r\n            {name: '山西', value: this.randomValue()},\r\n            {name: '内蒙古', value: this.randomValue()},\r\n            {name: '陕西', value: this.randomValue()},\r\n            {name: '吉林', value: this.randomValue()},\r\n            {name: '福建', value: this.randomValue()},\r\n            {name: '贵州', value: this.randomValue()},\r\n            {name: '广东', value: this.randomValue()},\r\n            {name: '青海', value: this.randomValue()},\r\n            {name: '西藏', value: this.randomValue()},\r\n            {name: '四川', value: this.randomValue()},\r\n            {name: '宁夏', value: this.randomValue()},\r\n            {name: '海南', value: this.randomValue()},\r\n            {name: '台湾', value: this.randomValue()},\r\n            {name: '香港', value: this.randomValue()},\r\n            {name: '澳门', value: this.randomValue()}\r\n        ]\r\n        \r\n        \r\n    };\r\n  },\r\n  mounted() {\r\n    this.layoutSize = \"150%\";\r\n    this.options = {\r\n      geo: {\r\n        map: \"china\",\r\n        aspectScale: 1,\r\n        layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n        layoutSize: this.layoutSize,\r\n        label: {\r\n          normal: {\r\n            show: false,\r\n          },\r\n          emphasis: {\r\n            show: false,\r\n          },\r\n        },\r\n        itemStyle: {\r\n          normal: {\r\n            shadowColor: \"#276fce\",\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 15,\r\n            opacity: 0.5,\r\n          },\r\n          emphasis: {\r\n            areaColor: \"#276fce\",\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        // 常规地图\r\n        {\r\n          type: \"map\",\r\n          mapType: \"china\",\r\n          aspectScale: 1,\r\n          layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n          layoutSize: this.layoutSize,\r\n          zoom: 1, //当前视角的缩放比例\r\n          // roam: true, //是否开启平游或缩放\r\n          scaleLimit: {\r\n            //滚轮缩放的极限控制\r\n            min: 1,\r\n            max: 2,\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n            emphasis: {\r\n              show: true,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              areaColor: \"#0c274b\",\r\n              borderColor: \"#1cccff\",\r\n              borderWidth: 1.5,\r\n            },\r\n\r\n            emphasis: {\r\n              areaColor: \"#02102b\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    console.log(this.$refs.myEchart);\r\n    this.myChart = this.$echarts.init(this.$refs.myEchart);\r\n    this.myChart.setOption(this.options);\r\n    //echarts自适应\r\n    //window.onresize = this.myChart.resize;\r\n    let than = this;\r\n    //绑定市区点击事件\r\n    this.myChart.on(\"click\", function (e) {\r\n      //防止重复点击\r\n      if (than.name == e.name) {\r\n        return false;\r\n      }\r\n      than.options.series[0].data[0].name = e.name;\r\n      than.myChart.setOption(than.options);\r\n      than.styles.left = e.event.event.offsetX - 132 + \"px\"; //-132 根据布局计算偏移量\r\n      than.styles.top = e.event.event.offsetY + 80 + \"px\"; //80根据布局计算偏移量\r\n      than.name = e.name;\r\n      //请求后台接口获取对应数据 ---此处模拟\r\n      than.tabsChange(than.btn[0]);\r\n    });\r\n\r\n    //--------------------------------------处理时间轴\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.myChart) {\r\n      return;\r\n    }\r\n    this.myChart.dispose();\r\n    this.myChart = null;\r\n  },\r\n  methods:{\r\n    // 随机函数\r\n    randomValue() {\r\n      return Math.round(Math.random()*1000);\r\n    }\r\n  }\r\n};\r\n// 基于准备好的dom，初始化echarts实例\r\n</script>\r\n<style lang=\"less\">\r\n/*懒加载图标动画*/\r\n.h-3 {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  .time_content {\r\n    width: 1231px;\r\n    height: 0px;\r\n    font-size: 20px;\r\n    .Timeline {\r\n      width: 100%;\r\n      height: 100%;\r\n      margin-top: 40px;\r\n      .timeaxis {\r\n        height: 50px;\r\n        margin-top: 80px;\r\n        margin-left: 4em;\r\n        display: flex;\r\n        .timeaxis-box {\r\n          width: 430px;\r\n          .circular {\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 50%;\r\n            background: #165dff;\r\n            //margin-bottom: -10px;\r\n            position: relative;\r\n            top: -10px;\r\n            box-shadow: 0px 0px 5px 5px #fff;\r\n          }\r\n          .circular:hover {\r\n            width: 30px;\r\n            height: 30px;\r\n            border-radius: 50%;\r\n            background: #ff1616;\r\n            //margin-bottom: -10px;\r\n            position: relative;\r\n            top: -15px;\r\n            left: -5px;\r\n            box-shadow: 0px 0px 5px 5px #fff;\r\n          }\r\n          .timeaxis-topText {\r\n            border-bottom: 5px solid #c9cdd4; //时间轴线的宽度和颜色\r\n            position: relative;\r\n          }\r\n          .bd-empty {\r\n            border: 0;\r\n            margin-top: 5px;\r\n          }\r\n          .timeaxis-bootomText {\r\n            position: relative;\r\n            .text {\r\n              position: absolute;\r\n              top: 10px;\r\n              font-size: 28px;\r\n              left: -20px;\r\n              color: #fff;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.demo-spin-icon-load {\r\n  animation: ani-demo-spin 1s linear infinite;\r\n}\r\n@keyframes ani-demo-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  50% {\r\n    transform: rotate(180deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n/*弹窗样式*/\r\n.layer {\r\n  position: absolute;\r\n  left: 400px;\r\n  top: 300px;\r\n  z-index: 100;\r\n  width: 360px;\r\n  height: 280px;\r\n  background: rgba(10, 22, 64, 0.9);\r\n  border-radius: 5px;\r\n  border: 1px solid #122253;\r\n  transform: translate(-100%, -100%);\r\n  .content {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    text-align: center;\r\n    p {\r\n      font-size: 20px;\r\n      color: #fff;\r\n      line-height: 50px;\r\n    }\r\n    .col-item {\r\n      height: 41px;\r\n      margin-top: 20px;\r\n      border-right: 1px solid #172353;\r\n      .num {\r\n        color: #ebf8ff;\r\n        font-size: 18px;\r\n      }\r\n      .text {\r\n        color: #507ebc;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n  .content::after {\r\n    content: \"\";\r\n    width: 120px;\r\n    height: 2px;\r\n    background: #ffccff;\r\n    position: absolute;\r\n    right: -120px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n  .content::before {\r\n    content: \"\";\r\n    width: 2px;\r\n    height: 80px;\r\n    background: #ffb800;\r\n    position: absolute;\r\n    right: -134px;\r\n    top: 136px;\r\n    transform: rotateZ(-20deg);\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}