{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.join.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport test_mind_data from \"../assets/Shi/test_mind_data.json\";\nimport word_cloud_data from \"../assets/Sheng/item_data/word_cloud.json\";\nexport default {\n  data: function data() {\n    return {\n      cur_info: {\n        year: \"2017\",\n        title: \"政治\",\n        region: \"青岛\",\n        region_data: \"\"\n      },\n      time_select_value: 0,\n      rank_speed_list: [{\n        rank: \"排名\",\n        title: \"主题\",\n        speed: \"响应时间\"\n      }, {\n        rank: 1,\n        title: \"政治\",\n        speed: 0.2\n      }, {\n        rank: \"2\",\n        title: \"民生\",\n        speed: 1.9\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.set_region_map();\n    this.set_policy_detail();\n    this.set_wordcloud();\n    this.set_num_tag();\n  },\n  methods: {\n    get_time_change: function get_time_change(new_time) {\n      //时间变化后\n      console.log(new_time.toString()); //this.cur_info.year = new_time.toString();\n      //this.set_num_tag();\n      //this.set_speed_tag();\n    },\n    set_region_map: function set_region_map() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _data, scar_data, i, x, y, z, layoutSize, aspectScale, speed_region_option;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$axios({\n                  url: \"https://geo.datav.aliyun.com/areas_v3/bound/370200_full.json\",\n                  method: \"get\"\n                }).then(function (res) {\n                  _this.cur_info.region_data = res.data;\n                });\n\n              case 2:\n                _this.$echarts.registerMap(_this.cur_info.region, _this.cur_info.region_data);\n\n                _data = _this.cur_info.region_data.features, scar_data = [];\n\n                for (i in _data) {\n                  x = _data[i].properties.center[0], y = _data[i].properties.center[1], z = _data[i].properties.name;\n                  scar_data.push([x, y, z]);\n                }\n\n                _this.speed_region_Chart = _this.$echarts.init(_this.$refs.region);\n                layoutSize = \"600\", aspectScale = 687 / 415;\n                speed_region_option = {\n                  geo: {\n                    map: _this.cur_info.region,\n                    z: 2,\n                    aspectScale: aspectScale,\n                    layoutCenter: [\"50%\", \"50%\"],\n                    //地图位置\n                    layoutSize: layoutSize,\n                    zoom: 1,\n                    //当前视角的缩放比例\n                    scaleLimit: {\n                      //滚轮缩放的极限控制\n                      min: 1,\n                      max: 2\n                    },\n                    label: {\n                      normal: {\n                        show: false,\n                        textStyle: {\n                          color: \"#FFFFFF\",\n                          fontSize: 18\n                        }\n                      },\n                      emphasis: {\n                        show: false,\n                        textStyle: {\n                          color: \"#FFFFFF\",\n                          fontSize: 18\n                        }\n                      }\n                    },\n                    itemStyle: {\n                      normal: {\n                        shadowColor: \"rgba(21,55,112,255)\",\n                        shadowOffsetX: 10,\n                        shadowOffsetY: 10,\n                        areaColor: \"rgba(24,48,82,255)\",\n                        borderColor: \"rgba(84,113,166)\",\n                        borderWidth: 1.5\n                      },\n                      emphasis: {\n                        areaColor: \"rgba(7,69,162)\"\n                      }\n                    }\n                  },\n                  series: [{\n                    type: \"map\",\n                    mapType: _this.cur_info.region,\n                    aspectScale: aspectScale,\n                    zoom: 1,\n                    layoutSize: layoutSize,\n                    z: 1,\n                    layoutCenter: [\"50%\", \"50%\"],\n                    //地图位置\n                    label: {\n                      normal: {\n                        show: false\n                      },\n                      emphasis: {\n                        show: false\n                      }\n                    },\n                    itemStyle: {\n                      normal: {\n                        shadowColor: \"rgba(22,57,89,255)\",\n                        shadowOffsetX: 20,\n                        shadowOffsetY: 20,\n                        //areaColor: \"rgba(22,57,89,255)\",\n                        borderColor: \"#4a75ff\",\n                        borderWidth: 7\n                      },\n                      emphasis: {\n                        areaColor: \"rgba(22,57,89,0)\"\n                      }\n                    }\n                  }]\n                };\n\n                _this.speed_region_Chart.setOption(speed_region_option);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    set_policy_detail: function set_policy_detail() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var option;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                option = {\n                  tooltip: {\n                    trigger: \"item\",\n                    triggerOn: \"mousemove\"\n                  },\n                  series: [{\n                    type: \"tree\",\n                    data: [test_mind_data],\n                    top: \"1%\",\n                    left: \"7%\",\n                    bottom: \"1%\",\n                    right: \"20%\",\n                    symbolSize: 10,\n                    label: {\n                      position: \"left\",\n                      verticalAlign: \"middle\",\n                      align: \"right\",\n                      fontSize: 10,\n                      color: \"#FFFFFF\"\n                    },\n                    leaves: {\n                      label: {\n                        position: \"right\",\n                        verticalAlign: \"middle\",\n                        align: \"left\"\n                      }\n                    },\n                    emphasis: {\n                      focus: \"ancestor\"\n                    },\n                    expandAndCollapse: true,\n                    animationDuration: 550,\n                    animationDurationUpdate: 750\n                  }]\n                };\n                _this2.detail_chart = _this2.$echarts.init(_this2.$refs.mind);\n\n                _this2.detail_chart.setOption(option);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    set_wordcloud: function set_wordcloud() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var maskImage;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //-------------------------set wordcloud\n                _this3.word_cloud_Chart = _this3.$echarts.init(_this3.$refs.word_cloud);\n                maskImage = new Image();\n                maskImage.src = word_cloud_data.image;\n\n                _this3.word_cloud_Chart.setOption({\n                  series: [{\n                    type: \"wordCloud\",\n                    shape: \"circle\",\n                    keepAspect: false,\n                    left: \"center\",\n                    top: \"center\",\n                    width: \"70%\",\n                    height: \"70%\",\n                    right: null,\n                    bottom: null,\n                    //maskImage:maskImage,\n                    sizeRange: [12, 30],\n                    rotationRange: [-45, 45],\n                    rotationStep: 90,\n                    // 词间距，数值越小，间距越小，这里间距太小的话，会出现大词把小词套住的情况，比如一个大的口字，中间会有比较大的空隙，这时候他会把一些很小的字放在口字里面，这样的话，鼠标就无法选中里面的那个小字\n                    gridSize: 2,\n                    // 允许词太大的时候，超出画布的范围\n                    drawOutOfBound: false,\n                    // 布局的时候是否有动画\n                    layoutAnimation: false,\n                    textStyle: {\n                      fontWeight: \"bold\",\n                      color: function color() {\n                        return \"rgb(\" + [Math.round(Math.random() * 254), Math.round(Math.random() * 254), Math.round(Math.random() * 254)].join(\",\") + \")\";\n                      }\n                    },\n                    emphasis: {\n                      focus: \"self\",\n                      textStyle: {\n                        textShadowBlur: 10,\n                        textShadowColor: \"#333\"\n                      }\n                    },\n                    // Data is an array. Each array item must have name and value property.\n                    data: word_cloud_data.value\n                  }]\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    set_num_tag: function set_num_tag() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var dataAxis, data, yMax, dataShadow, i, echarts, option, zoomSize, that;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // prettier-ignore\n                dataAxis = ['政治', '经济', '资源', '生产', '文化', '民生']; // prettier-ignore\n\n                data = [10, 20, 16, 30, 41, 55];\n                yMax = 500;\n                dataShadow = [];\n\n                for (i = 0; i < data.length; i++) {\n                  dataShadow.push(yMax);\n                }\n\n                echarts = _this4.$echarts;\n                option = {\n                  //title: {\n                  //  text: \"特性示例：渐变色 阴影 点击缩放\",\n                  //  subtext: \"Feature Sample: Gradient Color, Shadow, Click Zoom\",\n                  //},\n                  xAxis: {\n                    name: \"主题\",\n                    data: dataAxis,\n                    axisLabel: {\n                      inside: true,\n                      color: \"#FFFFFF\"\n                    },\n                    axisTick: {\n                      show: false\n                    },\n                    axisLine: {\n                      show: false\n                    },\n                    nameTextStyle: {\n                      color: \"rgba(255,255,255)\" //fontSize:\"20px\"\n\n                    },\n                    z: 10\n                  },\n                  yAxis: {\n                    name: \"个数\",\n                    axisLine: {\n                      show: false\n                    },\n                    axisTick: {\n                      show: false\n                    },\n                    nameTextStyle: {\n                      color: \"rgba(255,255,255)\" //fontSize:\"20px\"\n\n                    },\n                    axisLabel: {\n                      textStyle: {\n                        color: \"rgba(255,255,255)\"\n                      }\n                    }\n                  },\n                  dataZoom: [{\n                    type: \"inside\"\n                  }],\n                  series: [{\n                    type: \"bar\",\n                    showBackground: true,\n                    itemStyle: {\n                      color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                        offset: 0,\n                        color: \"#83bff6\"\n                      }, {\n                        offset: 0.5,\n                        color: \"#188df0\"\n                      }, {\n                        offset: 1,\n                        color: \"#188df0\"\n                      }])\n                    },\n                    emphasis: {\n                      itemStyle: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                          offset: 0,\n                          color: \"#2378f7\"\n                        }, {\n                          offset: 0.7,\n                          color: \"#2378f7\"\n                        }, {\n                          offset: 1,\n                          color: \"#83bff6\"\n                        }])\n                      }\n                    },\n                    data: data\n                  }]\n                }; // Enable data zoom when user click bar.\n\n                zoomSize = 3;\n                _this4.num_tag_chart = _this4.$echarts.init(_this4.$refs.tag_num);\n                that = _this4;\n\n                _this4.num_tag_chart.on(\"click\", function (params) {\n                  var h = parseInt(Math.max(params.dataIndex - zoomSize / 2, 0));\n                  var t = parseInt(Math.min(params.dataIndex + zoomSize / 2, data.length - 1));\n                  console.log(h, t);\n                  that.num_tag_chart.dispatchAction({\n                    type: \"dataZoom\",\n                    startValue: dataAxis[h],\n                    endValue: dataAxis[t]\n                  });\n                });\n\n                _this4.num_tag_chart.setOption(option);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.speed_region_Chart) {\n      this.speed_region_Chart.dispose();\n      this.speed_region_Chart = null;\n    }\n\n    if (this.detail_chart) {\n      this.detail_chart.dispose();\n      this.detail_chart = null;\n    }\n\n    if (this.word_cloud_Chart) {\n      this.word_cloud_Chart.dispose();\n      this.word_cloud_Chart = null;\n    }\n\n    if (this.num_tag_chart) {\n      this.num_tag_chart.dispose();\n      this.num_tag_chart = null;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","cur_info","year","title","region","region_data","time_select_value","rank_speed_list","rank","speed","mounted","methods","get_time_change","new_time","console","set_region_map","url","method","then","_data","scar_data","x","y","z","layoutSize","aspectScale","speed_region_option","geo","map","layoutCenter","zoom","scaleLimit","min","max","label","normal","show","textStyle","color","fontSize","emphasis","itemStyle","shadowColor","shadowOffsetX","shadowOffsetY","areaColor","borderColor","borderWidth","series","type","mapType","set_policy_detail","option","tooltip","trigger","triggerOn","top","left","bottom","right","symbolSize","position","verticalAlign","align","leaves","focus","expandAndCollapse","animationDuration","animationDurationUpdate","set_wordcloud","maskImage","shape","keepAspect","width","height","sizeRange","rotationRange","rotationStep","gridSize","drawOutOfBound","layoutAnimation","fontWeight","Math","join","textShadowBlur","textShadowColor","set_num_tag","dataAxis","yMax","dataShadow","echarts","xAxis","name","axisLabel","inside","axisTick","axisLine","nameTextStyle","yAxis","dataZoom","showBackground","offset","zoomSize","that","startValue","endValue","beforeDestroy"],"sourceRoot":"src/views","sources":["ShiView.vue"],"sourcesContent":["<template>\r\n  <div class=\"ShiBackground\">\r\n    <div class=\"title\"></div>\r\n    <div class=\"content\">\r\n      <div class=\"policy_content\"></div>\r\n      <div class=\"news_content\">\r\n        <div class=\"map_chart\">\r\n          <div\r\n            ref=\"region\"\r\n            style=\"width: 100%; height: 100%; margin-left: 0px\"\r\n          ></div>\r\n        </div>\r\n        <div class=\"time\">\r\n          <div style=\"font-size: 18px; color: #ffffff; margin-bottom: 0px\">\r\n            2017\r\n          </div>\r\n          <el-slider\r\n            v-model=\"time_select_value\"\r\n            :max=\"2021\"\r\n            :min=\"2017\"\r\n            @change=\"get_time_change\"\r\n            :step=\"1\"\r\n            class=\"time_select\"\r\n          >\r\n          </el-slider>\r\n\r\n          <div style=\"font-size: 18px; color: #ffffff; margin-top: 0px\">\r\n            2021\r\n          </div>\r\n        </div>\r\n        <div class=\"mind\">\r\n          <div\r\n            ref=\"mind\"\r\n            style=\"width: 100%; height: 100%; margin-left: 0px\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"right\">\r\n        <div class=\"tag_num\">\r\n          <div\r\n            ref=\"tag_num\"\r\n            style=\"\r\n              width: 100%;\r\n              height: 100%;\r\n              margin-left: 0px;\r\n              margin-top: 30px;\r\n            \"\r\n          ></div>\r\n        </div>\r\n        <div class=\"wordCloud\">\r\n          <div\r\n            ref=\"word_cloud\"\r\n            style=\"width: 100%; height: 100%; margin-left: 0px\"\r\n          ></div>\r\n        </div>\r\n        <div class=\"rank_speed\">\r\n          <div\r\n            v-for=\"(item, i) in rank_speed_list\"\r\n            :key=\"i\"\r\n          >\r\n            <div class=\"list_item\"\r\n                :class=\"{ 'as_first': i !== 0 }\">\r\n              <div class=\"item_rank\">{{ item.rank }}</div>\r\n              <div class=\"item_title\"\r\n              :class=\"{ 'item_title_content': i !== 0 }\">{{ item.title }}</div>\r\n              <div class=\"item_speed\">{{ item.speed }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport test_mind_data from \"../assets/Shi/test_mind_data.json\";\r\nimport word_cloud_data from \"../assets/Sheng/item_data/word_cloud.json\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      cur_info: {\r\n        year: \"2017\",\r\n        title: \"政治\",\r\n        region: \"青岛\",\r\n        region_data: \"\",\r\n      },\r\n      time_select_value: 0,\r\n      rank_speed_list: [\r\n        {\r\n          rank: \"排名\",\r\n          title: \"主题\",\r\n          speed: \"响应时间\",\r\n        },\r\n        {\r\n          rank: 1,\r\n          title: \"政治\",\r\n          speed: 0.2,\r\n        },\r\n        {\r\n          rank: \"2\",\r\n          title: \"民生\",\r\n          speed: 1.9,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.set_region_map();\r\n    this.set_policy_detail();\r\n    this.set_wordcloud();\r\n    this.set_num_tag();\r\n  },\r\n  methods: {\r\n    get_time_change(new_time) {\r\n      //时间变化后\r\n      console.log(new_time.toString());\r\n      //this.cur_info.year = new_time.toString();\r\n      //this.set_num_tag();\r\n      //this.set_speed_tag();\r\n    },\r\n    async set_region_map() {\r\n      await this.$axios({\r\n        url: \"https://geo.datav.aliyun.com/areas_v3/bound/370200_full.json\",\r\n        method: \"get\",\r\n      }).then((res) => {\r\n        this.cur_info.region_data = res.data;\r\n      });\r\n      this.$echarts.registerMap(\r\n        this.cur_info.region,\r\n        this.cur_info.region_data\r\n      );\r\n      let _data = this.cur_info.region_data.features,\r\n        scar_data = [];\r\n      for (let i in _data) {\r\n        let x = _data[i].properties.center[0],\r\n          y = _data[i].properties.center[1],\r\n          z = _data[i].properties.name;\r\n        scar_data.push([x, y, z]);\r\n      }\r\n      this.speed_region_Chart = this.$echarts.init(this.$refs.region);\r\n      let layoutSize = \"600\",\r\n        aspectScale = 687 / 415;\r\n      let speed_region_option = {\r\n        geo: {\r\n          map: this.cur_info.region,\r\n          z: 2,\r\n          aspectScale: aspectScale,\r\n          layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n          layoutSize: layoutSize,\r\n          zoom: 1, //当前视角的缩放比例\r\n          scaleLimit: {\r\n            //滚轮缩放的极限控制\r\n            min: 1,\r\n            max: 2,\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: false,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n            emphasis: {\r\n              show: false,\r\n              textStyle: {\r\n                color: \"#FFFFFF\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              shadowColor: \"rgba(21,55,112,255)\",\r\n              shadowOffsetX: 10,\r\n              shadowOffsetY: 10,\r\n              areaColor: \"rgba(24,48,82,255)\",\r\n              borderColor: \"rgba(84,113,166)\",\r\n              borderWidth: 1.5,\r\n            },\r\n            emphasis: {\r\n              areaColor: \"rgba(7,69,162)\",\r\n            },\r\n          },\r\n        },\r\n\r\n        series: [\r\n          {\r\n            type: \"map\",\r\n            mapType: this.cur_info.region,\r\n            aspectScale: aspectScale,\r\n            zoom: 1,\r\n            layoutSize: layoutSize,\r\n            z: 1,\r\n            layoutCenter: [\"50%\", \"50%\"], //地图位置\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n              },\r\n              emphasis: {\r\n                show: false,\r\n              },\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                shadowColor: \"rgba(22,57,89,255)\",\r\n                shadowOffsetX: 20,\r\n                shadowOffsetY: 20,\r\n                //areaColor: \"rgba(22,57,89,255)\",\r\n                borderColor: \"#4a75ff\",\r\n                borderWidth: 7,\r\n              },\r\n              emphasis: {\r\n                areaColor: \"rgba(22,57,89,0)\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      this.speed_region_Chart.setOption(speed_region_option);\r\n    },\r\n    async set_policy_detail() {\r\n      let option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          triggerOn: \"mousemove\",\r\n        },\r\n        series: [\r\n          {\r\n            type: \"tree\",\r\n            data: [test_mind_data],\r\n            top: \"1%\",\r\n            left: \"7%\",\r\n            bottom: \"1%\",\r\n            right: \"20%\",\r\n            symbolSize: 10,\r\n            label: {\r\n              position: \"left\",\r\n              verticalAlign: \"middle\",\r\n              align: \"right\",\r\n              fontSize: 10,\r\n              color: \"#FFFFFF\",\r\n            },\r\n            leaves: {\r\n              label: {\r\n                position: \"right\",\r\n                verticalAlign: \"middle\",\r\n                align: \"left\",\r\n              },\r\n            },\r\n            emphasis: {\r\n              focus: \"ancestor\",\r\n            },\r\n            expandAndCollapse: true,\r\n            animationDuration: 550,\r\n            animationDurationUpdate: 750,\r\n          },\r\n        ],\r\n      };\r\n      this.detail_chart = this.$echarts.init(this.$refs.mind);\r\n      this.detail_chart.setOption(option);\r\n    },\r\n    async set_wordcloud() {\r\n      //-------------------------set wordcloud\r\n      this.word_cloud_Chart = this.$echarts.init(this.$refs.word_cloud);\r\n      var maskImage = new Image();\r\n      maskImage.src = word_cloud_data.image;\r\n      this.word_cloud_Chart.setOption({\r\n        series: [\r\n          {\r\n            type: \"wordCloud\",\r\n            shape: \"circle\",\r\n            keepAspect: false,\r\n            left: \"center\",\r\n            top: \"center\",\r\n            width: \"70%\",\r\n            height: \"70%\",\r\n            right: null,\r\n            bottom: null,\r\n            //maskImage:maskImage,\r\n            sizeRange: [12, 30],\r\n            rotationRange: [-45, 45],\r\n            rotationStep: 90,\r\n            // 词间距，数值越小，间距越小，这里间距太小的话，会出现大词把小词套住的情况，比如一个大的口字，中间会有比较大的空隙，这时候他会把一些很小的字放在口字里面，这样的话，鼠标就无法选中里面的那个小字\r\n            gridSize: 2,\r\n            // 允许词太大的时候，超出画布的范围\r\n            drawOutOfBound: false,\r\n            // 布局的时候是否有动画\r\n            layoutAnimation: false,\r\n            textStyle: {\r\n              fontWeight: \"bold\",\r\n              color: function () {\r\n                return (\r\n                  \"rgb(\" +\r\n                  [\r\n                    Math.round(Math.random() * 254),\r\n                    Math.round(Math.random() * 254),\r\n                    Math.round(Math.random() * 254),\r\n                  ].join(\",\") +\r\n                  \")\"\r\n                );\r\n              },\r\n            },\r\n            emphasis: {\r\n              focus: \"self\",\r\n              textStyle: {\r\n                textShadowBlur: 10,\r\n                textShadowColor: \"#333\",\r\n              },\r\n            },\r\n\r\n            // Data is an array. Each array item must have name and value property.\r\n            data: word_cloud_data.value,\r\n          },\r\n        ],\r\n      });\r\n    },\r\n    async set_num_tag() {\r\n      // prettier-ignore\r\n      let dataAxis = ['政治','经济','资源','生产','文化','民生'];\r\n      // prettier-ignore\r\n      let data = [10,20,16,30,41,55];\r\n      let yMax = 500;\r\n      let dataShadow = [];\r\n      for (let i = 0; i < data.length; i++) {\r\n        dataShadow.push(yMax);\r\n      }\r\n      let echarts = this.$echarts;\r\n      let option = {\r\n        //title: {\r\n        //  text: \"特性示例：渐变色 阴影 点击缩放\",\r\n        //  subtext: \"Feature Sample: Gradient Color, Shadow, Click Zoom\",\r\n        //},\r\n        xAxis: {\r\n          name: \"主题\",\r\n          data: dataAxis,\r\n          axisLabel: {\r\n            inside: true,\r\n            color: \"#FFFFFF\",\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n            //fontSize:\"20px\"\r\n          },\r\n\r\n          z: 10,\r\n        },\r\n        yAxis: {\r\n          name: \"个数\",\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255)\",\r\n            //fontSize:\"20px\"\r\n          },\r\n\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(255,255,255)\",\r\n            },\r\n          },\r\n        },\r\n        dataZoom: [\r\n          {\r\n            type: \"inside\",\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            type: \"bar\",\r\n            showBackground: true,\r\n            itemStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: \"#83bff6\" },\r\n                { offset: 0.5, color: \"#188df0\" },\r\n                { offset: 1, color: \"#188df0\" },\r\n              ]),\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  { offset: 0, color: \"#2378f7\" },\r\n                  { offset: 0.7, color: \"#2378f7\" },\r\n                  { offset: 1, color: \"#83bff6\" },\r\n                ]),\r\n              },\r\n            },\r\n            data: data,\r\n          },\r\n        ],\r\n      };\r\n      // Enable data zoom when user click bar.\r\n      const zoomSize = 3;\r\n      this.num_tag_chart = this.$echarts.init(this.$refs.tag_num);\r\n      let that = this;\r\n      this.num_tag_chart.on(\"click\", function (params) {\r\n        let h = parseInt(Math.max(params.dataIndex - zoomSize / 2, 0));\r\n        let t = parseInt(\r\n          Math.min(params.dataIndex + zoomSize / 2, data.length - 1)\r\n        );\r\n        console.log(h, t);\r\n        that.num_tag_chart.dispatchAction({\r\n          type: \"dataZoom\",\r\n          startValue: dataAxis[h],\r\n          endValue: dataAxis[t],\r\n        });\r\n      });\r\n      this.num_tag_chart.setOption(option);\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    if (this.speed_region_Chart) {\r\n      this.speed_region_Chart.dispose();\r\n      this.speed_region_Chart = null;\r\n    }\r\n    if (this.detail_chart) {\r\n      this.detail_chart.dispose();\r\n      this.detail_chart = null;\r\n    }\r\n    if (this.word_cloud_Chart) {\r\n      this.word_cloud_Chart.dispose();\r\n      this.word_cloud_Chart = null;\r\n    }\r\n    if (this.num_tag_chart) {\r\n      this.num_tag_chart.dispose();\r\n      this.num_tag_chart = null;\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.tag_num {\r\n  width: 100%;\r\n  height: 340px;\r\n  background: url(../assets/Shi/tag_num.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n}\r\n.wordCloud {\r\n  width: 100%;\r\n  margin-top: 12px;\r\n  height: 302px;\r\n  background: url(../assets/Shi/3dwordCloud.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n}\r\n.rank_speed {\r\n  width: 100%;\r\n  margin-top: 12px;\r\n  margin-left: 6px;\r\n  height: 327px;\r\n  background: url(../assets/Shi/rank_speed.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n  display: flex;\r\n  flex-flow: column;\r\n  .as_first {\r\n    margin-top: 91px;\r\n  }\r\n  .list_item {\r\n    display: flex;\r\n    width: 489px;\r\n    margin-left: 129px;\r\n    margin-top: 10px;\r\n    .item_rank {\r\n      color: rgba(255, 255, 255, 100);\r\n      font-size: 20px;\r\n      text-align: left;\r\n      font-weight: bold;\r\n      width: 110px;\r\n      //font-family: SourceHanSansSC-regular;\r\n    }\r\n    .item_title {\r\n      color: rgba(161, 158, 158, 100);\r\n      font-size: 20px;\r\n      width: 86px+31px;\r\n      text-align: left;\r\n    }\r\n    .item_speed {\r\n      color: rgba(161, 158, 158, 100);\r\n      font-size: 20px;\r\n    }\r\n    .item_title_content{\r\n      color: rgba(231, 158, 158, 100);\r\n      font-size: 20px;\r\n      width: 86px+31px;\r\n      text-align: left;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n.news_content {\r\n  .map_chart {\r\n    width: 686px;\r\n    height: 415px;\r\n    margin: 89px 0 0 22px;\r\n  }\r\n  .time {\r\n    width: 100%;\r\n    height: 28px;\r\n    margin-left: 83px;\r\n    margin-top: 0px;\r\n    display: flex;\r\n    .time_select {\r\n      width: 496px;\r\n      height: 28px;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n  .mind {\r\n    width: 538px;\r\n    height: 390px;\r\n    margin-left: 77px;\r\n  }\r\n  width: 735px;\r\n  height: 947px;\r\n  margin-top: 114px;\r\n  margin-left: 45px;\r\n  background: url(../assets/Shi/news_content.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n  display: flex;\r\n  flex-flow: column;\r\n}\r\n.policy_content {\r\n  width: 487px;\r\n  height: 997px;\r\n  margin-top: 43px;\r\n  margin-left: 54px;\r\n  background: url(../assets/Shi/policy_content.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  background-position: center top;\r\n}\r\n.right {\r\n  margin-top: 69px;\r\n  margin-left: 36px;\r\n  width: 567px;\r\n  height: 775px+287px;\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  justify-content: flex-start;\r\n}\r\n\r\n.ShiBackground {\r\n  width: 1936px;\r\n  height: 1083px;\r\n  background: url(../assets/Sheng/ShengBackground.PNG) no-repeat;\r\n  background-size: 100% 100%;\r\n  .title {\r\n    width: 1936px;\r\n    height: 343px;\r\n    background: url(../assets/main_page_title.png) no-repeat;\r\n    background-size: 100% 100%;\r\n    background-position: center top;\r\n  }\r\n  .content {\r\n    margin-top: -343px;\r\n    width: 1936px;\r\n    height: 1083px-343px;\r\n    display: flex;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}