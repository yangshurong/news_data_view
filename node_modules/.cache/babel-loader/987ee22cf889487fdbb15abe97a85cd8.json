{"ast":null,"code":"import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\n\nfunction EdgePass(opt) {\n  opt = opt || {};\n  this._edgePass = new Pass({\n    fragment: Shader.source('ecgl.edge')\n  });\n\n  this._edgePass.setUniform('normalTexture', opt.normalTexture);\n\n  this._edgePass.setUniform('depthTexture', opt.depthTexture);\n\n  this._targetTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer();\n\n  this._frameBuffer.attach(this._targetTexture);\n}\n\nEdgePass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var texture = this._targetTexture;\n  texture.width = width;\n  texture.height = height;\n  var frameBuffer = this._frameBuffer;\n  frameBuffer.bind(renderer);\n\n  this._edgePass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n\n  this._edgePass.setUniform('textureSize', [width, height]);\n\n  this._edgePass.setUniform('texture', sourceTexture);\n\n  this._edgePass.render(renderer);\n\n  frameBuffer.unbind(renderer);\n};\n\nEdgePass.prototype.getTargetTexture = function () {\n  return this._targetTexture;\n};\n\nEdgePass.prototype.setParameter = function (name, val) {\n  this._edgePass.setUniform(name, val);\n};\n\nEdgePass.prototype.dispose = function (renderer) {\n  this._targetTexture.dispose(renderer);\n\n  this._frameBuffer.dispose(renderer);\n};\n\nexport default EdgePass;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/effect/EdgePass.js"],"names":["Matrix4","Vector3","Texture2D","Texture","Pass","Shader","FrameBuffer","EdgePass","opt","_edgePass","fragment","source","setUniform","normalTexture","depthTexture","_targetTexture","type","HALF_FLOAT","_frameBuffer","attach","prototype","update","renderer","camera","sourceTexture","frame","width","getWidth","height","getHeight","texture","frameBuffer","bind","invProjectionMatrix","array","render","unbind","getTargetTexture","setParameter","name","val","dispose"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrBA,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACA,OAAKC,SAAL,GAAiB,IAAIL,IAAJ,CAAS;AACxBM,IAAAA,QAAQ,EAAEL,MAAM,CAACM,MAAP,CAAc,WAAd;AADc,GAAT,CAAjB;;AAIA,OAAKF,SAAL,CAAeG,UAAf,CAA0B,eAA1B,EAA2CJ,GAAG,CAACK,aAA/C;;AAEA,OAAKJ,SAAL,CAAeG,UAAf,CAA0B,cAA1B,EAA0CJ,GAAG,CAACM,YAA9C;;AAEA,OAAKC,cAAL,GAAsB,IAAIb,SAAJ,CAAc;AAClCc,IAAAA,IAAI,EAAEb,OAAO,CAACc;AADoB,GAAd,CAAtB;AAGA,OAAKC,YAAL,GAAoB,IAAIZ,WAAJ,EAApB;;AAEA,OAAKY,YAAL,CAAkBC,MAAlB,CAAyB,KAAKJ,cAA9B;AACD;;AAEDR,QAAQ,CAACa,SAAT,CAAmBC,MAAnB,GAA4B,UAAUC,QAAV,EAAoBC,MAApB,EAA4BC,aAA5B,EAA2CC,KAA3C,EAAkD;AAC5E,MAAIC,KAAK,GAAGJ,QAAQ,CAACK,QAAT,EAAZ;AACA,MAAIC,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAb;AACA,MAAIC,OAAO,GAAG,KAAKf,cAAnB;AACAe,EAAAA,OAAO,CAACJ,KAAR,GAAgBA,KAAhB;AACAI,EAAAA,OAAO,CAACF,MAAR,GAAiBA,MAAjB;AACA,MAAIG,WAAW,GAAG,KAAKb,YAAvB;AACAa,EAAAA,WAAW,CAACC,IAAZ,CAAiBV,QAAjB;;AAEA,OAAKb,SAAL,CAAeG,UAAf,CAA0B,eAA1B,EAA2CW,MAAM,CAACU,mBAAP,CAA2BC,KAAtE;;AAEA,OAAKzB,SAAL,CAAeG,UAAf,CAA0B,aAA1B,EAAyC,CAACc,KAAD,EAAQE,MAAR,CAAzC;;AAEA,OAAKnB,SAAL,CAAeG,UAAf,CAA0B,SAA1B,EAAqCY,aAArC;;AAEA,OAAKf,SAAL,CAAe0B,MAAf,CAAsBb,QAAtB;;AAEAS,EAAAA,WAAW,CAACK,MAAZ,CAAmBd,QAAnB;AACD,CAlBD;;AAoBAf,QAAQ,CAACa,SAAT,CAAmBiB,gBAAnB,GAAsC,YAAY;AAChD,SAAO,KAAKtB,cAAZ;AACD,CAFD;;AAIAR,QAAQ,CAACa,SAAT,CAAmBkB,YAAnB,GAAkC,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACrD,OAAK/B,SAAL,CAAeG,UAAf,CAA0B2B,IAA1B,EAAgCC,GAAhC;AACD,CAFD;;AAIAjC,QAAQ,CAACa,SAAT,CAAmBqB,OAAnB,GAA6B,UAAUnB,QAAV,EAAoB;AAC/C,OAAKP,cAAL,CAAoB0B,OAApB,CAA4BnB,QAA5B;;AAEA,OAAKJ,YAAL,CAAkBuB,OAAlB,CAA0BnB,QAA1B;AACD,CAJD;;AAMA,eAAef,QAAf","sourcesContent":["import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\n\nfunction EdgePass(opt) {\n  opt = opt || {};\n  this._edgePass = new Pass({\n    fragment: Shader.source('ecgl.edge')\n  });\n\n  this._edgePass.setUniform('normalTexture', opt.normalTexture);\n\n  this._edgePass.setUniform('depthTexture', opt.depthTexture);\n\n  this._targetTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer();\n\n  this._frameBuffer.attach(this._targetTexture);\n}\n\nEdgePass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var texture = this._targetTexture;\n  texture.width = width;\n  texture.height = height;\n  var frameBuffer = this._frameBuffer;\n  frameBuffer.bind(renderer);\n\n  this._edgePass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n\n  this._edgePass.setUniform('textureSize', [width, height]);\n\n  this._edgePass.setUniform('texture', sourceTexture);\n\n  this._edgePass.render(renderer);\n\n  frameBuffer.unbind(renderer);\n};\n\nEdgePass.prototype.getTargetTexture = function () {\n  return this._targetTexture;\n};\n\nEdgePass.prototype.setParameter = function (name, val) {\n  this._edgePass.setUniform(name, val);\n};\n\nEdgePass.prototype.dispose = function (renderer) {\n  this._targetTexture.dispose(renderer);\n\n  this._frameBuffer.dispose(renderer);\n};\n\nexport default EdgePass;"]},"metadata":{},"sourceType":"module"}