{"ast":null,"code":"import Camera from '../Camera';\n/**\n * @constructor clay.camera.Orthographic\n * @extends clay.Camera\n */\n\nvar Orthographic = Camera.extend(\n/** @lends clay.camera.Orthographic# */\n{\n  /**\n   * @type {number}\n   */\n  left: -1,\n\n  /**\n   * @type {number}\n   */\n  right: 1,\n\n  /**\n   * @type {number}\n   */\n  near: -1,\n\n  /**\n   * @type {number}\n   */\n  far: 1,\n\n  /**\n   * @type {number}\n   */\n  top: 1,\n\n  /**\n   * @type {number}\n   */\n  bottom: -1\n},\n/** @lends clay.camera.Orthographic.prototype */\n{\n  updateProjectionMatrix: function () {\n    this.projectionMatrix.ortho(this.left, this.right, this.bottom, this.top, this.near, this.far);\n  },\n  decomposeProjectionMatrix: function () {\n    var m = this.projectionMatrix.array;\n    this.left = (-1 - m[12]) / m[0];\n    this.right = (1 - m[12]) / m[0];\n    this.top = (1 - m[13]) / m[5];\n    this.bottom = (-1 - m[13]) / m[5];\n    this.near = -(-1 - m[14]) / m[10];\n    this.far = -(1 - m[14]) / m[10];\n  },\n\n  /**\n   * @return {clay.camera.Orthographic}\n   */\n  clone: function () {\n    var camera = Camera.prototype.clone.call(this);\n    camera.left = this.left;\n    camera.right = this.right;\n    camera.near = this.near;\n    camera.far = this.far;\n    camera.top = this.top;\n    camera.bottom = this.bottom;\n    return camera;\n  }\n});\nexport default Orthographic;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/claygl/src/camera/Orthographic.js"],"names":["Camera","Orthographic","extend","left","right","near","far","top","bottom","updateProjectionMatrix","projectionMatrix","ortho","decomposeProjectionMatrix","m","array","clone","camera","prototype","call"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAGD,MAAM,CAACE,MAAP;AACnB;AACA;AACI;AACJ;AACA;AACIC,EAAAA,IAAI,EAAE,CAAC,CAJX;;AAKI;AACJ;AACA;AACIC,EAAAA,KAAK,EAAE,CARX;;AASI;AACJ;AACA;AACIC,EAAAA,IAAI,EAAE,CAAC,CAZX;;AAaI;AACJ;AACA;AACIC,EAAAA,GAAG,EAAE,CAhBT;;AAiBI;AACJ;AACA;AACIC,EAAAA,GAAG,EAAE,CApBT;;AAqBI;AACJ;AACA;AACIC,EAAAA,MAAM,EAAE,CAAC;AAxBb,CAFmB;AA4BnB;AACA;AAEIC,EAAAA,sBAAsB,EAAE,YAAW;AAC/B,SAAKC,gBAAL,CAAsBC,KAAtB,CAA4B,KAAKR,IAAjC,EAAuC,KAAKC,KAA5C,EAAmD,KAAKI,MAAxD,EAAgE,KAAKD,GAArE,EAA0E,KAAKF,IAA/E,EAAqF,KAAKC,GAA1F;AACH,GAJL;AAMIM,EAAAA,yBAAyB,EAAE,YAAY;AACnC,QAAIC,CAAC,GAAG,KAAKH,gBAAL,CAAsBI,KAA9B;AACA,SAAKX,IAAL,GAAY,CAAC,CAAC,CAAD,GAAKU,CAAC,CAAC,EAAD,CAAP,IAAeA,CAAC,CAAC,CAAD,CAA5B;AACA,SAAKT,KAAL,GAAa,CAAC,IAAIS,CAAC,CAAC,EAAD,CAAN,IAAcA,CAAC,CAAC,CAAD,CAA5B;AACA,SAAKN,GAAL,GAAW,CAAC,IAAIM,CAAC,CAAC,EAAD,CAAN,IAAcA,CAAC,CAAC,CAAD,CAA1B;AACA,SAAKL,MAAL,GAAc,CAAC,CAAC,CAAD,GAAKK,CAAC,CAAC,EAAD,CAAP,IAAeA,CAAC,CAAC,CAAD,CAA9B;AACA,SAAKR,IAAL,GAAY,EAAE,CAAC,CAAD,GAAKQ,CAAC,CAAC,EAAD,CAAR,IAAgBA,CAAC,CAAC,EAAD,CAA7B;AACA,SAAKP,GAAL,GAAW,EAAE,IAAIO,CAAC,CAAC,EAAD,CAAP,IAAeA,CAAC,CAAC,EAAD,CAA3B;AACH,GAdL;;AAeI;AACJ;AACA;AACIE,EAAAA,KAAK,EAAE,YAAW;AACd,QAAIC,MAAM,GAAGhB,MAAM,CAACiB,SAAP,CAAiBF,KAAjB,CAAuBG,IAAvB,CAA4B,IAA5B,CAAb;AACAF,IAAAA,MAAM,CAACb,IAAP,GAAc,KAAKA,IAAnB;AACAa,IAAAA,MAAM,CAACZ,KAAP,GAAe,KAAKA,KAApB;AACAY,IAAAA,MAAM,CAACX,IAAP,GAAc,KAAKA,IAAnB;AACAW,IAAAA,MAAM,CAACV,GAAP,GAAa,KAAKA,GAAlB;AACAU,IAAAA,MAAM,CAACT,GAAP,GAAa,KAAKA,GAAlB;AACAS,IAAAA,MAAM,CAACR,MAAP,GAAgB,KAAKA,MAArB;AAEA,WAAOQ,MAAP;AACH;AA5BL,CA7BmB,CAAnB;AA4DA,eAAef,YAAf","sourcesContent":["import Camera from '../Camera';\n/**\n * @constructor clay.camera.Orthographic\n * @extends clay.Camera\n */\nvar Orthographic = Camera.extend(\n/** @lends clay.camera.Orthographic# */\n{\n    /**\n     * @type {number}\n     */\n    left: -1,\n    /**\n     * @type {number}\n     */\n    right: 1,\n    /**\n     * @type {number}\n     */\n    near: -1,\n    /**\n     * @type {number}\n     */\n    far: 1,\n    /**\n     * @type {number}\n     */\n    top: 1,\n    /**\n     * @type {number}\n     */\n    bottom: -1\n},\n/** @lends clay.camera.Orthographic.prototype */\n{\n\n    updateProjectionMatrix: function() {\n        this.projectionMatrix.ortho(this.left, this.right, this.bottom, this.top, this.near, this.far);\n    },\n\n    decomposeProjectionMatrix: function () {\n        var m = this.projectionMatrix.array;\n        this.left = (-1 - m[12]) / m[0];\n        this.right = (1 - m[12]) / m[0];\n        this.top = (1 - m[13]) / m[5];\n        this.bottom = (-1 - m[13]) / m[5];\n        this.near = -(-1 - m[14]) / m[10];\n        this.far = -(1 - m[14]) / m[10];\n    },\n    /**\n     * @return {clay.camera.Orthographic}\n     */\n    clone: function() {\n        var camera = Camera.prototype.clone.call(this);\n        camera.left = this.left;\n        camera.right = this.right;\n        camera.near = this.near;\n        camera.far = this.far;\n        camera.top = this.top;\n        camera.bottom = this.bottom;\n\n        return camera;\n    }\n});\n\nexport default Orthographic;\n"]},"metadata":{},"sourceType":"module"}