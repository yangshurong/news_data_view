{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nvar MAPBOX_CAMERA_OPTION = ['zoom', 'center', 'pitch', 'bearing'];\nvar Mapbox3DModel = echarts.ComponentModel.extend({\n  type: 'mapbox3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: -10,\n    style: 'mapbox://styles/mapbox/light-v9',\n    center: [0, 0],\n    zoom: 0,\n    pitch: 0,\n    bearing: 0,\n    light: {\n      main: {\n        alpha: 20,\n        beta: 30\n      }\n    },\n    altitudeScale: 1,\n    // Default depend on altitudeScale\n    boxHeight: 'auto'\n  },\n  getMapboxCameraOption: function getMapboxCameraOption() {\n    var self = this;\n    return MAPBOX_CAMERA_OPTION.reduce(function (obj, key) {\n      obj[key] = self.get(key);\n      return obj;\n    }, {});\n  },\n  setMapboxCameraOption: function setMapboxCameraOption(option) {\n    if (option != null) {\n      MAPBOX_CAMERA_OPTION.forEach(function (key) {\n        if (option[key] != null) {\n          this.option[key] = option[key];\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * Get mapbox instance\n   */\n  getMapbox: function getMapbox() {\n    return this._mapbox;\n  },\n  setMapbox: function setMapbox(mapbox) {\n    this._mapbox = mapbox;\n  }\n});\necharts.util.merge(Mapbox3DModel.prototype, componentPostEffectMixin);\necharts.util.merge(Mapbox3DModel.prototype, componentLightMixin);\nexport default Mapbox3DModel;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/component/mapbox3D/Mapbox3DModel.js"],"names":["echarts","componentPostEffectMixin","componentLightMixin","MAPBOX_CAMERA_OPTION","Mapbox3DModel","ComponentModel","extend","type","layoutMode","coordinateSystem","defaultOption","zlevel","style","center","zoom","pitch","bearing","light","main","alpha","beta","altitudeScale","boxHeight","getMapboxCameraOption","self","reduce","obj","key","get","setMapboxCameraOption","option","forEach","getMapbox","_mapbox","setMapbox","mapbox","util","merge","prototype"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,wBAAP,MAAqC,oCAArC;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,IAAIC,oBAAoB,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,CAA3B;AACA,IAAIC,aAAa,GAAGJ,OAAO,CAACK,cAAR,CAAuBC,MAAvB,CAA8B;AAChDC,EAAAA,IAAI,EAAE,UAD0C;AAEhDC,EAAAA,UAAU,EAAE,KAFoC;AAGhDC,EAAAA,gBAAgB,EAAE,IAH8B;AAIhDC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,CAAC,EADI;AAEbC,IAAAA,KAAK,EAAE,iCAFM;AAGbC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHK;AAIbC,IAAAA,IAAI,EAAE,CAJO;AAKbC,IAAAA,KAAK,EAAE,CALM;AAMbC,IAAAA,OAAO,EAAE,CANI;AAObC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,IAAI,EAAE;AAFF;AADD,KAPM;AAabC,IAAAA,aAAa,EAAE,CAbF;AAcb;AACAC,IAAAA,SAAS,EAAE;AAfE,GAJiC;AAqBhDC,EAAAA,qBAAqB,EAAE,iCAAY;AACjC,QAAIC,IAAI,GAAG,IAAX;AACA,WAAOrB,oBAAoB,CAACsB,MAArB,CAA4B,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACrDD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWH,IAAI,CAACI,GAAL,CAASD,GAAT,CAAX;AACA,aAAOD,GAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID,GA3B+C;AA4BhDG,EAAAA,qBAAqB,EAAE,+BAAUC,MAAV,EAAkB;AACvC,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB3B,MAAAA,oBAAoB,CAAC4B,OAArB,CAA6B,UAAUJ,GAAV,EAAe;AAC1C,YAAIG,MAAM,CAACH,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACvB,eAAKG,MAAL,CAAYH,GAAZ,IAAmBG,MAAM,CAACH,GAAD,CAAzB;AACD;AACF,OAJD,EAIG,IAJH;AAKD;AACF,GApC+C;;AAsChD;AACF;AACA;AACEK,EAAAA,SAAS,EAAE,qBAAY;AACrB,WAAO,KAAKC,OAAZ;AACD,GA3C+C;AA4ChDC,EAAAA,SAAS,EAAE,mBAAUC,MAAV,EAAkB;AAC3B,SAAKF,OAAL,GAAeE,MAAf;AACD;AA9C+C,CAA9B,CAApB;AAgDAnC,OAAO,CAACoC,IAAR,CAAaC,KAAb,CAAmBjC,aAAa,CAACkC,SAAjC,EAA4CrC,wBAA5C;AACAD,OAAO,CAACoC,IAAR,CAAaC,KAAb,CAAmBjC,aAAa,CAACkC,SAAjC,EAA4CpC,mBAA5C;AACA,eAAeE,aAAf","sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nvar MAPBOX_CAMERA_OPTION = ['zoom', 'center', 'pitch', 'bearing'];\nvar Mapbox3DModel = echarts.ComponentModel.extend({\n  type: 'mapbox3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: -10,\n    style: 'mapbox://styles/mapbox/light-v9',\n    center: [0, 0],\n    zoom: 0,\n    pitch: 0,\n    bearing: 0,\n    light: {\n      main: {\n        alpha: 20,\n        beta: 30\n      }\n    },\n    altitudeScale: 1,\n    // Default depend on altitudeScale\n    boxHeight: 'auto'\n  },\n  getMapboxCameraOption: function () {\n    var self = this;\n    return MAPBOX_CAMERA_OPTION.reduce(function (obj, key) {\n      obj[key] = self.get(key);\n      return obj;\n    }, {});\n  },\n  setMapboxCameraOption: function (option) {\n    if (option != null) {\n      MAPBOX_CAMERA_OPTION.forEach(function (key) {\n        if (option[key] != null) {\n          this.option[key] = option[key];\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * Get mapbox instance\n   */\n  getMapbox: function () {\n    return this._mapbox;\n  },\n  setMapbox: function (mapbox) {\n    this._mapbox = mapbox;\n  }\n});\necharts.util.merge(Mapbox3DModel.prototype, componentPostEffectMixin);\necharts.util.merge(Mapbox3DModel.prototype, componentLightMixin);\nexport default Mapbox3DModel;"]},"metadata":{},"sourceType":"module"}