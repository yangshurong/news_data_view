{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport axisDefault from './axis3DDefault';\nimport OrdinalMeta from 'echarts/lib/data/OrdinalMeta';\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {} registers\n * @param {string} dim 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nexport default function (registers, dim, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  AXIS_TYPES.forEach(function (axisType) {\n    var AxisModel = BaseAxisModelClass.extend({\n      type: dim + 'Axis3D.' + axisType,\n\n      /**\n       * @type readOnly\n       */\n      __ordinalMeta: null,\n      mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n        var themeModel = ecModel.getTheme();\n        echarts.util.merge(option, themeModel.get(axisType + 'Axis3D'));\n        echarts.util.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(dim, option);\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function optionUpdated() {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n      getCategories: function getCategories() {\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function getOrdinalMeta() {\n        return this.__ordinalMeta;\n      },\n      defaultOption: echarts.util.merge(echarts.util.clone(axisDefault[axisType + 'Axis3D']), extraDefaultOption || {}, true)\n    });\n    registers.registerComponentModel(AxisModel);\n  }); // TODO\n\n  registers.registerSubTypeDefaulter(dim + 'Axis3D', echarts.util.curry(axisTypeDefaulter, dim));\n}\n;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/component/grid3D/createAxis3DModel.js"],"names":["echarts","axisDefault","OrdinalMeta","AXIS_TYPES","registers","dim","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","forEach","axisType","AxisModel","extend","type","__ordinalMeta","mergeDefaultAndTheme","option","ecModel","themeModel","getTheme","util","merge","get","getDefaultOption","optionUpdated","thisOption","createByAxisModel","getCategories","categories","getOrdinalMeta","defaultOption","clone","registerComponentModel","registerSubTypeDefaulter","curry"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,IAAIC,UAAU,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,MAAtB,EAA8B,KAA9B,CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,UAAUC,SAAV,EAAqBC,GAArB,EAA0BC,kBAA1B,EAA8CC,iBAA9C,EAAiEC,kBAAjE,EAAqF;AAClGL,EAAAA,UAAU,CAACM,OAAX,CAAmB,UAAUC,QAAV,EAAoB;AACrC,QAAIC,SAAS,GAAGL,kBAAkB,CAACM,MAAnB,CAA0B;AACxCC,MAAAA,IAAI,EAAER,GAAG,GAAG,SAAN,GAAkBK,QADgB;;AAGxC;AACN;AACA;AACMI,MAAAA,aAAa,EAAE,IANyB;AAOxCC,MAAAA,oBAAoB,EAAE,8BAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AAC/C,YAAIC,UAAU,GAAGD,OAAO,CAACE,QAAR,EAAjB;AACAnB,QAAAA,OAAO,CAACoB,IAAR,CAAaC,KAAb,CAAmBL,MAAnB,EAA2BE,UAAU,CAACI,GAAX,CAAeZ,QAAQ,GAAG,QAA1B,CAA3B;AACAV,QAAAA,OAAO,CAACoB,IAAR,CAAaC,KAAb,CAAmBL,MAAnB,EAA2B,KAAKO,gBAAL,EAA3B;AACAP,QAAAA,MAAM,CAACH,IAAP,GAAcN,iBAAiB,CAACF,GAAD,EAAMW,MAAN,CAA/B;AACD,OAZuC;;AAcxC;AACN;AACA;AACMQ,MAAAA,aAAa,EAAE,yBAAY;AACzB,YAAIC,UAAU,GAAG,KAAKT,MAAtB;;AAEA,YAAIS,UAAU,CAACZ,IAAX,KAAoB,UAAxB,EAAoC;AAClC,eAAKC,aAAL,GAAqBZ,WAAW,CAACwB,iBAAZ,CAA8B,IAA9B,CAArB;AACD;AACF,OAvBuC;AAwBxCC,MAAAA,aAAa,EAAE,yBAAY;AACzB,YAAI,KAAKX,MAAL,CAAYH,IAAZ,KAAqB,UAAzB,EAAqC;AACnC,iBAAO,KAAKC,aAAL,CAAmBc,UAA1B;AACD;AACF,OA5BuC;AA6BxCC,MAAAA,cAAc,EAAE,0BAAY;AAC1B,eAAO,KAAKf,aAAZ;AACD,OA/BuC;AAgCxCgB,MAAAA,aAAa,EAAE9B,OAAO,CAACoB,IAAR,CAAaC,KAAb,CAAmBrB,OAAO,CAACoB,IAAR,CAAaW,KAAb,CAAmB9B,WAAW,CAACS,QAAQ,GAAG,QAAZ,CAA9B,CAAnB,EAAyEF,kBAAkB,IAAI,EAA/F,EAAmG,IAAnG;AAhCyB,KAA1B,CAAhB;AAkCAJ,IAAAA,SAAS,CAAC4B,sBAAV,CAAiCrB,SAAjC;AACD,GApCD,EADkG,CAqC9F;;AAEJP,EAAAA,SAAS,CAAC6B,wBAAV,CAAmC5B,GAAG,GAAG,QAAzC,EAAmDL,OAAO,CAACoB,IAAR,CAAac,KAAb,CAAmB3B,iBAAnB,EAAsCF,GAAtC,CAAnD;AACD;AACD","sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport axisDefault from './axis3DDefault';\nimport OrdinalMeta from 'echarts/lib/data/OrdinalMeta';\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {} registers\n * @param {string} dim 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nexport default function (registers, dim, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  AXIS_TYPES.forEach(function (axisType) {\n    var AxisModel = BaseAxisModelClass.extend({\n      type: dim + 'Axis3D.' + axisType,\n\n      /**\n       * @type readOnly\n       */\n      __ordinalMeta: null,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var themeModel = ecModel.getTheme();\n        echarts.util.merge(option, themeModel.get(axisType + 'Axis3D'));\n        echarts.util.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(dim, option);\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n      getCategories: function () {\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: echarts.util.merge(echarts.util.clone(axisDefault[axisType + 'Axis3D']), extraDefaultOption || {}, true)\n    });\n    registers.registerComponentModel(AxisModel);\n  }); // TODO\n\n  registers.registerSubTypeDefaulter(dim + 'Axis3D', echarts.util.curry(axisTypeDefaulter, dim));\n}\n;"]},"metadata":{},"sourceType":"module"}