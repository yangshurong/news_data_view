{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nvar formatUtil = {};\n\nformatUtil.getFormattedLabel = function (seriesModel, dataIndex, status, dataType, dimIndex) {\n  status = status || 'normal';\n  var data = seriesModel.getData(dataType);\n  var itemModel = data.getItemModel(dataIndex);\n  var params = seriesModel.getDataParams(dataIndex, dataType);\n\n  if (dimIndex != null && params.value instanceof Array) {\n    params.value = params.value[dimIndex];\n  }\n\n  var formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : ['emphasis', 'label', 'formatter']);\n\n  if (formatter == null) {\n    formatter = itemModel.get(['label', 'formatter']);\n  }\n\n  var text;\n\n  if (typeof formatter === 'function') {\n    params.status = status;\n    text = formatter(params);\n  } else if (typeof formatter === 'string') {\n    text = echarts.format.formatTpl(formatter, params);\n  }\n\n  return text;\n};\n/**\n * If value is not array, then convert it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\n\nformatUtil.normalizeToArray = function (value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n};\n\nexport default formatUtil;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/util/format.js"],"names":["echarts","formatUtil","getFormattedLabel","seriesModel","dataIndex","status","dataType","dimIndex","data","getData","itemModel","getItemModel","params","getDataParams","value","Array","formatter","get","text","format","formatTpl","normalizeToArray"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;AACA,IAAIC,UAAU,GAAG,EAAjB;;AAEAA,UAAU,CAACC,iBAAX,GAA+B,UAAUC,WAAV,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoDC,QAApD,EAA8D;AAC3FF,EAAAA,MAAM,GAAGA,MAAM,IAAI,QAAnB;AACA,MAAIG,IAAI,GAAGL,WAAW,CAACM,OAAZ,CAAoBH,QAApB,CAAX;AACA,MAAII,SAAS,GAAGF,IAAI,CAACG,YAAL,CAAkBP,SAAlB,CAAhB;AACA,MAAIQ,MAAM,GAAGT,WAAW,CAACU,aAAZ,CAA0BT,SAA1B,EAAqCE,QAArC,CAAb;;AAEA,MAAIC,QAAQ,IAAI,IAAZ,IAAoBK,MAAM,CAACE,KAAP,YAAwBC,KAAhD,EAAuD;AACrDH,IAAAA,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACE,KAAP,CAAaP,QAAb,CAAf;AACD;;AAED,MAAIS,SAAS,GAAGN,SAAS,CAACO,GAAV,CAAcZ,MAAM,KAAK,QAAX,GAAsB,CAAC,OAAD,EAAU,WAAV,CAAtB,GAA+C,CAAC,UAAD,EAAa,OAAb,EAAsB,WAAtB,CAA7D,CAAhB;;AAEA,MAAIW,SAAS,IAAI,IAAjB,EAAuB;AACrBA,IAAAA,SAAS,GAAGN,SAAS,CAACO,GAAV,CAAc,CAAC,OAAD,EAAU,WAAV,CAAd,CAAZ;AACD;;AAED,MAAIC,IAAJ;;AAEA,MAAI,OAAOF,SAAP,KAAqB,UAAzB,EAAqC;AACnCJ,IAAAA,MAAM,CAACP,MAAP,GAAgBA,MAAhB;AACAa,IAAAA,IAAI,GAAGF,SAAS,CAACJ,MAAD,CAAhB;AACD,GAHD,MAGO,IAAI,OAAOI,SAAP,KAAqB,QAAzB,EAAmC;AACxCE,IAAAA,IAAI,GAAGlB,OAAO,CAACmB,MAAR,CAAeC,SAAf,CAAyBJ,SAAzB,EAAoCJ,MAApC,CAAP;AACD;;AAED,SAAOM,IAAP;AACD,CA1BD;AA2BA;AACA;AACA;AACA;AACA;;;AAGAjB,UAAU,CAACoB,gBAAX,GAA8B,UAAUP,KAAV,EAAiB;AAC7C,SAAOA,KAAK,YAAYC,KAAjB,GAAyBD,KAAzB,GAAiCA,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqB,CAACA,KAAD,CAA7D;AACD,CAFD;;AAIA,eAAeb,UAAf","sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nvar formatUtil = {};\n\nformatUtil.getFormattedLabel = function (seriesModel, dataIndex, status, dataType, dimIndex) {\n  status = status || 'normal';\n  var data = seriesModel.getData(dataType);\n  var itemModel = data.getItemModel(dataIndex);\n  var params = seriesModel.getDataParams(dataIndex, dataType);\n\n  if (dimIndex != null && params.value instanceof Array) {\n    params.value = params.value[dimIndex];\n  }\n\n  var formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : ['emphasis', 'label', 'formatter']);\n\n  if (formatter == null) {\n    formatter = itemModel.get(['label', 'formatter']);\n  }\n\n  var text;\n\n  if (typeof formatter === 'function') {\n    params.status = status;\n    text = formatter(params);\n  } else if (typeof formatter === 'string') {\n    text = echarts.format.formatTpl(formatter, params);\n  }\n\n  return text;\n};\n/**\n * If value is not array, then convert it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\n\nformatUtil.normalizeToArray = function (value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n};\n\nexport default formatUtil;"]},"metadata":{},"sourceType":"module"}