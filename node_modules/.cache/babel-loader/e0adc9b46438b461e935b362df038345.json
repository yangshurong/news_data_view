{"ast":null,"code":"import LinkedList from './LinkedList';\n/**\n * LRU Cache\n * @constructor\n * @alias clay.core.LRU\n */\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n};\n/**\n * Set cache max size\n * @param {number} size\n */\n\n\nLRU.prototype.setMaxSize = function (size) {\n  this._maxSize = size;\n};\n/**\n * @param  {string} key\n * @param  {} value\n */\n\n\nLRU.prototype.put = function (key, value) {\n  if (!this._map.hasOwnProperty(key)) {\n    var len = this._list.length();\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = this._list.head;\n\n      this._list.remove(leastUsedEntry);\n\n      delete this._map[leastUsedEntry.key];\n    }\n\n    var entry = this._list.insert(value);\n\n    entry.key = key;\n    this._map[key] = entry;\n  }\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRU.prototype.get = function (key) {\n  var entry = this._map[key];\n\n  if (this._map.hasOwnProperty(key)) {\n    // Put the latest used entry in the tail\n    if (entry !== this._list.tail) {\n      this._list.remove(entry);\n\n      this._list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * @param {string} key\n */\n\n\nLRU.prototype.remove = function (key) {\n  var entry = this._map[key];\n\n  if (typeof entry !== 'undefined') {\n    delete this._map[key];\n\n    this._list.remove(entry);\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRU.prototype.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nexport default LRU;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/claygl/src/core/LRU.js"],"names":["LinkedList","LRU","maxSize","_list","_map","_maxSize","prototype","setMaxSize","size","put","key","value","hasOwnProperty","len","length","leastUsedEntry","head","remove","entry","insert","get","tail","insertEntry","clear"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,GAAG,GAAG,UAAUC,OAAV,EAAmB;AAEzB,OAAKC,KAAL,GAAa,IAAIH,UAAJ,EAAb;AAEA,OAAKI,IAAL,GAAY,EAAZ;AAEA,OAAKC,QAAL,GAAgBH,OAAO,IAAI,EAA3B;AACH,CAPD;AASA;AACA;AACA;AACA;;;AACAD,GAAG,CAACK,SAAJ,CAAcC,UAAd,GAA2B,UAAUC,IAAV,EAAgB;AACvC,OAAKH,QAAL,GAAgBG,IAAhB;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAP,GAAG,CAACK,SAAJ,CAAcG,GAAd,GAAoB,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACtC,MAAI,CAAC,KAAKP,IAAL,CAAUQ,cAAV,CAAyBF,GAAzB,CAAL,EAAoC;AAChC,QAAIG,GAAG,GAAG,KAAKV,KAAL,CAAWW,MAAX,EAAV;;AACA,QAAID,GAAG,IAAI,KAAKR,QAAZ,IAAwBQ,GAAG,GAAG,CAAlC,EAAqC;AACjC;AACA,UAAIE,cAAc,GAAG,KAAKZ,KAAL,CAAWa,IAAhC;;AACA,WAAKb,KAAL,CAAWc,MAAX,CAAkBF,cAAlB;;AACA,aAAO,KAAKX,IAAL,CAAUW,cAAc,CAACL,GAAzB,CAAP;AACH;;AAED,QAAIQ,KAAK,GAAG,KAAKf,KAAL,CAAWgB,MAAX,CAAkBR,KAAlB,CAAZ;;AACAO,IAAAA,KAAK,CAACR,GAAN,GAAYA,GAAZ;AACA,SAAKN,IAAL,CAAUM,GAAV,IAAiBQ,KAAjB;AACH;AACJ,CAdD;AAgBA;AACA;AACA;AACA;;;AACAjB,GAAG,CAACK,SAAJ,CAAcc,GAAd,GAAoB,UAAUV,GAAV,EAAe;AAC/B,MAAIQ,KAAK,GAAG,KAAKd,IAAL,CAAUM,GAAV,CAAZ;;AACA,MAAI,KAAKN,IAAL,CAAUQ,cAAV,CAAyBF,GAAzB,CAAJ,EAAmC;AAC/B;AACA,QAAIQ,KAAK,KAAK,KAAKf,KAAL,CAAWkB,IAAzB,EAA+B;AAC3B,WAAKlB,KAAL,CAAWc,MAAX,CAAkBC,KAAlB;;AACA,WAAKf,KAAL,CAAWmB,WAAX,CAAuBJ,KAAvB;AACH;;AAED,WAAOA,KAAK,CAACP,KAAb;AACH;AACJ,CAXD;AAaA;AACA;AACA;;;AACAV,GAAG,CAACK,SAAJ,CAAcW,MAAd,GAAuB,UAAUP,GAAV,EAAe;AAClC,MAAIQ,KAAK,GAAG,KAAKd,IAAL,CAAUM,GAAV,CAAZ;;AACA,MAAI,OAAOQ,KAAP,KAAkB,WAAtB,EAAmC;AAC/B,WAAO,KAAKd,IAAL,CAAUM,GAAV,CAAP;;AACA,SAAKP,KAAL,CAAWc,MAAX,CAAkBC,KAAlB;AACH;AACJ,CAND;AAQA;AACA;AACA;;;AACAjB,GAAG,CAACK,SAAJ,CAAciB,KAAd,GAAsB,YAAY;AAC9B,OAAKpB,KAAL,CAAWoB,KAAX;;AACA,OAAKnB,IAAL,GAAY,EAAZ;AACH,CAHD;;AAKA,eAAeH,GAAf","sourcesContent":["import LinkedList from './LinkedList';\n\n/**\n * LRU Cache\n * @constructor\n * @alias clay.core.LRU\n */\nvar LRU = function (maxSize) {\n\n    this._list = new LinkedList();\n\n    this._map = {};\n\n    this._maxSize = maxSize || 10;\n};\n\n/**\n * Set cache max size\n * @param {number} size\n */\nLRU.prototype.setMaxSize = function (size) {\n    this._maxSize = size;\n};\n\n/**\n * @param  {string} key\n * @param  {} value\n */\nLRU.prototype.put = function (key, value) {\n    if (!this._map.hasOwnProperty(key)) {\n        var len = this._list.length();\n        if (len >= this._maxSize && len > 0) {\n            // Remove the least recently used\n            var leastUsedEntry = this._list.head;\n            this._list.remove(leastUsedEntry);\n            delete this._map[leastUsedEntry.key];\n        }\n\n        var entry = this._list.insert(value);\n        entry.key = key;\n        this._map[key] = entry;\n    }\n};\n\n/**\n * @param  {string} key\n * @return {}\n */\nLRU.prototype.get = function (key) {\n    var entry = this._map[key];\n    if (this._map.hasOwnProperty(key)) {\n        // Put the latest used entry in the tail\n        if (entry !== this._list.tail) {\n            this._list.remove(entry);\n            this._list.insertEntry(entry);\n        }\n\n        return entry.value;\n    }\n};\n\n/**\n * @param {string} key\n */\nLRU.prototype.remove = function (key) {\n    var entry = this._map[key];\n    if (typeof(entry) !== 'undefined') {\n        delete this._map[key];\n        this._list.remove(entry);\n    }\n};\n\n/**\n * Clear the cache\n */\nLRU.prototype.clear = function () {\n    this._list.clear();\n    this._map = {};\n};\n\nexport default LRU;\n"]},"metadata":{},"sourceType":"module"}