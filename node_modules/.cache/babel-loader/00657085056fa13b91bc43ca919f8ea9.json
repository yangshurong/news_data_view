{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/**\n * Lines geometry\n * Use screen space projected lines lineWidth > MAX_LINE_WIDTH\n * https://mattdesl.svbtle.com/drawing-lines-is-hard\n * @module echarts-gl/util/geometry/LinesGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\n/**\n * @constructor\n * @alias module:echarts-gl/chart/flowGL/Line2D\n * @extends clay.Geometry\n */\n\nvar LinesGeometry = Geometry.extend(function () {\n  return {\n    dynamic: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION')\n    }\n  };\n},\n/** @lends module: echarts-gl/util/geometry/LinesGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n  },\n\n  /**\n   * @param {number} nVertex\n   */\n  setLineCount: function (nLine) {\n    var attributes = this.attributes;\n    var nVertex = 4 * nLine;\n    var nTriangle = 2 * nLine;\n\n    if (this.vertexCount !== nVertex) {\n      attributes.position.init(nVertex);\n    }\n\n    if (this.triangleCount !== nTriangle) {\n      if (nTriangle === 0) {\n        this.indices = null;\n      } else {\n        this.indices = this.vertexCount > 0xffff ? new Uint32Array(nTriangle * 3) : new Uint16Array(nTriangle * 3);\n      }\n    }\n  },\n  addLine: function (p) {\n    var vertexOffset = this._vertexOffset;\n    this.attributes.position.set(vertexOffset, [p[0], p[1], 1]);\n    this.attributes.position.set(vertexOffset + 1, [p[0], p[1], -1]);\n    this.attributes.position.set(vertexOffset + 2, [p[0], p[1], 2]);\n    this.attributes.position.set(vertexOffset + 3, [p[0], p[1], -2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset, vertexOffset + 1, vertexOffset + 2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset + 1, vertexOffset + 2, vertexOffset + 3]);\n    this._vertexOffset += 4;\n  }\n});\nexport default LinesGeometry;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/chart/flowGL/Line2D.js"],"names":["Geometry","echarts","LinesGeometry","extend","dynamic","attributes","position","Attribute","resetOffset","_vertexOffset","_faceOffset","setLineCount","nLine","nVertex","nTriangle","vertexCount","init","triangleCount","indices","Uint32Array","Uint16Array","addLine","p","vertexOffset","set","setTriangleIndices"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GAAGF,QAAQ,CAACG,MAAT,CAAgB,YAAY;AAC9C,SAAO;AACLC,IAAAA,OAAO,EAAE,IADJ;AAELC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,IAAIN,QAAQ,CAACO,SAAb,CAAuB,UAAvB,EAAmC,OAAnC,EAA4C,CAA5C,EAA+C,UAA/C;AADA;AAFP,GAAP;AAMD,CAPmB;AAQpB;AACA;AACE;AACF;AACA;AACEC,EAAAA,WAAW,EAAE,YAAY;AACvB,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACD,GAPH;;AASE;AACF;AACA;AACEC,EAAAA,YAAY,EAAE,UAAUC,KAAV,EAAiB;AAC7B,QAAIP,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAIQ,OAAO,GAAG,IAAID,KAAlB;AACA,QAAIE,SAAS,GAAG,IAAIF,KAApB;;AAEA,QAAI,KAAKG,WAAL,KAAqBF,OAAzB,EAAkC;AAChCR,MAAAA,UAAU,CAACC,QAAX,CAAoBU,IAApB,CAAyBH,OAAzB;AACD;;AAED,QAAI,KAAKI,aAAL,KAAuBH,SAA3B,EAAsC;AACpC,UAAIA,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAKI,OAAL,GAAe,IAAf;AACD,OAFD,MAEO;AACL,aAAKA,OAAL,GAAe,KAAKH,WAAL,GAAmB,MAAnB,GAA4B,IAAII,WAAJ,CAAgBL,SAAS,GAAG,CAA5B,CAA5B,GAA6D,IAAIM,WAAJ,CAAgBN,SAAS,GAAG,CAA5B,CAA5E;AACD;AACF;AACF,GA5BH;AA6BEO,EAAAA,OAAO,EAAE,UAAUC,CAAV,EAAa;AACpB,QAAIC,YAAY,GAAG,KAAKd,aAAxB;AACA,SAAKJ,UAAL,CAAgBC,QAAhB,CAAyBkB,GAAzB,CAA6BD,YAA7B,EAA2C,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAa,CAAb,CAA3C;AACA,SAAKjB,UAAL,CAAgBC,QAAhB,CAAyBkB,GAAzB,CAA6BD,YAAY,GAAG,CAA5C,EAA+C,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAa,CAAC,CAAd,CAA/C;AACA,SAAKjB,UAAL,CAAgBC,QAAhB,CAAyBkB,GAAzB,CAA6BD,YAAY,GAAG,CAA5C,EAA+C,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAa,CAAb,CAA/C;AACA,SAAKjB,UAAL,CAAgBC,QAAhB,CAAyBkB,GAAzB,CAA6BD,YAAY,GAAG,CAA5C,EAA+C,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAa,CAAC,CAAd,CAA/C;AACA,SAAKG,kBAAL,CAAwB,KAAKf,WAAL,EAAxB,EAA4C,CAACa,YAAD,EAAeA,YAAY,GAAG,CAA9B,EAAiCA,YAAY,GAAG,CAAhD,CAA5C;AACA,SAAKE,kBAAL,CAAwB,KAAKf,WAAL,EAAxB,EAA4C,CAACa,YAAY,GAAG,CAAhB,EAAmBA,YAAY,GAAG,CAAlC,EAAqCA,YAAY,GAAG,CAApD,CAA5C;AACA,SAAKd,aAAL,IAAsB,CAAtB;AACD;AAtCH,CAToB,CAApB;AAiDA,eAAeP,aAAf","sourcesContent":["/**\n * Lines geometry\n * Use screen space projected lines lineWidth > MAX_LINE_WIDTH\n * https://mattdesl.svbtle.com/drawing-lines-is-hard\n * @module echarts-gl/util/geometry/LinesGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\n/**\n * @constructor\n * @alias module:echarts-gl/chart/flowGL/Line2D\n * @extends clay.Geometry\n */\n\nvar LinesGeometry = Geometry.extend(function () {\n  return {\n    dynamic: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION')\n    }\n  };\n},\n/** @lends module: echarts-gl/util/geometry/LinesGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n  },\n\n  /**\n   * @param {number} nVertex\n   */\n  setLineCount: function (nLine) {\n    var attributes = this.attributes;\n    var nVertex = 4 * nLine;\n    var nTriangle = 2 * nLine;\n\n    if (this.vertexCount !== nVertex) {\n      attributes.position.init(nVertex);\n    }\n\n    if (this.triangleCount !== nTriangle) {\n      if (nTriangle === 0) {\n        this.indices = null;\n      } else {\n        this.indices = this.vertexCount > 0xffff ? new Uint32Array(nTriangle * 3) : new Uint16Array(nTriangle * 3);\n      }\n    }\n  },\n  addLine: function (p) {\n    var vertexOffset = this._vertexOffset;\n    this.attributes.position.set(vertexOffset, [p[0], p[1], 1]);\n    this.attributes.position.set(vertexOffset + 1, [p[0], p[1], -1]);\n    this.attributes.position.set(vertexOffset + 2, [p[0], p[1], 2]);\n    this.attributes.position.set(vertexOffset + 3, [p[0], p[1], -2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset, vertexOffset + 1, vertexOffset + 2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset + 1, vertexOffset + 2, vertexOffset + 3]);\n    this._vertexOffset += 4;\n  }\n});\nexport default LinesGeometry;"]},"metadata":{},"sourceType":"module"}