{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nvar MAPTALKS_CAMERA_OPTION = ['zoom', 'center', 'pitch', 'bearing'];\nvar Maptalks3DModel = echarts.ComponentModel.extend({\n  type: 'maptalks3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: -10,\n    urlTemplate: 'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',\n    attribution: '&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>',\n    center: [0, 0],\n    zoom: 0,\n    pitch: 0,\n    bearing: 0,\n    light: {\n      main: {\n        alpha: 20,\n        beta: 30\n      }\n    },\n    altitudeScale: 1,\n    // Default depend on altitudeScale\n    boxHeight: 'auto'\n  },\n  getMaptalksCameraOption: function getMaptalksCameraOption() {\n    var self = this;\n    return MAPTALKS_CAMERA_OPTION.reduce(function (obj, key) {\n      obj[key] = self.get(key);\n      return obj;\n    }, {});\n  },\n  setMaptalksCameraOption: function setMaptalksCameraOption(option) {\n    if (option != null) {\n      MAPTALKS_CAMERA_OPTION.forEach(function (key) {\n        if (option[key] != null) {\n          this.option[key] = option[key];\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * Get maptalks instance\n   */\n  getMaptalks: function getMaptalks() {\n    return this._maptalks;\n  },\n  setMaptalks: function setMaptalks(maptalks) {\n    this._maptalks = maptalks;\n  }\n});\necharts.util.merge(Maptalks3DModel.prototype, componentPostEffectMixin);\necharts.util.merge(Maptalks3DModel.prototype, componentLightMixin);\nexport default Maptalks3DModel;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_echarts-gl@2.0.9@echarts-gl/lib/component/maptalks3D/Maptalks3DModel.js"],"names":["echarts","componentPostEffectMixin","componentLightMixin","MAPTALKS_CAMERA_OPTION","Maptalks3DModel","ComponentModel","extend","type","layoutMode","coordinateSystem","defaultOption","zlevel","urlTemplate","attribution","center","zoom","pitch","bearing","light","main","alpha","beta","altitudeScale","boxHeight","getMaptalksCameraOption","self","reduce","obj","key","get","setMaptalksCameraOption","option","forEach","getMaptalks","_maptalks","setMaptalks","maptalks","util","merge","prototype"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,wBAAP,MAAqC,oCAArC;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,IAAIC,sBAAsB,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,CAA7B;AACA,IAAIC,eAAe,GAAGJ,OAAO,CAACK,cAAR,CAAuBC,MAAvB,CAA8B;AAClDC,EAAAA,IAAI,EAAE,YAD4C;AAElDC,EAAAA,UAAU,EAAE,KAFsC;AAGlDC,EAAAA,gBAAgB,EAAE,IAHgC;AAIlDC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,CAAC,EADI;AAEbC,IAAAA,WAAW,EAAE,4DAFA;AAGbC,IAAAA,WAAW,EAAE,+GAHA;AAIbC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJK;AAKbC,IAAAA,IAAI,EAAE,CALO;AAMbC,IAAAA,KAAK,EAAE,CANM;AAObC,IAAAA,OAAO,EAAE,CAPI;AAQbC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,IAAI,EAAE;AAFF;AADD,KARM;AAcbC,IAAAA,aAAa,EAAE,CAdF;AAeb;AACAC,IAAAA,SAAS,EAAE;AAhBE,GAJmC;AAsBlDC,EAAAA,uBAAuB,EAAE,mCAAY;AACnC,QAAIC,IAAI,GAAG,IAAX;AACA,WAAOtB,sBAAsB,CAACuB,MAAvB,CAA8B,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACvDD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWH,IAAI,CAACI,GAAL,CAASD,GAAT,CAAX;AACA,aAAOD,GAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID,GA5BiD;AA6BlDG,EAAAA,uBAAuB,EAAE,iCAAUC,MAAV,EAAkB;AACzC,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB5B,MAAAA,sBAAsB,CAAC6B,OAAvB,CAA+B,UAAUJ,GAAV,EAAe;AAC5C,YAAIG,MAAM,CAACH,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACvB,eAAKG,MAAL,CAAYH,GAAZ,IAAmBG,MAAM,CAACH,GAAD,CAAzB;AACD;AACF,OAJD,EAIG,IAJH;AAKD;AACF,GArCiD;;AAuClD;AACF;AACA;AACEK,EAAAA,WAAW,EAAE,uBAAY;AACvB,WAAO,KAAKC,SAAZ;AACD,GA5CiD;AA6ClDC,EAAAA,WAAW,EAAE,qBAAUC,QAAV,EAAoB;AAC/B,SAAKF,SAAL,GAAiBE,QAAjB;AACD;AA/CiD,CAA9B,CAAtB;AAiDApC,OAAO,CAACqC,IAAR,CAAaC,KAAb,CAAmBlC,eAAe,CAACmC,SAAnC,EAA8CtC,wBAA9C;AACAD,OAAO,CAACqC,IAAR,CAAaC,KAAb,CAAmBlC,eAAe,CAACmC,SAAnC,EAA8CrC,mBAA9C;AACA,eAAeE,eAAf","sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nvar MAPTALKS_CAMERA_OPTION = ['zoom', 'center', 'pitch', 'bearing'];\nvar Maptalks3DModel = echarts.ComponentModel.extend({\n  type: 'maptalks3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: -10,\n    urlTemplate: 'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',\n    attribution: '&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>',\n    center: [0, 0],\n    zoom: 0,\n    pitch: 0,\n    bearing: 0,\n    light: {\n      main: {\n        alpha: 20,\n        beta: 30\n      }\n    },\n    altitudeScale: 1,\n    // Default depend on altitudeScale\n    boxHeight: 'auto'\n  },\n  getMaptalksCameraOption: function () {\n    var self = this;\n    return MAPTALKS_CAMERA_OPTION.reduce(function (obj, key) {\n      obj[key] = self.get(key);\n      return obj;\n    }, {});\n  },\n  setMaptalksCameraOption: function (option) {\n    if (option != null) {\n      MAPTALKS_CAMERA_OPTION.forEach(function (key) {\n        if (option[key] != null) {\n          this.option[key] = option[key];\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * Get maptalks instance\n   */\n  getMaptalks: function () {\n    return this._maptalks;\n  },\n  setMaptalks: function (maptalks) {\n    this._maptalks = maptalks;\n  }\n});\necharts.util.merge(Maptalks3DModel.prototype, componentPostEffectMixin);\necharts.util.merge(Maptalks3DModel.prototype, componentLightMixin);\nexport default Maptalks3DModel;"]},"metadata":{},"sourceType":"module"}