{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import $ from \"jquery\";\n// import jQuery from \"jquery\";\n// import \"jquery-ui\";\n// console.log($);\n// console.log(jQuery);\n// export default {\n//   data() {\n//     return {};\n//   },\n//   mounted() {\n//     this.$nextTick(function () {\n//     var points = 24;\n//     /* jquery slider pips plugin, version 0.1 */\n//     (function ($) {\n//       var extensionMethods = {\n//         pips: function (settings) {\n//           let options = {\n//             first: \"number\", // \"pip\" , false\n//             last: \"number\", // \"pip\" , false\n//             rest: \"pip\", // \"number\" , false\n//           };\n//           $.extend(options, settings);\n//           // get rid of all pips that might already exist.\n//           this.element\n//             .addClass(\"ui-slider-pips\")\n//             .find(\".ui-slider-pip\")\n//             .remove();\n//           // we need teh amount of pips to create.\n//           var pips = this.options.max - this.options.min;\n//           // for every stop in the slider, we create a pip.\n//           for (let i = 0; i <= pips; i++) {\n//             // hold a span element for the pip\n//             var s = $(\n//               '<span class=\"ui-slider-pip\"><span class=\"ui-slider-line\"></span><span class=\"ui-slider-number\">' +\n//                 i +\n//                 \"</span></span>\"\n//             );\n//             // add a class so css can handle the display\n//             // we'll hide numbers by default in CSS, and show them if set.\n//             // we'll also use CSS to hide the pip altogether.\n//             if (0 == i) {\n//               s.addClass(\"ui-slider-pip-first\");\n//               if (\"number\" == options.first) {\n//                 s.addClass(\"ui-slider-pip-number\");\n//               }\n//               if (false == options.first) {\n//                 s.addClass(\"ui-slider-pip-hide\");\n//               }\n//             } else if (pips == i) {\n//               s.addClass(\"ui-slider-pip-last\");\n//               if (\"number\" == options.last) {\n//                 s.addClass(\"ui-slider-pip-number\");\n//               }\n//               if (false == options.last) {\n//                 s.addClass(\"ui-slider-pip-hide\");\n//               }\n//             } else {\n//               if (\"number\" == options.rest) {\n//                 s.addClass(\"ui-slider-pip-number\");\n//               }\n//               if (false == options.rest) {\n//                 s.addClass(\"ui-slider-pip-hide\");\n//               }\n//             }\n//             // if it's a horizontal slider we'll set the left offset,\n//             // and the top if it's vertical.\n//             if (this.options.orientation == \"horizontal\")\n//               s.css({ left: \"\" + (100 / pips) * i + \"%\" });\n//             else s.css({ top: \"\" + (100 / pips) * i + \"%\" });\n//             // append the span to the slider.\n//             this.element.append(s);\n//           }\n//         },\n//       };\n//       $.extend(true, $[\"ui\"][\"slider\"].prototype, extensionMethods);\n//     })(jQuery);\n//     (function ($) {\n//       var extensionMethods = {\n//         float: function (settings) {\n//           let options = {};\n//           $.extend(options, settings);\n//           // add a class for the CSS\n//           this.element.addClass(\"ui-slider-float\");\n//           var tip;\n//           // if this is a range slider\n//           if (this.options.values) {\n//             tip = [\n//               $(\n//                 '<span class=\"ui-slider-tip\">' +\n//                   this.options.values[0] +\n//                   \"</span>\"\n//               ),\n//               $(\n//                 '<span class=\"ui-slider-tip\">' +\n//                   this.options.values[1] +\n//                   \"</span>\"\n//               ),\n//             ];\n//             // else if its just a normal slider\n//           } else {\n//             // create a tip element\n//             tip = $(\n//               '<span class=\"ui-slider-tip\">' + this.options.value + \"</span>\"\n//             );\n//           }\n//           // now we append it to all the handles\n//           this.element.find(\".ui-slider-handle\").each(function (k, v) {\n//             $(v).append(tip[k]);\n//           });\n//           // if this slider also has numbers, we'll make those into tips, too; by cloning and changing class.\n//           this.element.find(\".ui-slider-number\").each(function (k, v) {\n//             var $e = $(v)\n//               .clone()\n//               .removeClass(\"ui-slider-number\")\n//               .addClass(\"ui-slider-tip-number\");\n//             $e.insertAfter($(v));\n//           });\n//           // when slider changes, update handle tip value.\n//           this.element.on(\"slidechange slide\", function (e, ui) {\n//             $(ui.handle).find(\".ui-slider-tip\").text(ui.value);\n//           });\n//         },\n//       };\n//       $.extend(true, $[\"ui\"][\"slider\"].prototype, extensionMethods);\n//     })(jQuery);\n//     //\n//     //\n//     //\n//     /* ------------------------- */\n//     /* demo stuff */\n//     $(document).ready(function () {\n//       $(\".slider, .slider2\").slider({\n//         min: 0,\n//         max: points,\n//         animate: true,\n//         value: 8,\n//       });\n//       $(\".slider2\").slider(\"pips\", { rest: \"number\" });\n//     });\n//   })\n//   },\n// };","map":{"version":3,"mappings":";;;;;;;;;;;;AAanames":[],"sourceRoot":"src/components","sources":["main_time.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"time-base-outer\">\r\n      <b class=\"line1\"></b>\r\n      <div class=\"time-base\">\r\n        <div class=\"slider2\"></div>\r\n      </div>\r\n      <b class=\"line2\"></b>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import $ from \"jquery\";\r\n// import jQuery from \"jquery\";\r\n// import \"jquery-ui\";\r\n\r\n// console.log($);\r\n// console.log(jQuery);\r\n// export default {\r\n//   data() {\r\n//     return {};\r\n//   },\r\n//   mounted() {\r\n//     this.$nextTick(function () {\r\n//     var points = 24;\r\n\r\n//     /* jquery slider pips plugin, version 0.1 */\r\n\r\n//     (function ($) {\r\n//       var extensionMethods = {\r\n//         pips: function (settings) {\r\n//           let options = {\r\n//             first: \"number\", // \"pip\" , false\r\n//             last: \"number\", // \"pip\" , false\r\n//             rest: \"pip\", // \"number\" , false\r\n//           };\r\n\r\n//           $.extend(options, settings);\r\n\r\n//           // get rid of all pips that might already exist.\r\n//           this.element\r\n//             .addClass(\"ui-slider-pips\")\r\n//             .find(\".ui-slider-pip\")\r\n//             .remove();\r\n\r\n//           // we need teh amount of pips to create.\r\n//           var pips = this.options.max - this.options.min;\r\n\r\n//           // for every stop in the slider, we create a pip.\r\n//           for (let i = 0; i <= pips; i++) {\r\n//             // hold a span element for the pip\r\n//             var s = $(\r\n//               '<span class=\"ui-slider-pip\"><span class=\"ui-slider-line\"></span><span class=\"ui-slider-number\">' +\r\n//                 i +\r\n//                 \"</span></span>\"\r\n//             );\r\n\r\n//             // add a class so css can handle the display\r\n//             // we'll hide numbers by default in CSS, and show them if set.\r\n//             // we'll also use CSS to hide the pip altogether.\r\n//             if (0 == i) {\r\n//               s.addClass(\"ui-slider-pip-first\");\r\n//               if (\"number\" == options.first) {\r\n//                 s.addClass(\"ui-slider-pip-number\");\r\n//               }\r\n//               if (false == options.first) {\r\n//                 s.addClass(\"ui-slider-pip-hide\");\r\n//               }\r\n//             } else if (pips == i) {\r\n//               s.addClass(\"ui-slider-pip-last\");\r\n//               if (\"number\" == options.last) {\r\n//                 s.addClass(\"ui-slider-pip-number\");\r\n//               }\r\n//               if (false == options.last) {\r\n//                 s.addClass(\"ui-slider-pip-hide\");\r\n//               }\r\n//             } else {\r\n//               if (\"number\" == options.rest) {\r\n//                 s.addClass(\"ui-slider-pip-number\");\r\n//               }\r\n//               if (false == options.rest) {\r\n//                 s.addClass(\"ui-slider-pip-hide\");\r\n//               }\r\n//             }\r\n\r\n//             // if it's a horizontal slider we'll set the left offset,\r\n//             // and the top if it's vertical.\r\n//             if (this.options.orientation == \"horizontal\")\r\n//               s.css({ left: \"\" + (100 / pips) * i + \"%\" });\r\n//             else s.css({ top: \"\" + (100 / pips) * i + \"%\" });\r\n\r\n//             // append the span to the slider.\r\n//             this.element.append(s);\r\n//           }\r\n//         },\r\n//       };\r\n\r\n//       $.extend(true, $[\"ui\"][\"slider\"].prototype, extensionMethods);\r\n//     })(jQuery);\r\n\r\n//     (function ($) {\r\n//       var extensionMethods = {\r\n//         float: function (settings) {\r\n//           let options = {};\r\n//           $.extend(options, settings);\r\n\r\n//           // add a class for the CSS\r\n//           this.element.addClass(\"ui-slider-float\");\r\n//           var tip;\r\n//           // if this is a range slider\r\n//           if (this.options.values) {\r\n//             tip = [\r\n//               $(\r\n//                 '<span class=\"ui-slider-tip\">' +\r\n//                   this.options.values[0] +\r\n//                   \"</span>\"\r\n//               ),\r\n//               $(\r\n//                 '<span class=\"ui-slider-tip\">' +\r\n//                   this.options.values[1] +\r\n//                   \"</span>\"\r\n//               ),\r\n//             ];\r\n\r\n//             // else if its just a normal slider\r\n//           } else {\r\n//             // create a tip element\r\n//             tip = $(\r\n//               '<span class=\"ui-slider-tip\">' + this.options.value + \"</span>\"\r\n//             );\r\n//           }\r\n\r\n//           // now we append it to all the handles\r\n//           this.element.find(\".ui-slider-handle\").each(function (k, v) {\r\n//             $(v).append(tip[k]);\r\n//           });\r\n\r\n//           // if this slider also has numbers, we'll make those into tips, too; by cloning and changing class.\r\n//           this.element.find(\".ui-slider-number\").each(function (k, v) {\r\n//             var $e = $(v)\r\n//               .clone()\r\n//               .removeClass(\"ui-slider-number\")\r\n//               .addClass(\"ui-slider-tip-number\");\r\n//             $e.insertAfter($(v));\r\n//           });\r\n\r\n//           // when slider changes, update handle tip value.\r\n//           this.element.on(\"slidechange slide\", function (e, ui) {\r\n//             $(ui.handle).find(\".ui-slider-tip\").text(ui.value);\r\n//           });\r\n//         },\r\n//       };\r\n\r\n//       $.extend(true, $[\"ui\"][\"slider\"].prototype, extensionMethods);\r\n//     })(jQuery);\r\n\r\n//     //\r\n//     //\r\n//     //\r\n\r\n//     /* ------------------------- */\r\n//     /* demo stuff */\r\n//     $(document).ready(function () {\r\n//       $(\".slider, .slider2\").slider({\r\n//         min: 0,\r\n//         max: points,\r\n//         animate: true,\r\n//         value: 8,\r\n//       });\r\n//       $(\".slider2\").slider(\"pips\", { rest: \"number\" });\r\n//     });\r\n//   })\r\n    \r\n//   },\r\n// };\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n@import \"../assets/main_time/css/default.css\";\r\n@import \"../assets/main_time/css/mobile.css\";\r\n@import \"../assets/main_time/css/normalize.css\";\r\n@import \"../assets/main_time/css/style.css\";\r\n</style>\r\n"]},"metadata":{},"sourceType":"script"}