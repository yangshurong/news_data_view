{"ast":null,"code":"import _typeof from \"C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.slice.js\";\n\n/**\n * Extend a sub class from base class\n * @param {object|Function} makeDefaultOpt default option of this sub class, method of the sub can use this.xxx to access this option\n * @param {Function} [initialize] Initialize after the sub class is instantiated\n * @param {Object} [proto] Prototype methods/properties of the sub class\n * @memberOf clay.core.mixin.extend\n * @return {Function}\n */\nfunction derive(makeDefaultOpt, initialize\n/*optional*/\n, proto\n/*optional*/\n) {\n  if (_typeof(initialize) == 'object') {\n    proto = initialize;\n    initialize = null;\n  }\n\n  var _super = this;\n\n  var propList;\n\n  if (!(makeDefaultOpt instanceof Function)) {\n    // Optimize the property iterate if it have been fixed\n    propList = [];\n\n    for (var propName in makeDefaultOpt) {\n      if (makeDefaultOpt.hasOwnProperty(propName)) {\n        propList.push(propName);\n      }\n    }\n  }\n\n  var sub = function sub(options) {\n    // call super constructor\n    _super.apply(this, arguments);\n\n    if (makeDefaultOpt instanceof Function) {\n      // Invoke makeDefaultOpt each time if it is a function, So we can make sure each\n      // property in the object will not be shared by mutiple instances\n      extend(this, makeDefaultOpt.call(this, options));\n    } else {\n      extendWithPropList(this, makeDefaultOpt, propList);\n    }\n\n    if (this.constructor === sub) {\n      // Initialize function will be called in the order of inherit\n      var initializers = sub.__initializers__;\n\n      for (var i = 0; i < initializers.length; i++) {\n        initializers[i].apply(this, arguments);\n      }\n    }\n  }; // save super constructor\n\n\n  sub.__super__ = _super; // Initialize function will be called after all the super constructor is called\n\n  if (!_super.__initializers__) {\n    sub.__initializers__ = [];\n  } else {\n    sub.__initializers__ = _super.__initializers__.slice();\n  }\n\n  if (initialize) {\n    sub.__initializers__.push(initialize);\n  }\n\n  var Ctor = function Ctor() {};\n\n  Ctor.prototype = _super.prototype;\n  sub.prototype = new Ctor();\n  sub.prototype.constructor = sub;\n  extend(sub.prototype, proto); // extend the derive method as a static method;\n\n  sub.extend = _super.extend; // DEPCRATED\n\n  sub.derive = _super.extend;\n  return sub;\n}\n\nfunction extend(target, source) {\n  if (!source) {\n    return;\n  }\n\n  for (var name in source) {\n    if (source.hasOwnProperty(name)) {\n      target[name] = source[name];\n    }\n  }\n}\n\nfunction extendWithPropList(target, source, propList) {\n  for (var i = 0; i < propList.length; i++) {\n    var propName = propList[i];\n    target[propName] = source[propName];\n  }\n}\n/**\n * @alias clay.core.mixin.extend\n * @mixin\n */\n\n\nexport default {\n  extend: derive,\n  // DEPCRATED\n  derive: derive\n};","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_claygl@1.3.0@claygl/src/core/mixin/extend.js"],"names":["derive","makeDefaultOpt","initialize","proto","_super","propList","Function","propName","hasOwnProperty","push","sub","options","apply","arguments","extend","call","extendWithPropList","constructor","initializers","__initializers__","i","length","__super__","slice","Ctor","prototype","target","source","name"],"mappings":"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","sourcesContent":["/**\n * Extend a sub class from base class\n * @param {object|Function} makeDefaultOpt default option of this sub class, method of the sub can use this.xxx to access this option\n * @param {Function} [initialize] Initialize after the sub class is instantiated\n * @param {Object} [proto] Prototype methods/properties of the sub class\n * @memberOf clay.core.mixin.extend\n * @return {Function}\n */\nfunction derive(makeDefaultOpt, initialize/*optional*/, proto/*optional*/) {\n\n    if (typeof initialize == 'object') {\n        proto = initialize;\n        initialize = null;\n    }\n\n    var _super = this;\n\n    var propList;\n    if (!(makeDefaultOpt instanceof Function)) {\n        // Optimize the property iterate if it have been fixed\n        propList = [];\n        for (var propName in makeDefaultOpt) {\n            if (makeDefaultOpt.hasOwnProperty(propName)) {\n                propList.push(propName);\n            }\n        }\n    }\n\n    var sub = function(options) {\n\n        // call super constructor\n        _super.apply(this, arguments);\n\n        if (makeDefaultOpt instanceof Function) {\n            // Invoke makeDefaultOpt each time if it is a function, So we can make sure each\n            // property in the object will not be shared by mutiple instances\n            extend(this, makeDefaultOpt.call(this, options));\n        }\n        else {\n            extendWithPropList(this, makeDefaultOpt, propList);\n        }\n\n        if (this.constructor === sub) {\n            // Initialize function will be called in the order of inherit\n            var initializers = sub.__initializers__;\n            for (var i = 0; i < initializers.length; i++) {\n                initializers[i].apply(this, arguments);\n            }\n        }\n    };\n    // save super constructor\n    sub.__super__ = _super;\n    // Initialize function will be called after all the super constructor is called\n    if (!_super.__initializers__) {\n        sub.__initializers__ = [];\n    } else {\n        sub.__initializers__ = _super.__initializers__.slice();\n    }\n    if (initialize) {\n        sub.__initializers__.push(initialize);\n    }\n\n    var Ctor = function() {};\n    Ctor.prototype = _super.prototype;\n    sub.prototype = new Ctor();\n    sub.prototype.constructor = sub;\n    extend(sub.prototype, proto);\n\n    // extend the derive method as a static method;\n    sub.extend = _super.extend;\n\n    // DEPCRATED\n    sub.derive = _super.extend;\n\n    return sub;\n}\n\nfunction extend(target, source) {\n    if (!source) {\n        return;\n    }\n    for (var name in source) {\n        if (source.hasOwnProperty(name)) {\n            target[name] = source[name];\n        }\n    }\n}\n\nfunction extendWithPropList(target, source, propList) {\n    for (var i = 0; i < propList.length; i++) {\n        var propName = propList[i];\n        target[propName] = source[propName];\n    }\n}\n\n/**\n * @alias clay.core.mixin.extend\n * @mixin\n */\nexport default {\n\n    extend: derive,\n\n    // DEPCRATED\n    derive: derive\n};\n"]},"metadata":{},"sourceType":"module"}