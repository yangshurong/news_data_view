{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n\n/*\n * @module echarts-gl/core/ViewGL\n * @author Yi Shen(http://github.com/pissang)\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Scene from 'claygl/src/Scene';\nimport ShadowMapPass from 'claygl/src/prePass/ShadowMap';\nimport PerspectiveCamera from 'claygl/src/camera/Perspective';\nimport OrthographicCamera from 'claygl/src/camera/Orthographic';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport notifier from 'claygl/src/core/mixin/notifier';\nimport EffectCompositor from '../effect/EffectCompositor';\nimport TemporalSuperSampling from '../effect/TemporalSuperSampling';\nimport halton from '../effect/halton';\n/**\n * @constructor\n * @alias module:echarts-gl/core/ViewGL\n * @param {string} [projection='perspective']\n */\n\nfunction ViewGL(projection) {\n  projection = projection || 'perspective';\n  /**\n   * @type {module:echarts-gl/core/LayerGL}\n   */\n\n  this.layer = null;\n  /**\n   * @type {clay.Scene}\n   */\n\n  this.scene = new Scene();\n  /**\n   * @type {clay.Node}\n   */\n\n  this.rootNode = this.scene;\n  this.viewport = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  this.setProjection(projection);\n  this._compositor = new EffectCompositor();\n  this._temporalSS = new TemporalSuperSampling();\n  this._shadowMapPass = new ShadowMapPass();\n  var pcfKernels = [];\n  var off = 0;\n\n  for (var i = 0; i < 30; i++) {\n    var pcfKernel = [];\n\n    for (var k = 0; k < 6; k++) {\n      pcfKernel.push(halton(off, 2) * 4.0 - 2.0);\n      pcfKernel.push(halton(off, 3) * 4.0 - 2.0);\n      off++;\n    }\n\n    pcfKernels.push(pcfKernel);\n  }\n\n  this._pcfKernels = pcfKernels;\n  this.scene.on('beforerender', function (renderer, scene, camera) {\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n  }, this);\n}\n/**\n * Set camera type of group\n * @param {string} cameraType 'perspective' | 'orthographic'\n */\n\n\nViewGL.prototype.setProjection = function (projection) {\n  var oldCamera = this.camera;\n  oldCamera && oldCamera.update();\n\n  if (projection === 'perspective') {\n    if (!(this.camera instanceof PerspectiveCamera)) {\n      this.camera = new PerspectiveCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } else {\n    if (!(this.camera instanceof OrthographicCamera)) {\n      this.camera = new OrthographicCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } // PENDING\n\n\n  this.camera.near = 0.1;\n  this.camera.far = 2000;\n};\n/**\n * Set viewport of group\n * @param {number} x Viewport left bottom x\n * @param {number} y Viewport left bottom y\n * @param {number} width Viewport height\n * @param {number} height Viewport height\n * @param {number} [dpr=1]\n */\n\n\nViewGL.prototype.setViewport = function (x, y, width, height, dpr) {\n  if (this.camera instanceof PerspectiveCamera) {\n    this.camera.aspect = width / height;\n  }\n\n  dpr = dpr || 1;\n  this.viewport.x = x;\n  this.viewport.y = y;\n  this.viewport.width = width;\n  this.viewport.height = height;\n  this.viewport.devicePixelRatio = dpr; // Source and output of compositor use high dpr texture.\n  // But the intermediate texture of bloom, dof effects use fixed 1.0 dpr\n\n  this._compositor.resize(width * dpr, height * dpr);\n\n  this._temporalSS.resize(width * dpr, height * dpr);\n};\n/**\n * If contain screen point x, y\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @return {boolean}\n */\n\n\nViewGL.prototype.containPoint = function (x, y) {\n  var viewport = this.viewport;\n  var height = this.layer.renderer.getHeight(); // Flip y;\n\n  y = height - y;\n  return x >= viewport.x && y >= viewport.y && x <= viewport.x + viewport.width && y <= viewport.y + viewport.height;\n};\n/**\n * Cast a ray\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @param {clay.math.Ray} out\n * @return {clay.math.Ray}\n */\n\n\nvar ndc = new Vector2();\n\nViewGL.prototype.castRay = function (x, y, out) {\n  var renderer = this.layer.renderer;\n  var oldViewport = renderer.viewport;\n  renderer.viewport = this.viewport;\n  renderer.screenToNDC(x, y, ndc);\n  this.camera.castRay(ndc, out);\n  renderer.viewport = oldViewport;\n  return out;\n};\n/**\n * Prepare and update scene before render\n */\n\n\nViewGL.prototype.prepareRender = function () {\n  this.scene.update();\n  this.camera.update();\n  this.scene.updateLights();\n  var renderList = this.scene.updateRenderList(this.camera);\n  this._needsSortProgressively = false; // If has any transparent mesh needs sort triangles progressively.\n\n  for (var i = 0; i < renderList.transparent.length; i++) {\n    var renderable = renderList.transparent[i];\n    var geometry = renderable.geometry;\n\n    if (geometry.needsSortVerticesProgressively && geometry.needsSortVerticesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n\n    if (geometry.needsSortTrianglesProgressively && geometry.needsSortTrianglesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n  }\n\n  this._frame = 0;\n\n  this._temporalSS.resetFrame(); // var lights = this.scene.getLights();\n  // for (var i = 0; i < lights.length; i++) {\n  //     if (lights[i].cubemap) {\n  //         if (this._compositor && this._compositor.isSSREnabled()) {\n  //             lights[i].invisible = true;\n  //         }\n  //         else {\n  //             lights[i].invisible = false;\n  //         }\n  //     }\n  // }\n\n};\n\nViewGL.prototype.render = function (renderer, accumulating) {\n  this._doRender(renderer, accumulating, this._frame);\n\n  this._frame++;\n};\n\nViewGL.prototype.needsAccumulate = function () {\n  return this.needsTemporalSS() || this._needsSortProgressively;\n};\n\nViewGL.prototype.needsTemporalSS = function () {\n  var enableTemporalSS = this._enableTemporalSS;\n\n  if (enableTemporalSS === 'auto') {\n    enableTemporalSS = this._enablePostEffect;\n  }\n\n  return enableTemporalSS;\n};\n\nViewGL.prototype.hasDOF = function () {\n  return this._enableDOF;\n};\n\nViewGL.prototype.isAccumulateFinished = function () {\n  return this.needsTemporalSS() ? this._temporalSS.isFinished() : this._frame > 30;\n};\n\nViewGL.prototype._doRender = function (renderer, accumulating, accumFrame) {\n  var scene = this.scene;\n  var camera = this.camera;\n  accumFrame = accumFrame || 0;\n\n  this._updateTransparent(renderer, scene, camera, accumFrame);\n\n  if (!accumulating) {\n    this._shadowMapPass.kernelPCF = this._pcfKernels[0]; // Not render shadowmap pass in accumulating frame.\n\n    this._shadowMapPass.render(renderer, scene, camera, true);\n  }\n\n  this._updateShadowPCFKernel(accumFrame); // Shadowmap will set clear color.\n\n\n  var bgColor = renderer.clearColor;\n  renderer.gl.clearColor(bgColor[0], bgColor[1], bgColor[2], bgColor[3]);\n\n  if (this._enablePostEffect) {\n    // normal render also needs to be jittered when have edge pass.\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n\n    this._compositor.updateNormal(renderer, scene, camera, this._temporalSS.getFrame());\n  } // Always update SSAO to make sure have correct ssaoMap status\n\n\n  this._updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n\n  if (this._enablePostEffect) {\n    var frameBuffer = this._compositor.getSourceFrameBuffer();\n\n    frameBuffer.bind(renderer);\n    renderer.gl.clear(renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT);\n    renderer.render(scene, camera, true, true);\n    frameBuffer.unbind(renderer);\n\n    if (this.needsTemporalSS() && accumulating) {\n      this._compositor.composite(renderer, scene, camera, this._temporalSS.getSourceFrameBuffer(), this._temporalSS.getFrame());\n\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n\n      this._compositor.composite(renderer, scene, camera, null, 0);\n    }\n  } else {\n    if (this.needsTemporalSS() && accumulating) {\n      var frameBuffer = this._temporalSS.getSourceFrameBuffer();\n\n      frameBuffer.bind(renderer);\n      renderer.saveClear();\n      renderer.clearBit = renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT;\n      renderer.render(scene, camera, true, true);\n      renderer.restoreClear();\n      frameBuffer.unbind(renderer);\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n      renderer.render(scene, camera, true, true);\n    }\n  } // this._shadowMapPass.renderDebug(renderer);\n  // this._compositor._normalPass.renderDebug(renderer);\n\n};\n\nViewGL.prototype._updateTransparent = function (renderer, scene, camera, frame) {\n  var v3 = new Vector3();\n  var invWorldTransform = new Matrix4();\n  var cameraWorldPosition = camera.getWorldPosition();\n  var transparentList = scene.getRenderList(camera).transparent; // Sort transparent object.\n\n  for (var i = 0; i < transparentList.length; i++) {\n    var renderable = transparentList[i];\n    var geometry = renderable.geometry;\n    Matrix4.invert(invWorldTransform, renderable.worldTransform);\n    Vector3.transformMat4(v3, cameraWorldPosition, invWorldTransform);\n\n    if (geometry.needsSortTriangles && geometry.needsSortTriangles()) {\n      geometry.doSortTriangles(v3, frame);\n    }\n\n    if (geometry.needsSortVertices && geometry.needsSortVertices()) {\n      geometry.doSortVertices(v3, frame);\n    }\n  }\n};\n\nViewGL.prototype._updateSSAO = function (renderer, scene, camera) {\n  var ifEnableSSAO = this._enableSSAO && this._enablePostEffect;\n\n  if (ifEnableSSAO) {\n    this._compositor.updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n  }\n\n  var renderList = scene.getRenderList(camera);\n\n  for (var i = 0; i < renderList.opaque.length; i++) {\n    var renderable = renderList.opaque[i]; // PENDING\n\n    if (renderable.renderNormal) {\n      renderable.material[ifEnableSSAO ? 'enableTexture' : 'disableTexture']('ssaoMap');\n    }\n\n    if (ifEnableSSAO) {\n      renderable.material.set('ssaoMap', this._compositor.getSSAOTexture());\n    }\n  }\n};\n\nViewGL.prototype._updateShadowPCFKernel = function (frame) {\n  var pcfKernel = this._pcfKernels[frame % this._pcfKernels.length];\n  var renderList = this.scene.getRenderList(this.camera);\n  var opaqueList = renderList.opaque;\n\n  for (var i = 0; i < opaqueList.length; i++) {\n    if (opaqueList[i].receiveShadow) {\n      opaqueList[i].material.set('pcfKernel', pcfKernel);\n      opaqueList[i].material.define('fragment', 'PCF_KERNEL_SIZE', pcfKernel.length / 2);\n    }\n  }\n};\n\nViewGL.prototype.dispose = function (renderer) {\n  this._compositor.dispose(renderer.gl);\n\n  this._temporalSS.dispose(renderer.gl);\n\n  this._shadowMapPass.dispose(renderer);\n};\n/**\n * @param {module:echarts/Model} Post effect model\n */\n\n\nViewGL.prototype.setPostEffect = function (postEffectModel, api) {\n  var compositor = this._compositor;\n  this._enablePostEffect = postEffectModel.get('enable');\n  var bloomModel = postEffectModel.getModel('bloom');\n  var edgeModel = postEffectModel.getModel('edge');\n  var dofModel = postEffectModel.getModel('DOF', postEffectModel.getModel('depthOfField'));\n  var ssaoModel = postEffectModel.getModel('SSAO', postEffectModel.getModel('screenSpaceAmbientOcclusion'));\n  var ssrModel = postEffectModel.getModel('SSR', postEffectModel.getModel('screenSpaceReflection'));\n  var fxaaModel = postEffectModel.getModel('FXAA');\n  var colorCorrModel = postEffectModel.getModel('colorCorrection');\n  bloomModel.get('enable') ? compositor.enableBloom() : compositor.disableBloom();\n  dofModel.get('enable') ? compositor.enableDOF() : compositor.disableDOF();\n  ssrModel.get('enable') ? compositor.enableSSR() : compositor.disableSSR();\n  colorCorrModel.get('enable') ? compositor.enableColorCorrection() : compositor.disableColorCorrection();\n  edgeModel.get('enable') ? compositor.enableEdge() : compositor.disableEdge();\n  fxaaModel.get('enable') ? compositor.enableFXAA() : compositor.disableFXAA();\n  this._enableDOF = dofModel.get('enable');\n  this._enableSSAO = ssaoModel.get('enable');\n  this._enableSSAO ? compositor.enableSSAO() : compositor.disableSSAO();\n  compositor.setBloomIntensity(bloomModel.get('intensity'));\n  compositor.setEdgeColor(edgeModel.get('color'));\n  compositor.setColorLookupTexture(colorCorrModel.get('lookupTexture'), api);\n  compositor.setExposure(colorCorrModel.get('exposure'));\n  ['radius', 'quality', 'intensity'].forEach(function (name) {\n    compositor.setSSAOParameter(name, ssaoModel.get(name));\n  });\n  ['quality', 'maxRoughness', 'physical'].forEach(function (name) {\n    compositor.setSSRParameter(name, ssrModel.get(name));\n  });\n  ['quality', 'focalDistance', 'focalRange', 'blurRadius', 'fstop'].forEach(function (name) {\n    compositor.setDOFParameter(name, dofModel.get(name));\n  });\n  ['brightness', 'contrast', 'saturation'].forEach(function (name) {\n    compositor.setColorCorrection(name, colorCorrModel.get(name));\n  });\n};\n\nViewGL.prototype.setDOFFocusOnPoint = function (depth) {\n  if (this._enablePostEffect) {\n    if (depth > this.camera.far || depth < this.camera.near) {\n      return;\n    }\n\n    this._compositor.setDOFParameter('focalDistance', depth);\n\n    return true;\n  }\n};\n\nViewGL.prototype.setTemporalSuperSampling = function (temporalSuperSamplingModel) {\n  this._enableTemporalSS = temporalSuperSamplingModel.get('enable');\n};\n\nViewGL.prototype.isLinearSpace = function () {\n  return this._enablePostEffect;\n};\n\nViewGL.prototype.setRootNode = function (rootNode) {\n  if (this.rootNode === rootNode) {\n    return;\n  }\n\n  var children = this.rootNode.children();\n\n  for (var i = 0; i < children.length; i++) {\n    rootNode.add(children[i]);\n  }\n\n  if (rootNode !== this.scene) {\n    this.scene.add(rootNode);\n  }\n\n  this.rootNode = rootNode;\n}; // Proxies\n\n\nViewGL.prototype.add = function (node3D) {\n  this.rootNode.add(node3D);\n};\n\nViewGL.prototype.remove = function (node3D) {\n  this.rootNode.remove(node3D);\n};\n\nViewGL.prototype.removeAll = function (node3D) {\n  this.rootNode.removeAll(node3D);\n};\n\nObject.assign(ViewGL.prototype, notifier);\nexport default ViewGL;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/core/ViewGL.js"],"names":["echarts","Scene","ShadowMapPass","PerspectiveCamera","OrthographicCamera","Matrix4","Vector3","Vector2","notifier","EffectCompositor","TemporalSuperSampling","halton","ViewGL","projection","layer","scene","rootNode","viewport","x","y","width","height","setProjection","_compositor","_temporalSS","_shadowMapPass","pcfKernels","off","i","pcfKernel","k","push","_pcfKernels","on","renderer","camera","needsTemporalSS","jitterProjection","prototype","oldCamera","update","setLocalTransform","localTransform","near","far","setViewport","dpr","aspect","devicePixelRatio","resize","containPoint","getHeight","ndc","castRay","out","oldViewport","screenToNDC","prepareRender","updateLights","renderList","updateRenderList","_needsSortProgressively","transparent","length","renderable","geometry","needsSortVerticesProgressively","needsSortTrianglesProgressively","_frame","resetFrame","render","accumulating","_doRender","needsAccumulate","enableTemporalSS","_enableTemporalSS","_enablePostEffect","hasDOF","_enableDOF","isAccumulateFinished","isFinished","accumFrame","_updateTransparent","kernelPCF","_updateShadowPCFKernel","bgColor","clearColor","gl","updateNormal","getFrame","_updateSSAO","frameBuffer","getSourceFrameBuffer","bind","clear","DEPTH_BUFFER_BIT","COLOR_BUFFER_BIT","unbind","composite","saveClear","clearBit","restoreClear","frame","v3","invWorldTransform","cameraWorldPosition","getWorldPosition","transparentList","getRenderList","invert","worldTransform","transformMat4","needsSortTriangles","doSortTriangles","needsSortVertices","doSortVertices","ifEnableSSAO","_enableSSAO","updateSSAO","opaque","renderNormal","material","set","getSSAOTexture","opaqueList","receiveShadow","define","dispose","setPostEffect","postEffectModel","api","compositor","get","bloomModel","getModel","edgeModel","dofModel","ssaoModel","ssrModel","fxaaModel","colorCorrModel","enableBloom","disableBloom","enableDOF","disableDOF","enableSSR","disableSSR","enableColorCorrection","disableColorCorrection","enableEdge","disableEdge","enableFXAA","disableFXAA","enableSSAO","disableSSAO","setBloomIntensity","setEdgeColor","setColorLookupTexture","setExposure","forEach","name","setSSAOParameter","setSSRParameter","setDOFParameter","setColorCorrection","setDOFFocusOnPoint","depth","setTemporalSuperSampling","temporalSuperSamplingModel","isLinearSpace","setRootNode","children","add","node3D","remove","removeAll","Object","assign"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BA,EAAAA,UAAU,GAAGA,UAAU,IAAI,aAA3B;AACA;AACF;AACA;;AAEE,OAAKC,KAAL,GAAa,IAAb;AACA;AACF;AACA;;AAEE,OAAKC,KAAL,GAAa,IAAId,KAAJ,EAAb;AACA;AACF;AACA;;AAEE,OAAKe,QAAL,GAAgB,KAAKD,KAArB;AACA,OAAKE,QAAL,GAAgB;AACdC,IAAAA,CAAC,EAAE,CADW;AAEdC,IAAAA,CAAC,EAAE,CAFW;AAGdC,IAAAA,KAAK,EAAE,CAHO;AAIdC,IAAAA,MAAM,EAAE;AAJM,GAAhB;AAMA,OAAKC,aAAL,CAAmBT,UAAnB;AACA,OAAKU,WAAL,GAAmB,IAAId,gBAAJ,EAAnB;AACA,OAAKe,WAAL,GAAmB,IAAId,qBAAJ,EAAnB;AACA,OAAKe,cAAL,GAAsB,IAAIvB,aAAJ,EAAtB;AACA,MAAIwB,UAAU,GAAG,EAAjB;AACA,MAAIC,GAAG,GAAG,CAAV;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,MAAAA,SAAS,CAACE,IAAV,CAAepB,MAAM,CAACgB,GAAD,EAAM,CAAN,CAAN,GAAiB,GAAjB,GAAuB,GAAtC;AACAE,MAAAA,SAAS,CAACE,IAAV,CAAepB,MAAM,CAACgB,GAAD,EAAM,CAAN,CAAN,GAAiB,GAAjB,GAAuB,GAAtC;AACAA,MAAAA,GAAG;AACJ;;AAEDD,IAAAA,UAAU,CAACK,IAAX,CAAgBF,SAAhB;AACD;;AAED,OAAKG,WAAL,GAAmBN,UAAnB;AACA,OAAKX,KAAL,CAAWkB,EAAX,CAAc,cAAd,EAA8B,UAAUC,QAAV,EAAoBnB,KAApB,EAA2BoB,MAA3B,EAAmC;AAC/D,QAAI,KAAKC,eAAL,EAAJ,EAA4B;AAC1B,WAAKZ,WAAL,CAAiBa,gBAAjB,CAAkCH,QAAlC,EAA4CC,MAA5C;AACD;AACF,GAJD,EAIG,IAJH;AAKD;AACD;AACA;AACA;AACA;;;AAGAvB,MAAM,CAAC0B,SAAP,CAAiBhB,aAAjB,GAAiC,UAAUT,UAAV,EAAsB;AACrD,MAAI0B,SAAS,GAAG,KAAKJ,MAArB;AACAI,EAAAA,SAAS,IAAIA,SAAS,CAACC,MAAV,EAAb;;AAEA,MAAI3B,UAAU,KAAK,aAAnB,EAAkC;AAChC,QAAI,EAAE,KAAKsB,MAAL,YAAuBhC,iBAAzB,CAAJ,EAAiD;AAC/C,WAAKgC,MAAL,GAAc,IAAIhC,iBAAJ,EAAd;;AAEA,UAAIoC,SAAJ,EAAe;AACb,aAAKJ,MAAL,CAAYM,iBAAZ,CAA8BF,SAAS,CAACG,cAAxC;AACD;AACF;AACF,GARD,MAQO;AACL,QAAI,EAAE,KAAKP,MAAL,YAAuB/B,kBAAzB,CAAJ,EAAkD;AAChD,WAAK+B,MAAL,GAAc,IAAI/B,kBAAJ,EAAd;;AAEA,UAAImC,SAAJ,EAAe;AACb,aAAKJ,MAAL,CAAYM,iBAAZ,CAA8BF,SAAS,CAACG,cAAxC;AACD;AACF;AACF,GApBoD,CAoBnD;;;AAGF,OAAKP,MAAL,CAAYQ,IAAZ,GAAmB,GAAnB;AACA,OAAKR,MAAL,CAAYS,GAAZ,GAAkB,IAAlB;AACD,CAzBD;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAhC,MAAM,CAAC0B,SAAP,CAAiBO,WAAjB,GAA+B,UAAU3B,CAAV,EAAaC,CAAb,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+ByB,GAA/B,EAAoC;AACjE,MAAI,KAAKX,MAAL,YAAuBhC,iBAA3B,EAA8C;AAC5C,SAAKgC,MAAL,CAAYY,MAAZ,GAAqB3B,KAAK,GAAGC,MAA7B;AACD;;AAEDyB,EAAAA,GAAG,GAAGA,GAAG,IAAI,CAAb;AACA,OAAK7B,QAAL,CAAcC,CAAd,GAAkBA,CAAlB;AACA,OAAKD,QAAL,CAAcE,CAAd,GAAkBA,CAAlB;AACA,OAAKF,QAAL,CAAcG,KAAd,GAAsBA,KAAtB;AACA,OAAKH,QAAL,CAAcI,MAAd,GAAuBA,MAAvB;AACA,OAAKJ,QAAL,CAAc+B,gBAAd,GAAiCF,GAAjC,CAViE,CAU3B;AACtC;;AAEA,OAAKvB,WAAL,CAAiB0B,MAAjB,CAAwB7B,KAAK,GAAG0B,GAAhC,EAAqCzB,MAAM,GAAGyB,GAA9C;;AAEA,OAAKtB,WAAL,CAAiByB,MAAjB,CAAwB7B,KAAK,GAAG0B,GAAhC,EAAqCzB,MAAM,GAAGyB,GAA9C;AACD,CAhBD;AAiBA;AACA;AACA;AACA;AACA;AACA;;;AAGAlC,MAAM,CAAC0B,SAAP,CAAiBY,YAAjB,GAAgC,UAAUhC,CAAV,EAAaC,CAAb,EAAgB;AAC9C,MAAIF,QAAQ,GAAG,KAAKA,QAApB;AACA,MAAII,MAAM,GAAG,KAAKP,KAAL,CAAWoB,QAAX,CAAoBiB,SAApB,EAAb,CAF8C,CAEA;;AAE9ChC,EAAAA,CAAC,GAAGE,MAAM,GAAGF,CAAb;AACA,SAAOD,CAAC,IAAID,QAAQ,CAACC,CAAd,IAAmBC,CAAC,IAAIF,QAAQ,CAACE,CAAjC,IAAsCD,CAAC,IAAID,QAAQ,CAACC,CAAT,GAAaD,QAAQ,CAACG,KAAjE,IAA0ED,CAAC,IAAIF,QAAQ,CAACE,CAAT,GAAaF,QAAQ,CAACI,MAA5G;AACD,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAI+B,GAAG,GAAG,IAAI7C,OAAJ,EAAV;;AAEAK,MAAM,CAAC0B,SAAP,CAAiBe,OAAjB,GAA2B,UAAUnC,CAAV,EAAaC,CAAb,EAAgBmC,GAAhB,EAAqB;AAC9C,MAAIpB,QAAQ,GAAG,KAAKpB,KAAL,CAAWoB,QAA1B;AACA,MAAIqB,WAAW,GAAGrB,QAAQ,CAACjB,QAA3B;AACAiB,EAAAA,QAAQ,CAACjB,QAAT,GAAoB,KAAKA,QAAzB;AACAiB,EAAAA,QAAQ,CAACsB,WAAT,CAAqBtC,CAArB,EAAwBC,CAAxB,EAA2BiC,GAA3B;AACA,OAAKjB,MAAL,CAAYkB,OAAZ,CAAoBD,GAApB,EAAyBE,GAAzB;AACApB,EAAAA,QAAQ,CAACjB,QAAT,GAAoBsC,WAApB;AACA,SAAOD,GAAP;AACD,CARD;AASA;AACA;AACA;;;AAGA1C,MAAM,CAAC0B,SAAP,CAAiBmB,aAAjB,GAAiC,YAAY;AAC3C,OAAK1C,KAAL,CAAWyB,MAAX;AACA,OAAKL,MAAL,CAAYK,MAAZ;AACA,OAAKzB,KAAL,CAAW2C,YAAX;AACA,MAAIC,UAAU,GAAG,KAAK5C,KAAL,CAAW6C,gBAAX,CAA4B,KAAKzB,MAAjC,CAAjB;AACA,OAAK0B,uBAAL,GAA+B,KAA/B,CAL2C,CAKL;;AAEtC,OAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,UAAU,CAACG,WAAX,CAAuBC,MAA3C,EAAmDnC,CAAC,EAApD,EAAwD;AACtD,QAAIoC,UAAU,GAAGL,UAAU,CAACG,WAAX,CAAuBlC,CAAvB,CAAjB;AACA,QAAIqC,QAAQ,GAAGD,UAAU,CAACC,QAA1B;;AAEA,QAAIA,QAAQ,CAACC,8BAAT,IAA2CD,QAAQ,CAACC,8BAAT,EAA/C,EAA0F;AACxF,WAAKL,uBAAL,GAA+B,IAA/B;AACD;;AAED,QAAII,QAAQ,CAACE,+BAAT,IAA4CF,QAAQ,CAACE,+BAAT,EAAhD,EAA4F;AAC1F,WAAKN,uBAAL,GAA+B,IAA/B;AACD;AACF;;AAED,OAAKO,MAAL,GAAc,CAAd;;AAEA,OAAK5C,WAAL,CAAiB6C,UAAjB,GAtB2C,CAsBZ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAED,CAlCD;;AAoCAzD,MAAM,CAAC0B,SAAP,CAAiBgC,MAAjB,GAA0B,UAAUpC,QAAV,EAAoBqC,YAApB,EAAkC;AAC1D,OAAKC,SAAL,CAAetC,QAAf,EAAyBqC,YAAzB,EAAuC,KAAKH,MAA5C;;AAEA,OAAKA,MAAL;AACD,CAJD;;AAMAxD,MAAM,CAAC0B,SAAP,CAAiBmC,eAAjB,GAAmC,YAAY;AAC7C,SAAO,KAAKrC,eAAL,MAA0B,KAAKyB,uBAAtC;AACD,CAFD;;AAIAjD,MAAM,CAAC0B,SAAP,CAAiBF,eAAjB,GAAmC,YAAY;AAC7C,MAAIsC,gBAAgB,GAAG,KAAKC,iBAA5B;;AAEA,MAAID,gBAAgB,KAAK,MAAzB,EAAiC;AAC/BA,IAAAA,gBAAgB,GAAG,KAAKE,iBAAxB;AACD;;AAED,SAAOF,gBAAP;AACD,CARD;;AAUA9D,MAAM,CAAC0B,SAAP,CAAiBuC,MAAjB,GAA0B,YAAY;AACpC,SAAO,KAAKC,UAAZ;AACD,CAFD;;AAIAlE,MAAM,CAAC0B,SAAP,CAAiByC,oBAAjB,GAAwC,YAAY;AAClD,SAAO,KAAK3C,eAAL,KAAyB,KAAKZ,WAAL,CAAiBwD,UAAjB,EAAzB,GAAyD,KAAKZ,MAAL,GAAc,EAA9E;AACD,CAFD;;AAIAxD,MAAM,CAAC0B,SAAP,CAAiBkC,SAAjB,GAA6B,UAAUtC,QAAV,EAAoBqC,YAApB,EAAkCU,UAAlC,EAA8C;AACzE,MAAIlE,KAAK,GAAG,KAAKA,KAAjB;AACA,MAAIoB,MAAM,GAAG,KAAKA,MAAlB;AACA8C,EAAAA,UAAU,GAAGA,UAAU,IAAI,CAA3B;;AAEA,OAAKC,kBAAL,CAAwBhD,QAAxB,EAAkCnB,KAAlC,EAAyCoB,MAAzC,EAAiD8C,UAAjD;;AAEA,MAAI,CAACV,YAAL,EAAmB;AACjB,SAAK9C,cAAL,CAAoB0D,SAApB,GAAgC,KAAKnD,WAAL,CAAiB,CAAjB,CAAhC,CADiB,CACoC;;AAErD,SAAKP,cAAL,CAAoB6C,MAApB,CAA2BpC,QAA3B,EAAqCnB,KAArC,EAA4CoB,MAA5C,EAAoD,IAApD;AACD;;AAED,OAAKiD,sBAAL,CAA4BH,UAA5B,EAbyE,CAahC;;;AAGzC,MAAII,OAAO,GAAGnD,QAAQ,CAACoD,UAAvB;AACApD,EAAAA,QAAQ,CAACqD,EAAT,CAAYD,UAAZ,CAAuBD,OAAO,CAAC,CAAD,CAA9B,EAAmCA,OAAO,CAAC,CAAD,CAA1C,EAA+CA,OAAO,CAAC,CAAD,CAAtD,EAA2DA,OAAO,CAAC,CAAD,CAAlE;;AAEA,MAAI,KAAKT,iBAAT,EAA4B;AAC1B;AACA,QAAI,KAAKxC,eAAL,EAAJ,EAA4B;AAC1B,WAAKZ,WAAL,CAAiBa,gBAAjB,CAAkCH,QAAlC,EAA4CC,MAA5C;AACD;;AAED,SAAKZ,WAAL,CAAiBiE,YAAjB,CAA8BtD,QAA9B,EAAwCnB,KAAxC,EAA+CoB,MAA/C,EAAuD,KAAKX,WAAL,CAAiBiE,QAAjB,EAAvD;AACD,GA1BwE,CA0BvE;;;AAGF,OAAKC,WAAL,CAAiBxD,QAAjB,EAA2BnB,KAA3B,EAAkCoB,MAAlC,EAA0C,KAAKX,WAAL,CAAiBiE,QAAjB,EAA1C;;AAEA,MAAI,KAAKb,iBAAT,EAA4B;AAC1B,QAAIe,WAAW,GAAG,KAAKpE,WAAL,CAAiBqE,oBAAjB,EAAlB;;AAEAD,IAAAA,WAAW,CAACE,IAAZ,CAAiB3D,QAAjB;AACAA,IAAAA,QAAQ,CAACqD,EAAT,CAAYO,KAAZ,CAAkB5D,QAAQ,CAACqD,EAAT,CAAYQ,gBAAZ,GAA+B7D,QAAQ,CAACqD,EAAT,CAAYS,gBAA7D;AACA9D,IAAAA,QAAQ,CAACoC,MAAT,CAAgBvD,KAAhB,EAAuBoB,MAAvB,EAA+B,IAA/B,EAAqC,IAArC;AACAwD,IAAAA,WAAW,CAACM,MAAZ,CAAmB/D,QAAnB;;AAEA,QAAI,KAAKE,eAAL,MAA0BmC,YAA9B,EAA4C;AAC1C,WAAKhD,WAAL,CAAiB2E,SAAjB,CAA2BhE,QAA3B,EAAqCnB,KAArC,EAA4CoB,MAA5C,EAAoD,KAAKX,WAAL,CAAiBoE,oBAAjB,EAApD,EAA6F,KAAKpE,WAAL,CAAiBiE,QAAjB,EAA7F;;AAEAvD,MAAAA,QAAQ,CAACW,WAAT,CAAqB,KAAK5B,QAA1B;;AAEA,WAAKO,WAAL,CAAiB8C,MAAjB,CAAwBpC,QAAxB;AACD,KAND,MAMO;AACLA,MAAAA,QAAQ,CAACW,WAAT,CAAqB,KAAK5B,QAA1B;;AAEA,WAAKM,WAAL,CAAiB2E,SAAjB,CAA2BhE,QAA3B,EAAqCnB,KAArC,EAA4CoB,MAA5C,EAAoD,IAApD,EAA0D,CAA1D;AACD;AACF,GAnBD,MAmBO;AACL,QAAI,KAAKC,eAAL,MAA0BmC,YAA9B,EAA4C;AAC1C,UAAIoB,WAAW,GAAG,KAAKnE,WAAL,CAAiBoE,oBAAjB,EAAlB;;AAEAD,MAAAA,WAAW,CAACE,IAAZ,CAAiB3D,QAAjB;AACAA,MAAAA,QAAQ,CAACiE,SAAT;AACAjE,MAAAA,QAAQ,CAACkE,QAAT,GAAoBlE,QAAQ,CAACqD,EAAT,CAAYQ,gBAAZ,GAA+B7D,QAAQ,CAACqD,EAAT,CAAYS,gBAA/D;AACA9D,MAAAA,QAAQ,CAACoC,MAAT,CAAgBvD,KAAhB,EAAuBoB,MAAvB,EAA+B,IAA/B,EAAqC,IAArC;AACAD,MAAAA,QAAQ,CAACmE,YAAT;AACAV,MAAAA,WAAW,CAACM,MAAZ,CAAmB/D,QAAnB;AACAA,MAAAA,QAAQ,CAACW,WAAT,CAAqB,KAAK5B,QAA1B;;AAEA,WAAKO,WAAL,CAAiB8C,MAAjB,CAAwBpC,QAAxB;AACD,KAZD,MAYO;AACLA,MAAAA,QAAQ,CAACW,WAAT,CAAqB,KAAK5B,QAA1B;AACAiB,MAAAA,QAAQ,CAACoC,MAAT,CAAgBvD,KAAhB,EAAuBoB,MAAvB,EAA+B,IAA/B,EAAqC,IAArC;AACD;AACF,GAnEwE,CAmEvE;AACF;;AAED,CAtED;;AAwEAvB,MAAM,CAAC0B,SAAP,CAAiB4C,kBAAjB,GAAsC,UAAUhD,QAAV,EAAoBnB,KAApB,EAA2BoB,MAA3B,EAAmCmE,KAAnC,EAA0C;AAC9E,MAAIC,EAAE,GAAG,IAAIjG,OAAJ,EAAT;AACA,MAAIkG,iBAAiB,GAAG,IAAInG,OAAJ,EAAxB;AACA,MAAIoG,mBAAmB,GAAGtE,MAAM,CAACuE,gBAAP,EAA1B;AACA,MAAIC,eAAe,GAAG5F,KAAK,CAAC6F,aAAN,CAAoBzE,MAApB,EAA4B2B,WAAlD,CAJ8E,CAIf;;AAE/D,OAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+E,eAAe,CAAC5C,MAApC,EAA4CnC,CAAC,EAA7C,EAAiD;AAC/C,QAAIoC,UAAU,GAAG2C,eAAe,CAAC/E,CAAD,CAAhC;AACA,QAAIqC,QAAQ,GAAGD,UAAU,CAACC,QAA1B;AACA5D,IAAAA,OAAO,CAACwG,MAAR,CAAeL,iBAAf,EAAkCxC,UAAU,CAAC8C,cAA7C;AACAxG,IAAAA,OAAO,CAACyG,aAAR,CAAsBR,EAAtB,EAA0BE,mBAA1B,EAA+CD,iBAA/C;;AAEA,QAAIvC,QAAQ,CAAC+C,kBAAT,IAA+B/C,QAAQ,CAAC+C,kBAAT,EAAnC,EAAkE;AAChE/C,MAAAA,QAAQ,CAACgD,eAAT,CAAyBV,EAAzB,EAA6BD,KAA7B;AACD;;AAED,QAAIrC,QAAQ,CAACiD,iBAAT,IAA8BjD,QAAQ,CAACiD,iBAAT,EAAlC,EAAgE;AAC9DjD,MAAAA,QAAQ,CAACkD,cAAT,CAAwBZ,EAAxB,EAA4BD,KAA5B;AACD;AACF;AACF,CApBD;;AAsBA1F,MAAM,CAAC0B,SAAP,CAAiBoD,WAAjB,GAA+B,UAAUxD,QAAV,EAAoBnB,KAApB,EAA2BoB,MAA3B,EAAmC;AAChE,MAAIiF,YAAY,GAAG,KAAKC,WAAL,IAAoB,KAAKzC,iBAA5C;;AAEA,MAAIwC,YAAJ,EAAkB;AAChB,SAAK7F,WAAL,CAAiB+F,UAAjB,CAA4BpF,QAA5B,EAAsCnB,KAAtC,EAA6CoB,MAA7C,EAAqD,KAAKX,WAAL,CAAiBiE,QAAjB,EAArD;AACD;;AAED,MAAI9B,UAAU,GAAG5C,KAAK,CAAC6F,aAAN,CAAoBzE,MAApB,CAAjB;;AAEA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,UAAU,CAAC4D,MAAX,CAAkBxD,MAAtC,EAA8CnC,CAAC,EAA/C,EAAmD;AACjD,QAAIoC,UAAU,GAAGL,UAAU,CAAC4D,MAAX,CAAkB3F,CAAlB,CAAjB,CADiD,CACV;;AAEvC,QAAIoC,UAAU,CAACwD,YAAf,EAA6B;AAC3BxD,MAAAA,UAAU,CAACyD,QAAX,CAAoBL,YAAY,GAAG,eAAH,GAAqB,gBAArD,EAAuE,SAAvE;AACD;;AAED,QAAIA,YAAJ,EAAkB;AAChBpD,MAAAA,UAAU,CAACyD,QAAX,CAAoBC,GAApB,CAAwB,SAAxB,EAAmC,KAAKnG,WAAL,CAAiBoG,cAAjB,EAAnC;AACD;AACF;AACF,CApBD;;AAsBA/G,MAAM,CAAC0B,SAAP,CAAiB8C,sBAAjB,GAA0C,UAAUkB,KAAV,EAAiB;AACzD,MAAIzE,SAAS,GAAG,KAAKG,WAAL,CAAiBsE,KAAK,GAAG,KAAKtE,WAAL,CAAiB+B,MAA1C,CAAhB;AACA,MAAIJ,UAAU,GAAG,KAAK5C,KAAL,CAAW6F,aAAX,CAAyB,KAAKzE,MAA9B,CAAjB;AACA,MAAIyF,UAAU,GAAGjE,UAAU,CAAC4D,MAA5B;;AAEA,OAAK,IAAI3F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgG,UAAU,CAAC7D,MAA/B,EAAuCnC,CAAC,EAAxC,EAA4C;AAC1C,QAAIgG,UAAU,CAAChG,CAAD,CAAV,CAAciG,aAAlB,EAAiC;AAC/BD,MAAAA,UAAU,CAAChG,CAAD,CAAV,CAAc6F,QAAd,CAAuBC,GAAvB,CAA2B,WAA3B,EAAwC7F,SAAxC;AACA+F,MAAAA,UAAU,CAAChG,CAAD,CAAV,CAAc6F,QAAd,CAAuBK,MAAvB,CAA8B,UAA9B,EAA0C,iBAA1C,EAA6DjG,SAAS,CAACkC,MAAV,GAAmB,CAAhF;AACD;AACF;AACF,CAXD;;AAaAnD,MAAM,CAAC0B,SAAP,CAAiByF,OAAjB,GAA2B,UAAU7F,QAAV,EAAoB;AAC7C,OAAKX,WAAL,CAAiBwG,OAAjB,CAAyB7F,QAAQ,CAACqD,EAAlC;;AAEA,OAAK/D,WAAL,CAAiBuG,OAAjB,CAAyB7F,QAAQ,CAACqD,EAAlC;;AAEA,OAAK9D,cAAL,CAAoBsG,OAApB,CAA4B7F,QAA5B;AACD,CAND;AAOA;AACA;AACA;;;AAGAtB,MAAM,CAAC0B,SAAP,CAAiB0F,aAAjB,GAAiC,UAAUC,eAAV,EAA2BC,GAA3B,EAAgC;AAC/D,MAAIC,UAAU,GAAG,KAAK5G,WAAtB;AACA,OAAKqD,iBAAL,GAAyBqD,eAAe,CAACG,GAAhB,CAAoB,QAApB,CAAzB;AACA,MAAIC,UAAU,GAAGJ,eAAe,CAACK,QAAhB,CAAyB,OAAzB,CAAjB;AACA,MAAIC,SAAS,GAAGN,eAAe,CAACK,QAAhB,CAAyB,MAAzB,CAAhB;AACA,MAAIE,QAAQ,GAAGP,eAAe,CAACK,QAAhB,CAAyB,KAAzB,EAAgCL,eAAe,CAACK,QAAhB,CAAyB,cAAzB,CAAhC,CAAf;AACA,MAAIG,SAAS,GAAGR,eAAe,CAACK,QAAhB,CAAyB,MAAzB,EAAiCL,eAAe,CAACK,QAAhB,CAAyB,6BAAzB,CAAjC,CAAhB;AACA,MAAII,QAAQ,GAAGT,eAAe,CAACK,QAAhB,CAAyB,KAAzB,EAAgCL,eAAe,CAACK,QAAhB,CAAyB,uBAAzB,CAAhC,CAAf;AACA,MAAIK,SAAS,GAAGV,eAAe,CAACK,QAAhB,CAAyB,MAAzB,CAAhB;AACA,MAAIM,cAAc,GAAGX,eAAe,CAACK,QAAhB,CAAyB,iBAAzB,CAArB;AACAD,EAAAA,UAAU,CAACD,GAAX,CAAe,QAAf,IAA2BD,UAAU,CAACU,WAAX,EAA3B,GAAsDV,UAAU,CAACW,YAAX,EAAtD;AACAN,EAAAA,QAAQ,CAACJ,GAAT,CAAa,QAAb,IAAyBD,UAAU,CAACY,SAAX,EAAzB,GAAkDZ,UAAU,CAACa,UAAX,EAAlD;AACAN,EAAAA,QAAQ,CAACN,GAAT,CAAa,QAAb,IAAyBD,UAAU,CAACc,SAAX,EAAzB,GAAkDd,UAAU,CAACe,UAAX,EAAlD;AACAN,EAAAA,cAAc,CAACR,GAAf,CAAmB,QAAnB,IAA+BD,UAAU,CAACgB,qBAAX,EAA/B,GAAoEhB,UAAU,CAACiB,sBAAX,EAApE;AACAb,EAAAA,SAAS,CAACH,GAAV,CAAc,QAAd,IAA0BD,UAAU,CAACkB,UAAX,EAA1B,GAAoDlB,UAAU,CAACmB,WAAX,EAApD;AACAX,EAAAA,SAAS,CAACP,GAAV,CAAc,QAAd,IAA0BD,UAAU,CAACoB,UAAX,EAA1B,GAAoDpB,UAAU,CAACqB,WAAX,EAApD;AACA,OAAK1E,UAAL,GAAkB0D,QAAQ,CAACJ,GAAT,CAAa,QAAb,CAAlB;AACA,OAAKf,WAAL,GAAmBoB,SAAS,CAACL,GAAV,CAAc,QAAd,CAAnB;AACA,OAAKf,WAAL,GAAmBc,UAAU,CAACsB,UAAX,EAAnB,GAA6CtB,UAAU,CAACuB,WAAX,EAA7C;AACAvB,EAAAA,UAAU,CAACwB,iBAAX,CAA6BtB,UAAU,CAACD,GAAX,CAAe,WAAf,CAA7B;AACAD,EAAAA,UAAU,CAACyB,YAAX,CAAwBrB,SAAS,CAACH,GAAV,CAAc,OAAd,CAAxB;AACAD,EAAAA,UAAU,CAAC0B,qBAAX,CAAiCjB,cAAc,CAACR,GAAf,CAAmB,eAAnB,CAAjC,EAAsEF,GAAtE;AACAC,EAAAA,UAAU,CAAC2B,WAAX,CAAuBlB,cAAc,CAACR,GAAf,CAAmB,UAAnB,CAAvB;AACA,GAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC2B,OAAnC,CAA2C,UAAUC,IAAV,EAAgB;AACzD7B,IAAAA,UAAU,CAAC8B,gBAAX,CAA4BD,IAA5B,EAAkCvB,SAAS,CAACL,GAAV,CAAc4B,IAAd,CAAlC;AACD,GAFD;AAGA,GAAC,SAAD,EAAY,cAAZ,EAA4B,UAA5B,EAAwCD,OAAxC,CAAgD,UAAUC,IAAV,EAAgB;AAC9D7B,IAAAA,UAAU,CAAC+B,eAAX,CAA2BF,IAA3B,EAAiCtB,QAAQ,CAACN,GAAT,CAAa4B,IAAb,CAAjC;AACD,GAFD;AAGA,GAAC,SAAD,EAAY,eAAZ,EAA6B,YAA7B,EAA2C,YAA3C,EAAyD,OAAzD,EAAkED,OAAlE,CAA0E,UAAUC,IAAV,EAAgB;AACxF7B,IAAAA,UAAU,CAACgC,eAAX,CAA2BH,IAA3B,EAAiCxB,QAAQ,CAACJ,GAAT,CAAa4B,IAAb,CAAjC;AACD,GAFD;AAGA,GAAC,YAAD,EAAe,UAAf,EAA2B,YAA3B,EAAyCD,OAAzC,CAAiD,UAAUC,IAAV,EAAgB;AAC/D7B,IAAAA,UAAU,CAACiC,kBAAX,CAA8BJ,IAA9B,EAAoCpB,cAAc,CAACR,GAAf,CAAmB4B,IAAnB,CAApC;AACD,GAFD;AAGD,CAnCD;;AAqCApJ,MAAM,CAAC0B,SAAP,CAAiB+H,kBAAjB,GAAsC,UAAUC,KAAV,EAAiB;AACrD,MAAI,KAAK1F,iBAAT,EAA4B;AAC1B,QAAI0F,KAAK,GAAG,KAAKnI,MAAL,CAAYS,GAApB,IAA2B0H,KAAK,GAAG,KAAKnI,MAAL,CAAYQ,IAAnD,EAAyD;AACvD;AACD;;AAED,SAAKpB,WAAL,CAAiB4I,eAAjB,CAAiC,eAAjC,EAAkDG,KAAlD;;AAEA,WAAO,IAAP;AACD;AACF,CAVD;;AAYA1J,MAAM,CAAC0B,SAAP,CAAiBiI,wBAAjB,GAA4C,UAAUC,0BAAV,EAAsC;AAChF,OAAK7F,iBAAL,GAAyB6F,0BAA0B,CAACpC,GAA3B,CAA+B,QAA/B,CAAzB;AACD,CAFD;;AAIAxH,MAAM,CAAC0B,SAAP,CAAiBmI,aAAjB,GAAiC,YAAY;AAC3C,SAAO,KAAK7F,iBAAZ;AACD,CAFD;;AAIAhE,MAAM,CAAC0B,SAAP,CAAiBoI,WAAjB,GAA+B,UAAU1J,QAAV,EAAoB;AACjD,MAAI,KAAKA,QAAL,KAAkBA,QAAtB,EAAgC;AAC9B;AACD;;AAED,MAAI2J,QAAQ,GAAG,KAAK3J,QAAL,CAAc2J,QAAd,EAAf;;AAEA,OAAK,IAAI/I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+I,QAAQ,CAAC5G,MAA7B,EAAqCnC,CAAC,EAAtC,EAA0C;AACxCZ,IAAAA,QAAQ,CAAC4J,GAAT,CAAaD,QAAQ,CAAC/I,CAAD,CAArB;AACD;;AAED,MAAIZ,QAAQ,KAAK,KAAKD,KAAtB,EAA6B;AAC3B,SAAKA,KAAL,CAAW6J,GAAX,CAAe5J,QAAf;AACD;;AAED,OAAKA,QAAL,GAAgBA,QAAhB;AACD,CAhBD,C,CAgBG;;;AAGHJ,MAAM,CAAC0B,SAAP,CAAiBsI,GAAjB,GAAuB,UAAUC,MAAV,EAAkB;AACvC,OAAK7J,QAAL,CAAc4J,GAAd,CAAkBC,MAAlB;AACD,CAFD;;AAIAjK,MAAM,CAAC0B,SAAP,CAAiBwI,MAAjB,GAA0B,UAAUD,MAAV,EAAkB;AAC1C,OAAK7J,QAAL,CAAc8J,MAAd,CAAqBD,MAArB;AACD,CAFD;;AAIAjK,MAAM,CAAC0B,SAAP,CAAiByI,SAAjB,GAA6B,UAAUF,MAAV,EAAkB;AAC7C,OAAK7J,QAAL,CAAc+J,SAAd,CAAwBF,MAAxB;AACD,CAFD;;AAIAG,MAAM,CAACC,MAAP,CAAcrK,MAAM,CAAC0B,SAArB,EAAgC9B,QAAhC;AACA,eAAeI,MAAf","sourcesContent":["/*\n * @module echarts-gl/core/ViewGL\n * @author Yi Shen(http://github.com/pissang)\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Scene from 'claygl/src/Scene';\nimport ShadowMapPass from 'claygl/src/prePass/ShadowMap';\nimport PerspectiveCamera from 'claygl/src/camera/Perspective';\nimport OrthographicCamera from 'claygl/src/camera/Orthographic';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport notifier from 'claygl/src/core/mixin/notifier';\nimport EffectCompositor from '../effect/EffectCompositor';\nimport TemporalSuperSampling from '../effect/TemporalSuperSampling';\nimport halton from '../effect/halton';\n/**\n * @constructor\n * @alias module:echarts-gl/core/ViewGL\n * @param {string} [projection='perspective']\n */\n\nfunction ViewGL(projection) {\n  projection = projection || 'perspective';\n  /**\n   * @type {module:echarts-gl/core/LayerGL}\n   */\n\n  this.layer = null;\n  /**\n   * @type {clay.Scene}\n   */\n\n  this.scene = new Scene();\n  /**\n   * @type {clay.Node}\n   */\n\n  this.rootNode = this.scene;\n  this.viewport = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  this.setProjection(projection);\n  this._compositor = new EffectCompositor();\n  this._temporalSS = new TemporalSuperSampling();\n  this._shadowMapPass = new ShadowMapPass();\n  var pcfKernels = [];\n  var off = 0;\n\n  for (var i = 0; i < 30; i++) {\n    var pcfKernel = [];\n\n    for (var k = 0; k < 6; k++) {\n      pcfKernel.push(halton(off, 2) * 4.0 - 2.0);\n      pcfKernel.push(halton(off, 3) * 4.0 - 2.0);\n      off++;\n    }\n\n    pcfKernels.push(pcfKernel);\n  }\n\n  this._pcfKernels = pcfKernels;\n  this.scene.on('beforerender', function (renderer, scene, camera) {\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n  }, this);\n}\n/**\n * Set camera type of group\n * @param {string} cameraType 'perspective' | 'orthographic'\n */\n\n\nViewGL.prototype.setProjection = function (projection) {\n  var oldCamera = this.camera;\n  oldCamera && oldCamera.update();\n\n  if (projection === 'perspective') {\n    if (!(this.camera instanceof PerspectiveCamera)) {\n      this.camera = new PerspectiveCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } else {\n    if (!(this.camera instanceof OrthographicCamera)) {\n      this.camera = new OrthographicCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } // PENDING\n\n\n  this.camera.near = 0.1;\n  this.camera.far = 2000;\n};\n/**\n * Set viewport of group\n * @param {number} x Viewport left bottom x\n * @param {number} y Viewport left bottom y\n * @param {number} width Viewport height\n * @param {number} height Viewport height\n * @param {number} [dpr=1]\n */\n\n\nViewGL.prototype.setViewport = function (x, y, width, height, dpr) {\n  if (this.camera instanceof PerspectiveCamera) {\n    this.camera.aspect = width / height;\n  }\n\n  dpr = dpr || 1;\n  this.viewport.x = x;\n  this.viewport.y = y;\n  this.viewport.width = width;\n  this.viewport.height = height;\n  this.viewport.devicePixelRatio = dpr; // Source and output of compositor use high dpr texture.\n  // But the intermediate texture of bloom, dof effects use fixed 1.0 dpr\n\n  this._compositor.resize(width * dpr, height * dpr);\n\n  this._temporalSS.resize(width * dpr, height * dpr);\n};\n/**\n * If contain screen point x, y\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @return {boolean}\n */\n\n\nViewGL.prototype.containPoint = function (x, y) {\n  var viewport = this.viewport;\n  var height = this.layer.renderer.getHeight(); // Flip y;\n\n  y = height - y;\n  return x >= viewport.x && y >= viewport.y && x <= viewport.x + viewport.width && y <= viewport.y + viewport.height;\n};\n/**\n * Cast a ray\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @param {clay.math.Ray} out\n * @return {clay.math.Ray}\n */\n\n\nvar ndc = new Vector2();\n\nViewGL.prototype.castRay = function (x, y, out) {\n  var renderer = this.layer.renderer;\n  var oldViewport = renderer.viewport;\n  renderer.viewport = this.viewport;\n  renderer.screenToNDC(x, y, ndc);\n  this.camera.castRay(ndc, out);\n  renderer.viewport = oldViewport;\n  return out;\n};\n/**\n * Prepare and update scene before render\n */\n\n\nViewGL.prototype.prepareRender = function () {\n  this.scene.update();\n  this.camera.update();\n  this.scene.updateLights();\n  var renderList = this.scene.updateRenderList(this.camera);\n  this._needsSortProgressively = false; // If has any transparent mesh needs sort triangles progressively.\n\n  for (var i = 0; i < renderList.transparent.length; i++) {\n    var renderable = renderList.transparent[i];\n    var geometry = renderable.geometry;\n\n    if (geometry.needsSortVerticesProgressively && geometry.needsSortVerticesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n\n    if (geometry.needsSortTrianglesProgressively && geometry.needsSortTrianglesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n  }\n\n  this._frame = 0;\n\n  this._temporalSS.resetFrame(); // var lights = this.scene.getLights();\n  // for (var i = 0; i < lights.length; i++) {\n  //     if (lights[i].cubemap) {\n  //         if (this._compositor && this._compositor.isSSREnabled()) {\n  //             lights[i].invisible = true;\n  //         }\n  //         else {\n  //             lights[i].invisible = false;\n  //         }\n  //     }\n  // }\n\n};\n\nViewGL.prototype.render = function (renderer, accumulating) {\n  this._doRender(renderer, accumulating, this._frame);\n\n  this._frame++;\n};\n\nViewGL.prototype.needsAccumulate = function () {\n  return this.needsTemporalSS() || this._needsSortProgressively;\n};\n\nViewGL.prototype.needsTemporalSS = function () {\n  var enableTemporalSS = this._enableTemporalSS;\n\n  if (enableTemporalSS === 'auto') {\n    enableTemporalSS = this._enablePostEffect;\n  }\n\n  return enableTemporalSS;\n};\n\nViewGL.prototype.hasDOF = function () {\n  return this._enableDOF;\n};\n\nViewGL.prototype.isAccumulateFinished = function () {\n  return this.needsTemporalSS() ? this._temporalSS.isFinished() : this._frame > 30;\n};\n\nViewGL.prototype._doRender = function (renderer, accumulating, accumFrame) {\n  var scene = this.scene;\n  var camera = this.camera;\n  accumFrame = accumFrame || 0;\n\n  this._updateTransparent(renderer, scene, camera, accumFrame);\n\n  if (!accumulating) {\n    this._shadowMapPass.kernelPCF = this._pcfKernels[0]; // Not render shadowmap pass in accumulating frame.\n\n    this._shadowMapPass.render(renderer, scene, camera, true);\n  }\n\n  this._updateShadowPCFKernel(accumFrame); // Shadowmap will set clear color.\n\n\n  var bgColor = renderer.clearColor;\n  renderer.gl.clearColor(bgColor[0], bgColor[1], bgColor[2], bgColor[3]);\n\n  if (this._enablePostEffect) {\n    // normal render also needs to be jittered when have edge pass.\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n\n    this._compositor.updateNormal(renderer, scene, camera, this._temporalSS.getFrame());\n  } // Always update SSAO to make sure have correct ssaoMap status\n\n\n  this._updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n\n  if (this._enablePostEffect) {\n    var frameBuffer = this._compositor.getSourceFrameBuffer();\n\n    frameBuffer.bind(renderer);\n    renderer.gl.clear(renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT);\n    renderer.render(scene, camera, true, true);\n    frameBuffer.unbind(renderer);\n\n    if (this.needsTemporalSS() && accumulating) {\n      this._compositor.composite(renderer, scene, camera, this._temporalSS.getSourceFrameBuffer(), this._temporalSS.getFrame());\n\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n\n      this._compositor.composite(renderer, scene, camera, null, 0);\n    }\n  } else {\n    if (this.needsTemporalSS() && accumulating) {\n      var frameBuffer = this._temporalSS.getSourceFrameBuffer();\n\n      frameBuffer.bind(renderer);\n      renderer.saveClear();\n      renderer.clearBit = renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT;\n      renderer.render(scene, camera, true, true);\n      renderer.restoreClear();\n      frameBuffer.unbind(renderer);\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n      renderer.render(scene, camera, true, true);\n    }\n  } // this._shadowMapPass.renderDebug(renderer);\n  // this._compositor._normalPass.renderDebug(renderer);\n\n};\n\nViewGL.prototype._updateTransparent = function (renderer, scene, camera, frame) {\n  var v3 = new Vector3();\n  var invWorldTransform = new Matrix4();\n  var cameraWorldPosition = camera.getWorldPosition();\n  var transparentList = scene.getRenderList(camera).transparent; // Sort transparent object.\n\n  for (var i = 0; i < transparentList.length; i++) {\n    var renderable = transparentList[i];\n    var geometry = renderable.geometry;\n    Matrix4.invert(invWorldTransform, renderable.worldTransform);\n    Vector3.transformMat4(v3, cameraWorldPosition, invWorldTransform);\n\n    if (geometry.needsSortTriangles && geometry.needsSortTriangles()) {\n      geometry.doSortTriangles(v3, frame);\n    }\n\n    if (geometry.needsSortVertices && geometry.needsSortVertices()) {\n      geometry.doSortVertices(v3, frame);\n    }\n  }\n};\n\nViewGL.prototype._updateSSAO = function (renderer, scene, camera) {\n  var ifEnableSSAO = this._enableSSAO && this._enablePostEffect;\n\n  if (ifEnableSSAO) {\n    this._compositor.updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n  }\n\n  var renderList = scene.getRenderList(camera);\n\n  for (var i = 0; i < renderList.opaque.length; i++) {\n    var renderable = renderList.opaque[i]; // PENDING\n\n    if (renderable.renderNormal) {\n      renderable.material[ifEnableSSAO ? 'enableTexture' : 'disableTexture']('ssaoMap');\n    }\n\n    if (ifEnableSSAO) {\n      renderable.material.set('ssaoMap', this._compositor.getSSAOTexture());\n    }\n  }\n};\n\nViewGL.prototype._updateShadowPCFKernel = function (frame) {\n  var pcfKernel = this._pcfKernels[frame % this._pcfKernels.length];\n  var renderList = this.scene.getRenderList(this.camera);\n  var opaqueList = renderList.opaque;\n\n  for (var i = 0; i < opaqueList.length; i++) {\n    if (opaqueList[i].receiveShadow) {\n      opaqueList[i].material.set('pcfKernel', pcfKernel);\n      opaqueList[i].material.define('fragment', 'PCF_KERNEL_SIZE', pcfKernel.length / 2);\n    }\n  }\n};\n\nViewGL.prototype.dispose = function (renderer) {\n  this._compositor.dispose(renderer.gl);\n\n  this._temporalSS.dispose(renderer.gl);\n\n  this._shadowMapPass.dispose(renderer);\n};\n/**\n * @param {module:echarts/Model} Post effect model\n */\n\n\nViewGL.prototype.setPostEffect = function (postEffectModel, api) {\n  var compositor = this._compositor;\n  this._enablePostEffect = postEffectModel.get('enable');\n  var bloomModel = postEffectModel.getModel('bloom');\n  var edgeModel = postEffectModel.getModel('edge');\n  var dofModel = postEffectModel.getModel('DOF', postEffectModel.getModel('depthOfField'));\n  var ssaoModel = postEffectModel.getModel('SSAO', postEffectModel.getModel('screenSpaceAmbientOcclusion'));\n  var ssrModel = postEffectModel.getModel('SSR', postEffectModel.getModel('screenSpaceReflection'));\n  var fxaaModel = postEffectModel.getModel('FXAA');\n  var colorCorrModel = postEffectModel.getModel('colorCorrection');\n  bloomModel.get('enable') ? compositor.enableBloom() : compositor.disableBloom();\n  dofModel.get('enable') ? compositor.enableDOF() : compositor.disableDOF();\n  ssrModel.get('enable') ? compositor.enableSSR() : compositor.disableSSR();\n  colorCorrModel.get('enable') ? compositor.enableColorCorrection() : compositor.disableColorCorrection();\n  edgeModel.get('enable') ? compositor.enableEdge() : compositor.disableEdge();\n  fxaaModel.get('enable') ? compositor.enableFXAA() : compositor.disableFXAA();\n  this._enableDOF = dofModel.get('enable');\n  this._enableSSAO = ssaoModel.get('enable');\n  this._enableSSAO ? compositor.enableSSAO() : compositor.disableSSAO();\n  compositor.setBloomIntensity(bloomModel.get('intensity'));\n  compositor.setEdgeColor(edgeModel.get('color'));\n  compositor.setColorLookupTexture(colorCorrModel.get('lookupTexture'), api);\n  compositor.setExposure(colorCorrModel.get('exposure'));\n  ['radius', 'quality', 'intensity'].forEach(function (name) {\n    compositor.setSSAOParameter(name, ssaoModel.get(name));\n  });\n  ['quality', 'maxRoughness', 'physical'].forEach(function (name) {\n    compositor.setSSRParameter(name, ssrModel.get(name));\n  });\n  ['quality', 'focalDistance', 'focalRange', 'blurRadius', 'fstop'].forEach(function (name) {\n    compositor.setDOFParameter(name, dofModel.get(name));\n  });\n  ['brightness', 'contrast', 'saturation'].forEach(function (name) {\n    compositor.setColorCorrection(name, colorCorrModel.get(name));\n  });\n};\n\nViewGL.prototype.setDOFFocusOnPoint = function (depth) {\n  if (this._enablePostEffect) {\n    if (depth > this.camera.far || depth < this.camera.near) {\n      return;\n    }\n\n    this._compositor.setDOFParameter('focalDistance', depth);\n\n    return true;\n  }\n};\n\nViewGL.prototype.setTemporalSuperSampling = function (temporalSuperSamplingModel) {\n  this._enableTemporalSS = temporalSuperSamplingModel.get('enable');\n};\n\nViewGL.prototype.isLinearSpace = function () {\n  return this._enablePostEffect;\n};\n\nViewGL.prototype.setRootNode = function (rootNode) {\n  if (this.rootNode === rootNode) {\n    return;\n  }\n\n  var children = this.rootNode.children();\n\n  for (var i = 0; i < children.length; i++) {\n    rootNode.add(children[i]);\n  }\n\n  if (rootNode !== this.scene) {\n    this.scene.add(rootNode);\n  }\n\n  this.rootNode = rootNode;\n}; // Proxies\n\n\nViewGL.prototype.add = function (node3D) {\n  this.rootNode.add(node3D);\n};\n\nViewGL.prototype.remove = function (node3D) {\n  this.rootNode.remove(node3D);\n};\n\nViewGL.prototype.removeAll = function (node3D) {\n  this.rootNode.removeAll(node3D);\n};\n\nObject.assign(ViewGL.prototype, notifier);\nexport default ViewGL;"]},"metadata":{},"sourceType":"module"}