{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\n// Spherical Harmonic Helpers\nimport Texture from '../Texture';\nimport FrameBuffer from '../FrameBuffer';\nimport Texture2D from '../Texture2D';\nimport Pass from '../compositor/Pass';\nimport vendor from '../core/vendor';\nimport Skybox from '../plugin/Skybox';\nimport Skydome from '../plugin/Skydome';\nimport EnvironmentMapPass from '../prePass/EnvironmentMap';\nimport Scene from '../Scene';\nimport vec3 from '../glmatrix/vec3';\nvar sh = {};\nimport projectEnvMapShaderCode from './shader/projectEnvMap.glsl.js';\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz']; // Project on gpu, but needs browser to support readPixels as Float32Array.\n\nfunction projectEnvironmentMapGPU(renderer, envMap) {\n  var shTexture = new Texture2D({\n    width: 9,\n    height: 1,\n    type: Texture.FLOAT\n  });\n  var pass = new Pass({\n    fragment: projectEnvMapShaderCode\n  });\n  pass.material.define('fragment', 'TEXTURE_SIZE', envMap.width);\n  pass.setUniform('environmentMap', envMap);\n  var framebuffer = new FrameBuffer();\n  framebuffer.attach(shTexture);\n  pass.render(renderer, framebuffer);\n  framebuffer.bind(renderer); // TODO Only chrome and firefox support Float32Array\n\n  var pixels = new vendor.Float32Array(9 * 4);\n  renderer.gl.readPixels(0, 0, 9, 1, Texture.RGBA, Texture.FLOAT, pixels);\n  var coeff = new vendor.Float32Array(9 * 3);\n\n  for (var i = 0; i < 9; i++) {\n    coeff[i * 3] = pixels[i * 4];\n    coeff[i * 3 + 1] = pixels[i * 4 + 1];\n    coeff[i * 3 + 2] = pixels[i * 4 + 2];\n  }\n\n  framebuffer.unbind(renderer);\n  framebuffer.dispose(renderer);\n  pass.dispose(renderer);\n  return coeff;\n}\n\nfunction harmonics(normal, index) {\n  var x = normal[0];\n  var y = normal[1];\n  var z = normal[2];\n\n  if (index === 0) {\n    return 1.0;\n  } else if (index === 1) {\n    return x;\n  } else if (index === 2) {\n    return y;\n  } else if (index === 3) {\n    return z;\n  } else if (index === 4) {\n    return x * z;\n  } else if (index === 5) {\n    return y * z;\n  } else if (index === 6) {\n    return x * y;\n  } else if (index === 7) {\n    return 3.0 * z * z - 1.0;\n  } else {\n    return x * x - y * y;\n  }\n}\n\nvar normalTransform = {\n  px: [2, 1, 0, -1, -1, 1],\n  nx: [2, 1, 0, 1, -1, -1],\n  py: [0, 2, 1, 1, -1, -1],\n  ny: [0, 2, 1, 1, 1, 1],\n  pz: [0, 1, 2, -1, -1, -1],\n  nz: [0, 1, 2, 1, -1, 1]\n}; // Project on cpu.\n\nfunction projectEnvironmentMapCPU(renderer, cubePixels, width, height) {\n  var coeff = new vendor.Float32Array(9 * 3);\n  var normal = vec3.create();\n  var texel = vec3.create();\n  var fetchNormal = vec3.create();\n\n  for (var m = 0; m < 9; m++) {\n    var result = vec3.create();\n\n    for (var k = 0; k < targets.length; k++) {\n      var pixels = cubePixels[targets[k]];\n      var sideResult = vec3.create();\n      var divider = 0;\n      var i = 0;\n      var transform = normalTransform[targets[k]];\n\n      for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n          normal[0] = x / (width - 1.0) * 2.0 - 1.0; // TODO Flip y?\n\n          normal[1] = y / (height - 1.0) * 2.0 - 1.0;\n          normal[2] = -1.0;\n          vec3.normalize(normal, normal);\n          fetchNormal[0] = normal[transform[0]] * transform[3];\n          fetchNormal[1] = normal[transform[1]] * transform[4];\n          fetchNormal[2] = normal[transform[2]] * transform[5];\n          texel[0] = pixels[i++] / 255;\n          texel[1] = pixels[i++] / 255;\n          texel[2] = pixels[i++] / 255; // RGBM Decode\n\n          var scale = pixels[i++] / 255 * 8.12;\n          texel[0] *= scale;\n          texel[1] *= scale;\n          texel[2] *= scale;\n          vec3.scaleAndAdd(sideResult, sideResult, texel, harmonics(fetchNormal, m) * -normal[2]); // -normal.z equals cos(theta) of Lambertian\n\n          divider += -normal[2];\n        }\n      }\n\n      vec3.scaleAndAdd(result, result, sideResult, 1 / divider);\n    }\n\n    coeff[m * 3] = result[0] / 6.0;\n    coeff[m * 3 + 1] = result[1] / 6.0;\n    coeff[m * 3 + 2] = result[2] / 6.0;\n  }\n\n  return coeff;\n}\n/**\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {Object} [textureOpts.lod]\n * @param  {boolean} [textureOpts.decodeRGBM]\n */\n\n\nsh.projectEnvironmentMap = function (renderer, envMap, opts) {\n  // TODO sRGB\n  opts = opts || {};\n  opts.lod = opts.lod || 0;\n  var skybox;\n  var dummyScene = new Scene();\n  var size = 64;\n\n  if (envMap.textureType === 'texture2D') {\n    skybox = new Skydome({\n      scene: dummyScene,\n      environmentMap: envMap\n    });\n  } else {\n    size = envMap.image && envMap.image.px ? envMap.image.px.width : envMap.width;\n    skybox = new Skybox({\n      scene: dummyScene,\n      environmentMap: envMap\n    });\n  } // Convert to rgbm\n\n\n  var width = Math.ceil(size / Math.pow(2, opts.lod));\n  var height = Math.ceil(size / Math.pow(2, opts.lod));\n  var rgbmTexture = new Texture2D({\n    width: width,\n    height: height\n  });\n  var framebuffer = new FrameBuffer();\n  skybox.material.define('fragment', 'RGBM_ENCODE');\n\n  if (opts.decodeRGBM) {\n    skybox.material.define('fragment', 'RGBM_DECODE');\n  }\n\n  skybox.material.set('lod', opts.lod);\n  var envMapPass = new EnvironmentMapPass({\n    texture: rgbmTexture\n  });\n  var cubePixels = {};\n\n  for (var i = 0; i < targets.length; i++) {\n    cubePixels[targets[i]] = new Uint8Array(width * height * 4);\n    var camera = envMapPass.getCamera(targets[i]);\n    camera.fov = 90;\n    framebuffer.attach(rgbmTexture);\n    framebuffer.bind(renderer);\n    renderer.render(dummyScene, camera);\n    renderer.gl.readPixels(0, 0, width, height, Texture.RGBA, Texture.UNSIGNED_BYTE, cubePixels[targets[i]]);\n    framebuffer.unbind(renderer);\n  }\n\n  skybox.dispose(renderer);\n  framebuffer.dispose(renderer);\n  rgbmTexture.dispose(renderer);\n  return projectEnvironmentMapCPU(renderer, cubePixels, width, height);\n};\n\nexport default sh;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_claygl@1.3.0@claygl/src/util/sh.js"],"names":["Texture","FrameBuffer","Texture2D","Pass","vendor","Skybox","Skydome","EnvironmentMapPass","Scene","vec3","sh","projectEnvMapShaderCode","targets","projectEnvironmentMapGPU","renderer","envMap","shTexture","width","height","type","FLOAT","pass","fragment","material","define","setUniform","framebuffer","attach","render","bind","pixels","Float32Array","gl","readPixels","RGBA","coeff","i","unbind","dispose","harmonics","normal","index","x","y","z","normalTransform","px","nx","py","ny","pz","nz","projectEnvironmentMapCPU","cubePixels","create","texel","fetchNormal","m","result","k","length","sideResult","divider","transform","normalize","scale","scaleAndAdd","projectEnvironmentMap","opts","lod","skybox","dummyScene","size","textureType","scene","environmentMap","image","Math","ceil","pow","rgbmTexture","decodeRGBM","set","envMapPass","texture","Uint8Array","camera","getCamera","fov","UNSIGNED_BYTE"],"mappings":"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","sourcesContent":["// Spherical Harmonic Helpers\nimport Texture from '../Texture';\nimport FrameBuffer from '../FrameBuffer';\nimport Texture2D from '../Texture2D';\nimport Pass from '../compositor/Pass';\nimport vendor from '../core/vendor';\nimport Skybox from '../plugin/Skybox';\nimport Skydome from '../plugin/Skydome';\nimport EnvironmentMapPass from '../prePass/EnvironmentMap';\nimport Scene from '../Scene';\nimport vec3 from '../glmatrix/vec3';\nvar sh = {};\n\nimport projectEnvMapShaderCode from './shader/projectEnvMap.glsl.js';\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n// Project on gpu, but needs browser to support readPixels as Float32Array.\nfunction projectEnvironmentMapGPU(renderer, envMap) {\n    var shTexture = new Texture2D({\n        width: 9,\n        height: 1,\n        type: Texture.FLOAT\n    });\n    var pass = new Pass({\n        fragment: projectEnvMapShaderCode\n    });\n    pass.material.define('fragment', 'TEXTURE_SIZE', envMap.width);\n    pass.setUniform('environmentMap', envMap);\n\n    var framebuffer = new FrameBuffer();\n    framebuffer.attach(shTexture);\n    pass.render(renderer, framebuffer);\n\n    framebuffer.bind(renderer);\n    // TODO Only chrome and firefox support Float32Array\n    var pixels = new vendor.Float32Array(9 * 4);\n    renderer.gl.readPixels(0, 0, 9, 1, Texture.RGBA, Texture.FLOAT, pixels);\n\n    var coeff = new vendor.Float32Array(9 * 3);\n    for (var i = 0; i < 9; i++) {\n        coeff[i * 3] = pixels[i * 4];\n        coeff[i * 3 + 1] = pixels[i * 4 + 1];\n        coeff[i * 3 + 2] = pixels[i * 4 + 2];\n    }\n    framebuffer.unbind(renderer);\n\n    framebuffer.dispose(renderer);\n    pass.dispose(renderer);\n    return coeff;\n}\n\nfunction harmonics(normal, index){\n    var x = normal[0];\n    var y = normal[1];\n    var z = normal[2];\n\n    if (index === 0) {\n        return 1.0;\n    }\n    else if (index === 1) {\n        return x;\n    }\n    else if (index === 2) {\n        return y;\n    }\n    else if (index === 3) {\n        return z;\n    }\n    else if (index === 4) {\n        return x * z;\n    }\n    else if (index === 5) {\n        return y * z;\n    }\n    else if (index === 6) {\n        return x * y;\n    }\n    else if (index === 7) {\n        return 3.0 * z * z - 1.0;\n    }\n    else {\n        return x * x - y * y;\n    }\n}\n\nvar normalTransform = {\n    px: [2, 1, 0, -1, -1, 1],\n    nx: [2, 1, 0, 1, -1, -1],\n    py: [0, 2, 1, 1, -1, -1],\n    ny: [0, 2, 1, 1, 1, 1],\n    pz: [0, 1, 2, -1, -1, -1],\n    nz: [0, 1, 2, 1, -1, 1]\n};\n\n// Project on cpu.\nfunction projectEnvironmentMapCPU(renderer, cubePixels, width, height) {\n    var coeff = new vendor.Float32Array(9 * 3);\n    var normal = vec3.create();\n    var texel = vec3.create();\n    var fetchNormal = vec3.create();\n    for (var m = 0; m < 9; m++) {\n        var result = vec3.create();\n        for (var k = 0; k < targets.length; k++) {\n            var pixels = cubePixels[targets[k]];\n\n            var sideResult = vec3.create();\n            var divider = 0;\n            var i = 0;\n            var transform = normalTransform[targets[k]];\n            for (var y = 0; y < height; y++) {\n                for (var x = 0; x < width; x++) {\n\n                    normal[0] = x / (width - 1.0) * 2.0 - 1.0;\n                    // TODO Flip y?\n                    normal[1] = y / (height - 1.0) * 2.0 - 1.0;\n                    normal[2] = -1.0;\n                    vec3.normalize(normal, normal);\n\n                    fetchNormal[0] = normal[transform[0]] * transform[3];\n                    fetchNormal[1] = normal[transform[1]] * transform[4];\n                    fetchNormal[2] = normal[transform[2]] * transform[5];\n\n                    texel[0] = pixels[i++] / 255;\n                    texel[1] = pixels[i++] / 255;\n                    texel[2] = pixels[i++] / 255;\n                    // RGBM Decode\n                    var scale = pixels[i++] / 255 * 8.12;\n                    texel[0] *= scale;\n                    texel[1] *= scale;\n                    texel[2] *= scale;\n\n                    vec3.scaleAndAdd(sideResult, sideResult, texel, harmonics(fetchNormal, m) * -normal[2]);\n                    // -normal.z equals cos(theta) of Lambertian\n                    divider += -normal[2];\n                }\n            }\n            vec3.scaleAndAdd(result, result, sideResult, 1 / divider);\n        }\n\n        coeff[m * 3] = result[0] / 6.0;\n        coeff[m * 3 + 1] = result[1] / 6.0;\n        coeff[m * 3 + 2] = result[2] / 6.0;\n    }\n    return coeff;\n}\n\n/**\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {Object} [textureOpts.lod]\n * @param  {boolean} [textureOpts.decodeRGBM]\n */\nsh.projectEnvironmentMap = function (renderer, envMap, opts) {\n\n    // TODO sRGB\n\n    opts = opts || {};\n    opts.lod = opts.lod || 0;\n\n    var skybox;\n    var dummyScene = new Scene();\n    var size = 64;\n    if (envMap.textureType === 'texture2D') {\n        skybox = new Skydome({\n            scene: dummyScene,\n            environmentMap: envMap\n        });\n    }\n    else {\n        size = (envMap.image && envMap.image.px) ? envMap.image.px.width : envMap.width;\n        skybox = new Skybox({\n            scene: dummyScene,\n            environmentMap: envMap\n        });\n    }\n    // Convert to rgbm\n    var width = Math.ceil(size / Math.pow(2, opts.lod));\n    var height = Math.ceil(size / Math.pow(2, opts.lod));\n    var rgbmTexture = new Texture2D({\n        width: width,\n        height: height\n    });\n    var framebuffer = new FrameBuffer();\n    skybox.material.define('fragment', 'RGBM_ENCODE');\n    if (opts.decodeRGBM) {\n        skybox.material.define('fragment', 'RGBM_DECODE');\n    }\n    skybox.material.set('lod', opts.lod);\n    var envMapPass = new EnvironmentMapPass({\n        texture: rgbmTexture\n    });\n    var cubePixels = {};\n    for (var i = 0; i < targets.length; i++) {\n        cubePixels[targets[i]] = new Uint8Array(width * height * 4);\n        var camera = envMapPass.getCamera(targets[i]);\n        camera.fov = 90;\n        framebuffer.attach(rgbmTexture);\n        framebuffer.bind(renderer);\n        renderer.render(dummyScene, camera);\n        renderer.gl.readPixels(\n            0, 0, width, height,\n            Texture.RGBA, Texture.UNSIGNED_BYTE, cubePixels[targets[i]]\n        );\n        framebuffer.unbind(renderer);\n    }\n\n    skybox.dispose(renderer);\n    framebuffer.dispose(renderer);\n    rgbmTexture.dispose(renderer);\n\n    return projectEnvironmentMapCPU(renderer, cubePixels, width, height);\n};\n\nexport default sh;\n"]},"metadata":{},"sourceType":"module"}