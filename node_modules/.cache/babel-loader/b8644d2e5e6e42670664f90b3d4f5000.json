{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport format from '../../util/format';\nimport PointsBuilder from '../common/PointsBuilder';\nexport default echarts.ChartView.extend({\n  type: 'scatter3D',\n  hasSymbolVisual: true,\n  __ecgl__: true,\n  init: function init(ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this._pointsBuilderList = [];\n    this._currentStep = 0;\n  },\n  render: function render(seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n\n    if (!seriesModel.getData().count()) {\n      return;\n    }\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      this._camera = coordSys.viewGL.camera;\n      var pointsBuilder = this._pointsBuilderList[0];\n\n      if (!pointsBuilder) {\n        pointsBuilder = this._pointsBuilderList[0] = new PointsBuilder(false, api);\n      }\n\n      this._pointsBuilderList.length = 1;\n      this.groupGL.add(pointsBuilder.rootNode);\n      pointsBuilder.update(seriesModel, ecModel, api);\n      pointsBuilder.updateView(coordSys.viewGL.camera);\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('Invalid coordinate system');\n      }\n    }\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      this._camera = coordSys.viewGL.camera;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('Invalid coordinate system');\n      }\n    }\n\n    this.groupGL.removeAll();\n    this._currentStep = 0;\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    // TODO Sort transparency.\n    if (params.end <= params.start) {\n      return;\n    }\n\n    var pointsBuilder = this._pointsBuilderList[this._currentStep];\n\n    if (!pointsBuilder) {\n      pointsBuilder = new PointsBuilder(false, api);\n      this._pointsBuilderList[this._currentStep] = pointsBuilder;\n    }\n\n    this.groupGL.add(pointsBuilder.rootNode);\n    pointsBuilder.update(seriesModel, ecModel, api, params.start, params.end);\n    pointsBuilder.updateView(seriesModel.coordinateSystem.viewGL.camera);\n    this._currentStep++;\n  },\n  updateCamera: function updateCamera() {\n    this._pointsBuilderList.forEach(function (pointsBuilder) {\n      pointsBuilder.updateView(this._camera);\n    }, this);\n  },\n  highlight: function highlight(seriesModel, ecModel, api, payload) {\n    this._toggleStatus('highlight', seriesModel, ecModel, api, payload);\n  },\n  downplay: function downplay(seriesModel, ecModel, api, payload) {\n    this._toggleStatus('downplay', seriesModel, ecModel, api, payload);\n  },\n  _toggleStatus: function _toggleStatus(status, seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = retrieve.queryDataIndex(data, payload);\n    var isHighlight = status === 'highlight';\n\n    if (dataIndex != null) {\n      echarts.util.each(format.normalizeToArray(dataIndex), function (dataIdx) {\n        for (var i = 0; i < this._pointsBuilderList.length; i++) {\n          var pointsBuilder = this._pointsBuilderList[i];\n          isHighlight ? pointsBuilder.highlight(data, dataIdx) : pointsBuilder.downplay(data, dataIdx);\n        }\n      }, this);\n    } else {\n      // PENDING, OPTIMIZE\n      data.each(function (dataIdx) {\n        for (var i = 0; i < this._pointsBuilderList.length; i++) {\n          var pointsBuilder = this._pointsBuilderList[i];\n          isHighlight ? pointsBuilder.highlight(data, dataIdx) : pointsBuilder.downplay(data, dataIdx);\n        }\n      });\n    }\n  },\n  dispose: function dispose() {\n    this._pointsBuilderList.forEach(function (pointsBuilder) {\n      pointsBuilder.dispose();\n    });\n\n    this.groupGL.removeAll();\n  },\n  remove: function remove() {\n    this.groupGL.removeAll();\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/echarts-gl/lib/chart/scatter3D/Scatter3DView.js"],"names":["echarts","graphicGL","retrieve","format","PointsBuilder","ChartView","extend","type","hasSymbolVisual","__ecgl__","init","ecModel","api","groupGL","Node","_pointsBuilderList","_currentStep","render","seriesModel","removeAll","getData","count","coordSys","coordinateSystem","viewGL","add","_camera","camera","pointsBuilder","length","rootNode","update","updateView","process","env","NODE_ENV","Error","incrementalPrepareRender","incrementalRender","params","end","start","updateCamera","forEach","highlight","payload","_toggleStatus","downplay","status","data","dataIndex","queryDataIndex","isHighlight","util","each","normalizeToArray","dataIdx","i","dispose","remove"],"mappings":"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","sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport format from '../../util/format';\nimport PointsBuilder from '../common/PointsBuilder';\nexport default echarts.ChartView.extend({\n  type: 'scatter3D',\n  hasSymbolVisual: true,\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this._pointsBuilderList = [];\n    this._currentStep = 0;\n  },\n  render: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n\n    if (!seriesModel.getData().count()) {\n      return;\n    }\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      this._camera = coordSys.viewGL.camera;\n      var pointsBuilder = this._pointsBuilderList[0];\n\n      if (!pointsBuilder) {\n        pointsBuilder = this._pointsBuilderList[0] = new PointsBuilder(false, api);\n      }\n\n      this._pointsBuilderList.length = 1;\n      this.groupGL.add(pointsBuilder.rootNode);\n      pointsBuilder.update(seriesModel, ecModel, api);\n      pointsBuilder.updateView(coordSys.viewGL.camera);\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('Invalid coordinate system');\n      }\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      this._camera = coordSys.viewGL.camera;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('Invalid coordinate system');\n      }\n    }\n\n    this.groupGL.removeAll();\n    this._currentStep = 0;\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // TODO Sort transparency.\n    if (params.end <= params.start) {\n      return;\n    }\n\n    var pointsBuilder = this._pointsBuilderList[this._currentStep];\n\n    if (!pointsBuilder) {\n      pointsBuilder = new PointsBuilder(false, api);\n      this._pointsBuilderList[this._currentStep] = pointsBuilder;\n    }\n\n    this.groupGL.add(pointsBuilder.rootNode);\n    pointsBuilder.update(seriesModel, ecModel, api, params.start, params.end);\n    pointsBuilder.updateView(seriesModel.coordinateSystem.viewGL.camera);\n    this._currentStep++;\n  },\n  updateCamera: function () {\n    this._pointsBuilderList.forEach(function (pointsBuilder) {\n      pointsBuilder.updateView(this._camera);\n    }, this);\n  },\n  highlight: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('highlight', seriesModel, ecModel, api, payload);\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('downplay', seriesModel, ecModel, api, payload);\n  },\n  _toggleStatus: function (status, seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = retrieve.queryDataIndex(data, payload);\n    var isHighlight = status === 'highlight';\n\n    if (dataIndex != null) {\n      echarts.util.each(format.normalizeToArray(dataIndex), function (dataIdx) {\n        for (var i = 0; i < this._pointsBuilderList.length; i++) {\n          var pointsBuilder = this._pointsBuilderList[i];\n          isHighlight ? pointsBuilder.highlight(data, dataIdx) : pointsBuilder.downplay(data, dataIdx);\n        }\n      }, this);\n    } else {\n      // PENDING, OPTIMIZE\n      data.each(function (dataIdx) {\n        for (var i = 0; i < this._pointsBuilderList.length; i++) {\n          var pointsBuilder = this._pointsBuilderList[i];\n          isHighlight ? pointsBuilder.highlight(data, dataIdx) : pointsBuilder.downplay(data, dataIdx);\n        }\n      });\n    }\n  },\n  dispose: function () {\n    this._pointsBuilderList.forEach(function (pointsBuilder) {\n      pointsBuilder.dispose();\n    });\n\n    this.groupGL.removeAll();\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  }\n});"]},"metadata":{},"sourceType":"module"}