{"ast":null,"code":"import Geometry from '../Geometry';\nimport Plane from './Plane';\nimport Matrix4 from '../math/Matrix4';\nimport Vector3 from '../math/Vector3';\nimport BoundingBox from '../math/BoundingBox';\nimport vendor from '../core/vendor';\nvar planeMatrix = new Matrix4();\n/**\n * @constructor clay.geometry.Cube\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n * @param {number} [opt.depthSegments]\n * @param {boolean} [opt.inside]\n */\n\nvar Cube = Geometry.extend(\n/**@lends clay.geometry.Cube# */\n{\n  dynamic: false,\n\n  /**\n   * @type {number}\n   */\n  widthSegments: 1,\n\n  /**\n   * @type {number}\n   */\n  heightSegments: 1,\n\n  /**\n   * @type {number}\n   */\n  depthSegments: 1,\n\n  /**\n   * @type {boolean}\n   */\n  inside: false\n}, function () {\n  this.build();\n},\n/** @lends clay.geometry.Cube.prototype */\n{\n  /**\n   * Build cube geometry\n   */\n  build: function build() {\n    var planes = {\n      'px': createPlane('px', this.depthSegments, this.heightSegments),\n      'nx': createPlane('nx', this.depthSegments, this.heightSegments),\n      'py': createPlane('py', this.widthSegments, this.depthSegments),\n      'ny': createPlane('ny', this.widthSegments, this.depthSegments),\n      'pz': createPlane('pz', this.widthSegments, this.heightSegments),\n      'nz': createPlane('nz', this.widthSegments, this.heightSegments)\n    };\n    var attrList = ['position', 'texcoord0', 'normal'];\n    var vertexNumber = 0;\n    var faceNumber = 0;\n\n    for (var pos in planes) {\n      vertexNumber += planes[pos].vertexCount;\n      faceNumber += planes[pos].indices.length;\n    }\n\n    for (var k = 0; k < attrList.length; k++) {\n      this.attributes[attrList[k]].init(vertexNumber);\n    }\n\n    this.indices = new vendor.Uint16Array(faceNumber);\n    var faceOffset = 0;\n    var vertexOffset = 0;\n\n    for (var pos in planes) {\n      var plane = planes[pos];\n\n      for (var k = 0; k < attrList.length; k++) {\n        var attrName = attrList[k];\n        var attrArray = plane.attributes[attrName].value;\n        var attrSize = plane.attributes[attrName].size;\n        var isNormal = attrName === 'normal';\n\n        for (var i = 0; i < attrArray.length; i++) {\n          var value = attrArray[i];\n\n          if (this.inside && isNormal) {\n            value = -value;\n          }\n\n          this.attributes[attrName].value[i + attrSize * vertexOffset] = value;\n        }\n      }\n\n      var len = plane.indices.length;\n\n      for (var i = 0; i < plane.indices.length; i++) {\n        this.indices[i + faceOffset] = vertexOffset + plane.indices[this.inside ? len - i - 1 : i];\n      }\n\n      faceOffset += plane.indices.length;\n      vertexOffset += plane.vertexCount;\n    }\n\n    this.boundingBox = new BoundingBox();\n    this.boundingBox.max.set(1, 1, 1);\n    this.boundingBox.min.set(-1, -1, -1);\n  }\n});\n\nfunction createPlane(pos, widthSegments, heightSegments) {\n  planeMatrix.identity();\n  var plane = new Plane({\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  });\n\n  switch (pos) {\n    case 'px':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_X);\n      Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI / 2);\n      break;\n\n    case 'nx':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_X);\n      Matrix4.rotateY(planeMatrix, planeMatrix, -Math.PI / 2);\n      break;\n\n    case 'py':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Y);\n      Matrix4.rotateX(planeMatrix, planeMatrix, -Math.PI / 2);\n      break;\n\n    case 'ny':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Y);\n      Matrix4.rotateX(planeMatrix, planeMatrix, Math.PI / 2);\n      break;\n\n    case 'pz':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Z);\n      break;\n\n    case 'nz':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Z);\n      Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI);\n      break;\n  }\n\n  plane.applyTransform(planeMatrix);\n  return plane;\n}\n\nexport default Cube;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/claygl/src/geometry/Cube.js"],"names":["Geometry","Plane","Matrix4","Vector3","BoundingBox","vendor","planeMatrix","Cube","extend","dynamic","widthSegments","heightSegments","depthSegments","inside","build","planes","createPlane","attrList","vertexNumber","faceNumber","pos","vertexCount","indices","length","k","attributes","init","Uint16Array","faceOffset","vertexOffset","plane","attrName","attrArray","value","attrSize","size","isNormal","i","len","boundingBox","max","set","min","identity","translate","POSITIVE_X","rotateY","Math","PI","NEGATIVE_X","POSITIVE_Y","rotateX","NEGATIVE_Y","POSITIVE_Z","NEGATIVE_Z","applyTransform"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,IAAIC,WAAW,GAAG,IAAIJ,OAAJ,EAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIK,IAAI,GAAGP,QAAQ,CAACQ,MAAT;AACX;AACA;AACIC,EAAAA,OAAO,EAAE,KADb;;AAEI;AACJ;AACA;AACIC,EAAAA,aAAa,EAAE,CALnB;;AAMI;AACJ;AACA;AACIC,EAAAA,cAAc,EAAE,CATpB;;AAUI;AACJ;AACA;AACIC,EAAAA,aAAa,EAAE,CAbnB;;AAcI;AACJ;AACA;AACIC,EAAAA,MAAM,EAAE;AAjBZ,CAFW,EAoBR,YAAW;AACV,OAAKC,KAAL;AACH,CAtBU;AAuBX;AACA;AACI;AACJ;AACA;AACIA,EAAAA,KAAK,EAAE,iBAAW;AAEd,QAAIC,MAAM,GAAG;AACT,YAAMC,WAAW,CAAC,IAAD,EAAO,KAAKJ,aAAZ,EAA2B,KAAKD,cAAhC,CADR;AAET,YAAMK,WAAW,CAAC,IAAD,EAAO,KAAKJ,aAAZ,EAA2B,KAAKD,cAAhC,CAFR;AAGT,YAAMK,WAAW,CAAC,IAAD,EAAO,KAAKN,aAAZ,EAA2B,KAAKE,aAAhC,CAHR;AAIT,YAAMI,WAAW,CAAC,IAAD,EAAO,KAAKN,aAAZ,EAA2B,KAAKE,aAAhC,CAJR;AAKT,YAAMI,WAAW,CAAC,IAAD,EAAO,KAAKN,aAAZ,EAA2B,KAAKC,cAAhC,CALR;AAMT,YAAMK,WAAW,CAAC,IAAD,EAAO,KAAKN,aAAZ,EAA2B,KAAKC,cAAhC;AANR,KAAb;AASA,QAAIM,QAAQ,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CAAf;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,UAAU,GAAG,CAAjB;;AACA,SAAK,IAAIC,GAAT,IAAgBL,MAAhB,EAAwB;AACpBG,MAAAA,YAAY,IAAIH,MAAM,CAACK,GAAD,CAAN,CAAYC,WAA5B;AACAF,MAAAA,UAAU,IAAIJ,MAAM,CAACK,GAAD,CAAN,CAAYE,OAAZ,CAAoBC,MAAlC;AACH;;AACD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACM,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACtC,WAAKC,UAAL,CAAgBR,QAAQ,CAACO,CAAD,CAAxB,EAA6BE,IAA7B,CAAkCR,YAAlC;AACH;;AACD,SAAKI,OAAL,GAAe,IAAIjB,MAAM,CAACsB,WAAX,CAAuBR,UAAvB,CAAf;AACA,QAAIS,UAAU,GAAG,CAAjB;AACA,QAAIC,YAAY,GAAG,CAAnB;;AACA,SAAK,IAAIT,GAAT,IAAgBL,MAAhB,EAAwB;AACpB,UAAIe,KAAK,GAAGf,MAAM,CAACK,GAAD,CAAlB;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACM,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACtC,YAAIO,QAAQ,GAAGd,QAAQ,CAACO,CAAD,CAAvB;AACA,YAAIQ,SAAS,GAAGF,KAAK,CAACL,UAAN,CAAiBM,QAAjB,EAA2BE,KAA3C;AACA,YAAIC,QAAQ,GAAGJ,KAAK,CAACL,UAAN,CAAiBM,QAAjB,EAA2BI,IAA1C;AACA,YAAIC,QAAQ,GAAGL,QAAQ,KAAK,QAA5B;;AACA,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACT,MAA9B,EAAsCc,CAAC,EAAvC,EAA2C;AACvC,cAAIJ,KAAK,GAAGD,SAAS,CAACK,CAAD,CAArB;;AACA,cAAI,KAAKxB,MAAL,IAAeuB,QAAnB,EAA6B;AACzBH,YAAAA,KAAK,GAAG,CAACA,KAAT;AACH;;AACD,eAAKR,UAAL,CAAgBM,QAAhB,EAA0BE,KAA1B,CAAgCI,CAAC,GAAGH,QAAQ,GAAGL,YAA/C,IAA+DI,KAA/D;AACH;AACJ;;AACD,UAAIK,GAAG,GAAGR,KAAK,CAACR,OAAN,CAAcC,MAAxB;;AACA,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACR,OAAN,CAAcC,MAAlC,EAA0Cc,CAAC,EAA3C,EAA+C;AAC3C,aAAKf,OAAL,CAAae,CAAC,GAAGT,UAAjB,IAA+BC,YAAY,GAAGC,KAAK,CAACR,OAAN,CAAc,KAAKT,MAAL,GAAeyB,GAAG,GAAGD,CAAN,GAAU,CAAzB,GAA8BA,CAA5C,CAA9C;AACH;;AACDT,MAAAA,UAAU,IAAIE,KAAK,CAACR,OAAN,CAAcC,MAA5B;AACAM,MAAAA,YAAY,IAAIC,KAAK,CAACT,WAAtB;AACH;;AAED,SAAKkB,WAAL,GAAmB,IAAInC,WAAJ,EAAnB;AACA,SAAKmC,WAAL,CAAiBC,GAAjB,CAAqBC,GAArB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AACA,SAAKF,WAAL,CAAiBG,GAAjB,CAAqBD,GAArB,CAAyB,CAAC,CAA1B,EAA6B,CAAC,CAA9B,EAAiC,CAAC,CAAlC;AACH;AAtDL,CAxBW,CAAX;;AAiFA,SAASzB,WAAT,CAAqBI,GAArB,EAA0BV,aAA1B,EAAyCC,cAAzC,EAAyD;AAErDL,EAAAA,WAAW,CAACqC,QAAZ;AAEA,MAAIb,KAAK,GAAG,IAAI7B,KAAJ,CAAU;AAClBS,IAAAA,aAAa,EAAEA,aADG;AAElBC,IAAAA,cAAc,EAAEA;AAFE,GAAV,CAAZ;;AAKA,UAAOS,GAAP;AACI,SAAK,IAAL;AACIlB,MAAAA,OAAO,CAAC0C,SAAR,CAAkBtC,WAAlB,EAA+BA,WAA/B,EAA4CH,OAAO,CAAC0C,UAApD;AACA3C,MAAAA,OAAO,CAAC4C,OAAR,CAAgBxC,WAAhB,EAA6BA,WAA7B,EAA0CyC,IAAI,CAACC,EAAL,GAAU,CAApD;AACA;;AACJ,SAAK,IAAL;AACI9C,MAAAA,OAAO,CAAC0C,SAAR,CAAkBtC,WAAlB,EAA+BA,WAA/B,EAA4CH,OAAO,CAAC8C,UAApD;AACA/C,MAAAA,OAAO,CAAC4C,OAAR,CAAgBxC,WAAhB,EAA6BA,WAA7B,EAA0C,CAACyC,IAAI,CAACC,EAAN,GAAW,CAArD;AACA;;AACJ,SAAK,IAAL;AACI9C,MAAAA,OAAO,CAAC0C,SAAR,CAAkBtC,WAAlB,EAA+BA,WAA/B,EAA4CH,OAAO,CAAC+C,UAApD;AACAhD,MAAAA,OAAO,CAACiD,OAAR,CAAgB7C,WAAhB,EAA6BA,WAA7B,EAA0C,CAACyC,IAAI,CAACC,EAAN,GAAW,CAArD;AACA;;AACJ,SAAK,IAAL;AACI9C,MAAAA,OAAO,CAAC0C,SAAR,CAAkBtC,WAAlB,EAA+BA,WAA/B,EAA4CH,OAAO,CAACiD,UAApD;AACAlD,MAAAA,OAAO,CAACiD,OAAR,CAAgB7C,WAAhB,EAA6BA,WAA7B,EAA0CyC,IAAI,CAACC,EAAL,GAAU,CAApD;AACA;;AACJ,SAAK,IAAL;AACI9C,MAAAA,OAAO,CAAC0C,SAAR,CAAkBtC,WAAlB,EAA+BA,WAA/B,EAA4CH,OAAO,CAACkD,UAApD;AACA;;AACJ,SAAK,IAAL;AACInD,MAAAA,OAAO,CAAC0C,SAAR,CAAkBtC,WAAlB,EAA+BA,WAA/B,EAA4CH,OAAO,CAACmD,UAApD;AACApD,MAAAA,OAAO,CAAC4C,OAAR,CAAgBxC,WAAhB,EAA6BA,WAA7B,EAA0CyC,IAAI,CAACC,EAA/C;AACA;AAvBR;;AAyBAlB,EAAAA,KAAK,CAACyB,cAAN,CAAqBjD,WAArB;AACA,SAAOwB,KAAP;AACH;;AAED,eAAevB,IAAf","sourcesContent":["import Geometry from '../Geometry';\nimport Plane from './Plane';\nimport Matrix4 from '../math/Matrix4';\nimport Vector3 from '../math/Vector3';\nimport BoundingBox from '../math/BoundingBox';\nimport vendor from '../core/vendor';\n\nvar planeMatrix = new Matrix4();\n\n/**\n * @constructor clay.geometry.Cube\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n * @param {number} [opt.depthSegments]\n * @param {boolean} [opt.inside]\n */\nvar Cube = Geometry.extend(\n/**@lends clay.geometry.Cube# */\n{\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 1,\n    /**\n     * @type {number}\n     */\n    heightSegments: 1,\n    /**\n     * @type {number}\n     */\n    depthSegments: 1,\n    /**\n     * @type {boolean}\n     */\n    inside: false\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Cube.prototype */\n{\n    /**\n     * Build cube geometry\n     */\n    build: function() {\n\n        var planes = {\n            'px': createPlane('px', this.depthSegments, this.heightSegments),\n            'nx': createPlane('nx', this.depthSegments, this.heightSegments),\n            'py': createPlane('py', this.widthSegments, this.depthSegments),\n            'ny': createPlane('ny', this.widthSegments, this.depthSegments),\n            'pz': createPlane('pz', this.widthSegments, this.heightSegments),\n            'nz': createPlane('nz', this.widthSegments, this.heightSegments),\n        };\n\n        var attrList = ['position', 'texcoord0', 'normal'];\n        var vertexNumber = 0;\n        var faceNumber = 0;\n        for (var pos in planes) {\n            vertexNumber += planes[pos].vertexCount;\n            faceNumber += planes[pos].indices.length;\n        }\n        for (var k = 0; k < attrList.length; k++) {\n            this.attributes[attrList[k]].init(vertexNumber);\n        }\n        this.indices = new vendor.Uint16Array(faceNumber);\n        var faceOffset = 0;\n        var vertexOffset = 0;\n        for (var pos in planes) {\n            var plane = planes[pos];\n            for (var k = 0; k < attrList.length; k++) {\n                var attrName = attrList[k];\n                var attrArray = plane.attributes[attrName].value;\n                var attrSize = plane.attributes[attrName].size;\n                var isNormal = attrName === 'normal';\n                for (var i = 0; i < attrArray.length; i++) {\n                    var value = attrArray[i];\n                    if (this.inside && isNormal) {\n                        value = -value;\n                    }\n                    this.attributes[attrName].value[i + attrSize * vertexOffset] = value;\n                }\n            }\n            var len = plane.indices.length;\n            for (var i = 0; i < plane.indices.length; i++) {\n                this.indices[i + faceOffset] = vertexOffset + plane.indices[this.inside ? (len - i - 1) : i];\n            }\n            faceOffset += plane.indices.length;\n            vertexOffset += plane.vertexCount;\n        }\n\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.max.set(1, 1, 1);\n        this.boundingBox.min.set(-1, -1, -1);\n    }\n});\n\nfunction createPlane(pos, widthSegments, heightSegments) {\n\n    planeMatrix.identity();\n\n    var plane = new Plane({\n        widthSegments: widthSegments,\n        heightSegments: heightSegments\n    });\n\n    switch(pos) {\n        case 'px':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_X);\n            Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'nx':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_X);\n            Matrix4.rotateY(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'py':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Y);\n            Matrix4.rotateX(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'ny':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Y);\n            Matrix4.rotateX(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'pz':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Z);\n            break;\n        case 'nz':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Z);\n            Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI);\n            break;\n    }\n    plane.applyTransform(planeMatrix);\n    return plane;\n}\n\nexport default Cube;\n"]},"metadata":{},"sourceType":"module"}