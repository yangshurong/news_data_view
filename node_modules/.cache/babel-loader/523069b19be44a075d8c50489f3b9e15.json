{"ast":null,"code":"import Light from '../Light';\nimport Vector3 from '../math/Vector3';\n/**\n * @constructor clay.light.Directional\n * @extends clay.Light\n *\n * @example\n *     var light = new clay.light.Directional({\n *         intensity: 0.5,\n *         color: [1.0, 0.0, 0.0]\n *     });\n *     light.position.set(10, 10, 10);\n *     light.lookAt(clay.Vector3.ZERO);\n *     scene.add(light);\n */\n\nvar DirectionalLight = Light.extend(\n/** @lends clay.light.Directional# */\n{\n  /**\n   * @type {number}\n   */\n  shadowBias: 0.001,\n\n  /**\n   * @type {number}\n   */\n  shadowSlopeScale: 2.0,\n\n  /**\n   * Shadow cascade.\n   * Use PSSM technique when it is larger than 1 and have a unique directional light in scene.\n   * @type {number}\n   */\n  shadowCascade: 1,\n\n  /**\n   * Available when shadowCascade is larger than 1 and have a unique directional light in scene.\n   * @type {number}\n   */\n  cascadeSplitLogFactor: 0.2\n}, {\n  type: 'DIRECTIONAL_LIGHT',\n  uniformTemplates: {\n    directionalLightDirection: {\n      type: '3f',\n      value: function value(instance) {\n        instance.__dir = instance.__dir || new Vector3(); // Direction is target to eye\n\n        return instance.__dir.copy(instance.worldTransform.z).normalize().negate().array;\n      }\n    },\n    directionalLightColor: {\n      type: '3f',\n      value: function value(instance) {\n        var color = instance.color;\n        var intensity = instance.intensity;\n        return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n      }\n    }\n  },\n\n  /**\n   * @return {clay.light.Directional}\n   * @memberOf clay.light.Directional.prototype\n   */\n  clone: function clone() {\n    var light = Light.prototype.clone.call(this);\n    light.shadowBias = this.shadowBias;\n    light.shadowSlopeScale = this.shadowSlopeScale;\n    return light;\n  }\n});\nexport default DirectionalLight;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/data_view/my_project/vue2_app/myapp/node_modules/_claygl@1.3.0@claygl/src/light/Directional.js"],"names":["Light","Vector3","DirectionalLight","extend","shadowBias","shadowSlopeScale","shadowCascade","cascadeSplitLogFactor","type","uniformTemplates","directionalLightDirection","value","instance","__dir","copy","worldTransform","z","normalize","negate","array","directionalLightColor","color","intensity","clone","light","prototype","call"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB,GAAGF,KAAK,CAACG,MAAN;AAAa;AAAsC;AACtE;AACJ;AACA;AACIC,EAAAA,UAAU,EAAE,KAJ0D;;AAKtE;AACJ;AACA;AACIC,EAAAA,gBAAgB,EAAE,GARoD;;AAStE;AACJ;AACA;AACA;AACA;AACIC,EAAAA,aAAa,EAAE,CAduD;;AAgBtE;AACJ;AACA;AACA;AACIC,EAAAA,qBAAqB,EAAE;AApB+C,CAAnD,EAqBpB;AAECC,EAAAA,IAAI,EAAE,mBAFP;AAICC,EAAAA,gBAAgB,EAAE;AACdC,IAAAA,yBAAyB,EAAE;AACvBF,MAAAA,IAAI,EAAE,IADiB;AAEvBG,MAAAA,KAAK,EAAE,eAAUC,QAAV,EAAoB;AACvBA,QAAAA,QAAQ,CAACC,KAAT,GAAiBD,QAAQ,CAACC,KAAT,IAAkB,IAAIZ,OAAJ,EAAnC,CADuB,CAEvB;;AACA,eAAOW,QAAQ,CAACC,KAAT,CAAeC,IAAf,CAAoBF,QAAQ,CAACG,cAAT,CAAwBC,CAA5C,EAA+CC,SAA/C,GAA2DC,MAA3D,GAAoEC,KAA3E;AACH;AANsB,KADb;AASdC,IAAAA,qBAAqB,EAAE;AACnBZ,MAAAA,IAAI,EAAE,IADa;AAEnBG,MAAAA,KAAK,EAAE,eAAUC,QAAV,EAAoB;AACvB,YAAIS,KAAK,GAAGT,QAAQ,CAACS,KAArB;AACA,YAAIC,SAAS,GAAGV,QAAQ,CAACU,SAAzB;AACA,eAAO,CAACD,KAAK,CAAC,CAAD,CAAL,GAAWC,SAAZ,EAAuBD,KAAK,CAAC,CAAD,CAAL,GAAWC,SAAlC,EAA6CD,KAAK,CAAC,CAAD,CAAL,GAAWC,SAAxD,CAAP;AACH;AANkB;AATT,GAJnB;;AAsBC;AACJ;AACA;AACA;AACIC,EAAAA,KAAK,EAAE,iBAAY;AACf,QAAIC,KAAK,GAAGxB,KAAK,CAACyB,SAAN,CAAgBF,KAAhB,CAAsBG,IAAtB,CAA2B,IAA3B,CAAZ;AACAF,IAAAA,KAAK,CAACpB,UAAN,GAAmB,KAAKA,UAAxB;AACAoB,IAAAA,KAAK,CAACnB,gBAAN,GAAyB,KAAKA,gBAA9B;AACA,WAAOmB,KAAP;AACH;AA/BF,CArBoB,CAAvB;AAuDA,eAAetB,gBAAf","sourcesContent":["import Light from '../Light';\nimport Vector3 from '../math/Vector3';\n\n/**\n * @constructor clay.light.Directional\n * @extends clay.Light\n *\n * @example\n *     var light = new clay.light.Directional({\n *         intensity: 0.5,\n *         color: [1.0, 0.0, 0.0]\n *     });\n *     light.position.set(10, 10, 10);\n *     light.lookAt(clay.Vector3.ZERO);\n *     scene.add(light);\n */\nvar DirectionalLight = Light.extend(/** @lends clay.light.Directional# */ {\n    /**\n     * @type {number}\n     */\n    shadowBias: 0.001,\n    /**\n     * @type {number}\n     */\n    shadowSlopeScale: 2.0,\n    /**\n     * Shadow cascade.\n     * Use PSSM technique when it is larger than 1 and have a unique directional light in scene.\n     * @type {number}\n     */\n    shadowCascade: 1,\n\n    /**\n     * Available when shadowCascade is larger than 1 and have a unique directional light in scene.\n     * @type {number}\n     */\n    cascadeSplitLogFactor: 0.2\n}, {\n\n    type: 'DIRECTIONAL_LIGHT',\n\n    uniformTemplates: {\n        directionalLightDirection: {\n            type: '3f',\n            value: function (instance) {\n                instance.__dir = instance.__dir || new Vector3();\n                // Direction is target to eye\n                return instance.__dir.copy(instance.worldTransform.z).normalize().negate().array;\n            }\n        },\n        directionalLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Directional}\n     * @memberOf clay.light.Directional.prototype\n     */\n    clone: function () {\n        var light = Light.prototype.clone.call(this);\n        light.shadowBias = this.shadowBias;\n        light.shadowSlopeScale = this.shadowSlopeScale;\n        return light;\n    }\n});\n\nexport default DirectionalLight;\n"]},"metadata":{},"sourceType":"module"}